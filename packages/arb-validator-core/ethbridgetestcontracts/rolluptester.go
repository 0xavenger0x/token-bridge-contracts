// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package ethbridgetestcontracts

import (
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
)

// NodeGraphUtilsABI is the input ABI used to generate the binding from.
const NodeGraphUtilsABI = "[]"

// NodeGraphUtilsBin is the compiled bytecode used for deploying new contracts.
var NodeGraphUtilsBin = "0x60556023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a72315820902511332f78f59ab10ed6d5feadb76df50bd85bb0895165cbb88d5db80b3cf264736f6c63430005110032"

// DeployNodeGraphUtils deploys a new Ethereum contract, binding an instance of NodeGraphUtils to it.
func DeployNodeGraphUtils(auth *bind.TransactOpts, backend bind.ContractBackend) (common.Address, *types.Transaction, *NodeGraphUtils, error) {
	parsed, err := abi.JSON(strings.NewReader(NodeGraphUtilsABI))
	if err != nil {
		return common.Address{}, nil, nil, err
	}

	address, tx, contract, err := bind.DeployContract(auth, parsed, common.FromHex(NodeGraphUtilsBin), backend)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &NodeGraphUtils{NodeGraphUtilsCaller: NodeGraphUtilsCaller{contract: contract}, NodeGraphUtilsTransactor: NodeGraphUtilsTransactor{contract: contract}, NodeGraphUtilsFilterer: NodeGraphUtilsFilterer{contract: contract}}, nil
}

// NodeGraphUtils is an auto generated Go binding around an Ethereum contract.
type NodeGraphUtils struct {
	NodeGraphUtilsCaller     // Read-only binding to the contract
	NodeGraphUtilsTransactor // Write-only binding to the contract
	NodeGraphUtilsFilterer   // Log filterer for contract events
}

// NodeGraphUtilsCaller is an auto generated read-only Go binding around an Ethereum contract.
type NodeGraphUtilsCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// NodeGraphUtilsTransactor is an auto generated write-only Go binding around an Ethereum contract.
type NodeGraphUtilsTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// NodeGraphUtilsFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type NodeGraphUtilsFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// NodeGraphUtilsSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type NodeGraphUtilsSession struct {
	Contract     *NodeGraphUtils   // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// NodeGraphUtilsCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type NodeGraphUtilsCallerSession struct {
	Contract *NodeGraphUtilsCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts         // Call options to use throughout this session
}

// NodeGraphUtilsTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type NodeGraphUtilsTransactorSession struct {
	Contract     *NodeGraphUtilsTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts         // Transaction auth options to use throughout this session
}

// NodeGraphUtilsRaw is an auto generated low-level Go binding around an Ethereum contract.
type NodeGraphUtilsRaw struct {
	Contract *NodeGraphUtils // Generic contract binding to access the raw methods on
}

// NodeGraphUtilsCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type NodeGraphUtilsCallerRaw struct {
	Contract *NodeGraphUtilsCaller // Generic read-only contract binding to access the raw methods on
}

// NodeGraphUtilsTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type NodeGraphUtilsTransactorRaw struct {
	Contract *NodeGraphUtilsTransactor // Generic write-only contract binding to access the raw methods on
}

// NewNodeGraphUtils creates a new instance of NodeGraphUtils, bound to a specific deployed contract.
func NewNodeGraphUtils(address common.Address, backend bind.ContractBackend) (*NodeGraphUtils, error) {
	contract, err := bindNodeGraphUtils(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &NodeGraphUtils{NodeGraphUtilsCaller: NodeGraphUtilsCaller{contract: contract}, NodeGraphUtilsTransactor: NodeGraphUtilsTransactor{contract: contract}, NodeGraphUtilsFilterer: NodeGraphUtilsFilterer{contract: contract}}, nil
}

// NewNodeGraphUtilsCaller creates a new read-only instance of NodeGraphUtils, bound to a specific deployed contract.
func NewNodeGraphUtilsCaller(address common.Address, caller bind.ContractCaller) (*NodeGraphUtilsCaller, error) {
	contract, err := bindNodeGraphUtils(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &NodeGraphUtilsCaller{contract: contract}, nil
}

// NewNodeGraphUtilsTransactor creates a new write-only instance of NodeGraphUtils, bound to a specific deployed contract.
func NewNodeGraphUtilsTransactor(address common.Address, transactor bind.ContractTransactor) (*NodeGraphUtilsTransactor, error) {
	contract, err := bindNodeGraphUtils(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &NodeGraphUtilsTransactor{contract: contract}, nil
}

// NewNodeGraphUtilsFilterer creates a new log filterer instance of NodeGraphUtils, bound to a specific deployed contract.
func NewNodeGraphUtilsFilterer(address common.Address, filterer bind.ContractFilterer) (*NodeGraphUtilsFilterer, error) {
	contract, err := bindNodeGraphUtils(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &NodeGraphUtilsFilterer{contract: contract}, nil
}

// bindNodeGraphUtils binds a generic wrapper to an already deployed contract.
func bindNodeGraphUtils(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(NodeGraphUtilsABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_NodeGraphUtils *NodeGraphUtilsRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _NodeGraphUtils.Contract.NodeGraphUtilsCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_NodeGraphUtils *NodeGraphUtilsRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _NodeGraphUtils.Contract.NodeGraphUtilsTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_NodeGraphUtils *NodeGraphUtilsRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _NodeGraphUtils.Contract.NodeGraphUtilsTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_NodeGraphUtils *NodeGraphUtilsCallerRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _NodeGraphUtils.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_NodeGraphUtils *NodeGraphUtilsTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _NodeGraphUtils.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_NodeGraphUtils *NodeGraphUtilsTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _NodeGraphUtils.Contract.contract.Transact(opts, method, params...)
}

// RollupTesterABI is the input ABI used to generate the binding from.
const RollupTesterABI = "[{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"from\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"}],\"name\":\"calculateLeafFromPath\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"prevNodeHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"deadlineTicks\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"nodeDataHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"childType\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"vmProtoStateHash\",\"type\":\"bytes32\"}],\"name\":\"childNodeHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32[8]\",\"name\":\"fields\",\"type\":\"bytes32[8]\"},{\"internalType\":\"uint256[5]\",\"name\":\"fields2\",\"type\":\"uint256[5]\"},{\"internalType\":\"uint32\",\"name\":\"prevChildType\",\"type\":\"uint32\"},{\"internalType\":\"uint64\",\"name\":\"numSteps\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"numArbGas\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"messageCount\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"logCount\",\"type\":\"uint64\"}],\"name\":\"computePrevLeaf\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"prevLeaf\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"vmProtoHashBefore\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"machineHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"inboxTop\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"inboxCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"messageCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"logCount\",\"type\":\"uint256\"}],\"name\":\"computeProtoHashBefore\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"confNode\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"initalProtoStateHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"beforeSendCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"branches\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"deadlineTicks\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"challengeNodeData\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"logsAcc\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"vmProtoStateHashes\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256[]\",\"name\":\"messageCounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"messages\",\"type\":\"bytes\"}],\"name\":\"confirm\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"validNodeHashes\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32\",\"name\":\"lastNode\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"gracePeriodTicks\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"checkTimeTicks\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadlineTicks\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[8]\",\"name\":\"fields\",\"type\":\"bytes32[8]\"},{\"internalType\":\"uint256[5]\",\"name\":\"fields2\",\"type\":\"uint256[5]\"},{\"internalType\":\"uint32\",\"name\":\"prevChildType\",\"type\":\"uint32\"},{\"internalType\":\"uint64\",\"name\":\"numSteps\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"numArbGas\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"messageCount\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"logCount\",\"type\":\"uint64\"}],\"name\":\"generateInvalidExecutionLeaf\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256[4]\",\"name\":\"invalidInboxData\",\"type\":\"uint256[4]\"},{\"internalType\":\"bytes32[8]\",\"name\":\"fields\",\"type\":\"bytes32[8]\"},{\"internalType\":\"uint256[5]\",\"name\":\"fields2\",\"type\":\"uint256[5]\"},{\"internalType\":\"uint32\",\"name\":\"prevChildType\",\"type\":\"uint32\"},{\"internalType\":\"uint64\",\"name\":\"numSteps\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"numArbGas\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"messageCount\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"logCount\",\"type\":\"uint64\"}],\"name\":\"generateInvalidInboxTopLeaf\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"messages\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"startOffset\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"generateLastMessageHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"deadlineTicks\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[8]\",\"name\":\"fields\",\"type\":\"bytes32[8]\"},{\"internalType\":\"uint256[5]\",\"name\":\"fields2\",\"type\":\"uint256[5]\"},{\"internalType\":\"uint32\",\"name\":\"prevChildType\",\"type\":\"uint32\"},{\"internalType\":\"uint64\",\"name\":\"numSteps\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"numArbGas\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"messageCount\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"logCount\",\"type\":\"uint64\"}],\"name\":\"generateValidLeaf\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"logsAcc\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"vmProtoStateHashes\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256[]\",\"name\":\"messageCounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"messages\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"validNum\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"beforeSendCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startOffset\",\"type\":\"uint256\"}],\"name\":\"processValidNode\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"afterSendCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"afterOffset\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"nodeDataHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"vmProtoStateHash\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"}]"

// RollupTesterFuncSigs maps the 4-byte function signature to its string representation.
var RollupTesterFuncSigs = map[string]string{
	"9584b946": "calculateLeafFromPath(bytes32,bytes32[])",
	"df8f77ed": "childNodeHash(bytes32,uint256,bytes32,uint256,bytes32)",
	"28ef9d40": "computePrevLeaf(bytes32[8],uint256[5],uint32,uint64,uint64,uint64,uint64)",
	"47994dc6": "computeProtoHashBefore(bytes32,bytes32,uint256,uint256,uint256)",
	"dcea8ab2": "confirm(bytes32,bytes32,uint256,uint256[],uint256[],bytes32[],bytes32[],bytes32[],uint256[],bytes)",
	"5f2de795": "generateInvalidExecutionLeaf(uint256,uint256,uint256,bytes32[8],uint256[5],uint32,uint64,uint64,uint64,uint64)",
	"65aee548": "generateInvalidInboxTopLeaf(uint256[4],bytes32[8],uint256[5],uint32,uint64,uint64,uint64,uint64)",
	"02be0bd0": "generateLastMessageHash(bytes,uint256,uint256)",
	"785b5774": "generateValidLeaf(uint256,bytes32[8],uint256[5],uint32,uint64,uint64,uint64,uint64)",
	"b1fca916": "processValidNode(bytes32[],bytes32[],uint256[],bytes,uint256,uint256,uint256)",
}

// RollupTesterBin is the compiled bytecode used for deploying new contracts.
var RollupTesterBin = "0x608060405234801561001057600080fd5b50612724806100206000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c8063785b577411610066578063785b5774146103eb5780639584b9461461049c578063b1fca91614610544578063dcea8ab21461079f578063df8f77ed14610bbe5761009e565b806302be0bd0146100a357806328ef9d401461016557806347994dc6146102115780635f2de7951461025857806365aee54814610313575b600080fd5b61014c600480360360608110156100b957600080fd5b810190602081018135600160201b8111156100d357600080fd5b8201836020820111156100e557600080fd5b803590602001918460018302840111600160201b8311171561010657600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295505082359350505060200135610bf3565b6040805192835260208301919091528051918290030190f35b61014c600480360361024081101561017c57600080fd5b810190808061010001906008806020026040519081016040528092919082600860200280828437600092019190915250506040805160a0818101909252929594938181019392509060059083908390808284376000920191909152509194505063ffffffff8235169250506001600160401b036020820135811691604081013582169160608201358116916080013516610c0d565b610246600480360360a081101561022757600080fd5b5080359060208101359060408101359060608101359060800135610c43565b60408051918252519081900360200190f35b61024660048036036102a081101561026f57600080fd5b604080516101008181018352843594602081013594938101359381019290916101608301919060608401906008908390839080828437600092019190915250506040805160a0818101909252929594938181019392509060059083908390808284376000920191909152509194505063ffffffff8235169250506001600160401b036020820135811691604081013582169160608201358116916080013516610c5c565b61024660048036036102c081101561032a57600080fd5b8101908080608001906004806020026040519081016040528092919082600460200280828437600092019190915250506040805161010081810190925292959493818101939250906008908390839080828437600092019190915250506040805160a0818101909252929594938181019392509060059083908390808284376000920191909152509194505063ffffffff8235169250506001600160401b036020820135811691604081013582169160608201358116916080013516610c93565b610246600480360361026081101561040257600080fd5b6040805161010081810190925283359392830192916101208301919060208401906008908390839080828437600092019190915250506040805160a0818101909252929594938181019392509060059083908390808284376000920191909152509194505063ffffffff8235169250506001600160401b036020820135811691604081013582169160608201358116916080013516610cc6565b610246600480360360408110156104b257600080fd5b81359190810190604081016020820135600160201b8111156104d357600080fd5b8201836020820111156104e557600080fd5b803590602001918460208302840111600160201b8311171561050657600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550610ceb945050505050565b610779600480360360e081101561055a57600080fd5b810190602081018135600160201b81111561057457600080fd5b82018360208201111561058657600080fd5b803590602001918460208302840111600160201b831117156105a757600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b8111156105f657600080fd5b82018360208201111561060857600080fd5b803590602001918460208302840111600160201b8311171561062957600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b81111561067857600080fd5b82018360208201111561068a57600080fd5b803590602001918460208302840111600160201b831117156106ab57600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b8111156106fa57600080fd5b82018360208201111561070c57600080fd5b803590602001918460018302840111600160201b8311171561072d57600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295505082359350505060208101359060400135610cfe565b604080519485526020850193909352838301919091526060830152519081900360800190f35b610b6360048036036101408110156107b657600080fd5b81359160208101359160408201359190810190608081016060820135600160201b8111156107e357600080fd5b8201836020820111156107f557600080fd5b803590602001918460208302840111600160201b8311171561081657600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b81111561086557600080fd5b82018360208201111561087757600080fd5b803590602001918460208302840111600160201b8311171561089857600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b8111156108e757600080fd5b8201836020820111156108f957600080fd5b803590602001918460208302840111600160201b8311171561091a57600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b81111561096957600080fd5b82018360208201111561097b57600080fd5b803590602001918460208302840111600160201b8311171561099c57600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b8111156109eb57600080fd5b8201836020820111156109fd57600080fd5b803590602001918460208302840111600160201b83111715610a1e57600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b811115610a6d57600080fd5b820183602082011115610a7f57600080fd5b803590602001918460208302840111600160201b83111715610aa057600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b811115610aef57600080fd5b820183602082011115610b0157600080fd5b803590602001918460018302840111600160201b83111715610b2257600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610de9945050505050565b6040518080602001838152602001828103825284818151815260200191508051906020019060200280838360005b83811015610ba9578181015183820152602001610b91565b50505050905001935050505060405180910390f35b610246600480360360a0811015610bd457600080fd5b5080359060208101359060408101359060608101359060800135610e49565b600080610c01858585610e58565b91509150935093915050565b600080610c1861259f565b610c278a8a8a8a8a8a8a610eca565b9050610c3281611042565b925092505097509795505050505050565b6000610c52868686868661109c565b9695505050505050565b6000610c6661259f565b610c7589898989898989610eca565b9050610c83818d8d8d6110e2565b9c9b505050505050505050505050565b6000610c9d61259f565b610cac89898989898989610eca565b9050610cb8818b61110d565b9a9950505050505050505050565b6000610cd061259f565b610cdf89898989898989610eca565b9050610cb8818b61114c565b6000610cf7838361116e565b9392505050565b600080600080610dd46040518061012001604052806000801b8152602001600081526020016000604051908082528060200260200182016040528015610d4e578160200160208202803883390190505b5081526020016000604051908082528060200260200182016040528015610d7f578160200160208202803883390190505b5081526020016000604051908082528060200260200182016040528015610db0578160200160208202803883390190505b5081526020018d81526020018c81526020018b81526020018a81525088888861117e565b929e919d509b50909950975050505050505050565b60606000610e366040518061012001604052808d81526020018c81526020018b81526020018a8152602001898152602001888152602001878152602001868152602001858152508d61120d565b915091509a509a98505050505050505050565b6000610c5286868686866112d1565b60008080610e646125fc565b8560005b86811015610ebb57610e7a8983611339565b9350915083610e88846114c4565b60408051602080820194909452808201929092528051808303820181526060909201905280519101209350600101610e68565b50919791965090945050505050565b610ed261259f565b610eda612630565b60408051610180810182526001600160401b03888116825287166020808301919091528b51828401528b0151606080830191909152918b01516080820152908a015160a0820152600060c082015260e081018a600460200201518152602001856001600160401b031681526020016000801b81526020018a600560088110610f5e57fe5b60200201518152602001846001600160401b0316815250905060405180610120016040528089600060058110610f9057fe5b602002015181526020018a600660088110610fa757fe5b6020020151815260200189600160058110610fbe57fe5b602002015181526020018a600760088110610fd557fe5b602002015181526020018863ffffffff16815260200189600260058110610ff857fe5b602002015181526020018960036005811061100f57fe5b602002015181526020018960046005811061102657fe5b6020020151815260200182815250915050979650505050505050565b600080611070836101000151604001518461010001516080015185600001518660c001518760e0015161109c565b9050611095836020015184604001518560600151866080015163ffffffff16856112d1565b9150915091565b60408051602080820197909752808201959095526060850193909352608084019190915260a0808401919091528151808403909101815260c09092019052805191012090565b60008060006110f087611042565b91509150611102878386848a8a6115e9565b979650505050505050565b600080600061111b85611042565b6060860151865160208801516040890151949650929450611143938993879392918790611617565b95945050505050565b60008061115884611042565b50905061116684828561166b565b949350505050565b6000610cf78383600085516116f7565b60008060008060008860e00151888151811061119657fe5b602002602001015190506000806111b38b61010001518985610e58565b9150915060006111da838d60a001518d815181106111cd57fe5b602002602001015161175f565b905060008c60c001518c815181106111ee57fe5b60209081029190910101519a9094019c919b5099509650505050505050565b6060600061121a8461178b565b6040808501515160e086015151825181815260208083028201019093529091818015611250578160200160208202803883390190505b50935061125b612694565b61126e87600001518860200151886119b3565b90506000805b848110156112bf576112878984836119f4565b909350915081156112b7578260a00151876001856000015103815181106112aa57fe5b6020026020010181815250505b600101611274565b505060a00151925050505b9250929050565b6040805160208082018490528183018790526060820186905260808083018690528351808403909101815260a08301845280519082012060c0830189905260e08084019190915283518084039091018152610100909201909252805191012095945050505050565b60006113436125fc565b83518310611389576040805162461bcd60e51b815260206004820152600e60248201526d1a5b9d985b1a59081bd9999cd95d60921b604482015290519081900360640190fd5b6000806113968686611ad6565b915091506113a2611afd565b60ff168160ff1614156113d65760006113bb8784611b02565b9093509050826113ca82611b76565b945094505050506112ca565b6113de611c28565b60ff168160ff161415611400576113f58683611c2d565b9350935050506112ca565b611408611ccf565b60ff168160ff16141561141f576113f58683611cd4565b611427611d68565b60ff168160ff1610158015611448575061143f611d6d565b60ff168160ff16105b15611484576000611457611d68565b820390506060611468828986611d72565b90945090508361147782611e0b565b95509550505050506112ca565b6040805162461bcd60e51b815260206004820152601060248201526f696e76616c69642074797065636f646560801b604482015290519081900360640190fd5b60006114ce611afd565b60ff16826060015160ff1614156114f15781516114ea90611f1d565b90506115e4565b6114f9611c28565b60ff16826060015160ff161415611517576114ea8260200151611f41565b61151f611ccf565b60ff16826060015160ff16141561154157815160808301516114ea919061203e565b611549611d68565b60ff16826060015160ff161415611582576115626125fc565b61156f836040015161208f565b905061157a816114c4565b9150506115e4565b61158a6121e7565b60ff16826060015160ff1614156115a3575080516115e4565b6040805162461bcd60e51b8152602060048201526011602482015270496e76616c6964207479706520636f646560781b604482015290519081900360640190fd5b919050565b600061110286866116096116018b61010001516121ec565b86880161175f565b611611611c28565b886112d1565b60008061163a89610100015160a00151878b60a001518c600001510188036122fc565b905061165e88886116568461164f6001612333565b880161175f565b611611611afd565b9998505050505050505050565b6000611166838361168f87610100015160e00151886101000151610140015161175f565b611697611ccf565b6116f2896101000151606001518a610100015160a001518b60a001518c60000151018c610100015161010001516001600160401b03168d60c00151018d610100015161016001516001600160401b03168e60e001510161109c565b6112d1565b600084835b83811015611755578186828151811061171157fe5b6020026020010151604051602001808381526020018281526020019250505060405160208183030381529060405280519060200120915080806001019150506116fc565b5095945050505050565b604080516020808201949094528082019290925280518083038201815260609092019052805191012090565b6040808201515160e08301515160c084015151835180850190945260088452670434f4e465f494e560c41b60208501529192909182146118495760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561180e5781810151838201526020016117f6565b50505050905090810190601f16801561183b5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50808360a001515114604051806040016040528060088152602001670434f4e465f494e560c41b815250906118bf5760405162461bcd60e51b815260206004820181815283516024840152835190928392604490910191908501908083836000831561180e5781810151838201526020016117f6565b508183606001515114604051806040016040528060088152602001670434f4e465f494e560c41b815250906119355760405162461bcd60e51b815260206004820181815283516024840152835190928392604490910191908501908083836000831561180e5781810151838201526020016117f6565b5080820383608001515114604051806040016040528060088152602001670434f4e465f494e560c41b815250906119ad5760405162461bcd60e51b815260206004820181815283516024840152835190928392604490910191908501908083836000831561180e5781810151838201526020016117f6565b50505050565b6119bb612694565b6040518060c001604052806000815260200160008152602001600081526020018581526020018481526020018381525090509392505050565b6119fc612694565b60008085604001518481518110611a0f57fe5b602002602001015190506000611a23611ccf565b8214905060008115611a6a57611a4788886000015189608001518a6040015161117e565b60608b015260408a01919091526080890191909152875160010188529050611a99565b8760800151876020015181518110611a7e57fe5b60200260200101519050866020018051809190600101815250505b611ac58760a0015189606001518881518110611ab157fe5b602002602001015183868b606001516112d1565b60a088015250949694955050505050565b60008082600101848481518110611ae957fe5b016020015190925060f81c90509250929050565b600090565b60008082845110158015611b1a575060208385510310155b611b57576040805162461bcd60e51b81526020600482015260096024820152681d1bdbc81cda1bdc9d60ba1b604482015290519081900360640190fd5b60208301611b6b858563ffffffff61233a16565b915091509250929050565b611b7e6125fc565b6040805160a0810182528381528151606081018352600080825260208281018290528451828152808201865293949085019390830191611bd4565b611bc16125fc565b815260200190600190039081611bb95790505b50905281526040805160008082526020828101909352919092019190611c10565b611bfd6125fc565b815260200190600190039081611bf55790505b50815260006020820152600160409091015292915050565b600190565b6000611c376125fc565b82600080611c436125fc565b6000611c4f8986611ad6565b9095509350611c5e8986611ad6565b9095509250600160ff85161415611c7f57611c798986611339565b90955091505b611c898986612393565b9095509050600160ff85161415611cb45784611ca68483856123aa565b9650965050505050506112ca565b84611cbf8483612425565b9650965050505050509250929050565b600290565b6000611cde6125fc565b82845110158015611cf3575060408385510310155b611d2f576040805162461bcd60e51b81526020600482015260086024820152671d1bc81cda1bdc9d60c21b604482015290519081900360640190fd5b600080611d3c8686612393565b9094509150611d4b8685611b02565b909450905083611d5b8383612480565b9350935050509250929050565b600390565b600c90565b60006060600083905060608660ff16604051908082528060200260200182016040528015611dba57816020015b611da76125fc565b815260200190600190039081611d9f5790505b50905060005b8760ff168160ff161015611dfe57611dd88784611339565b8351849060ff8516908110611de957fe5b60209081029190910101529250600101611dc0565b5090969095509350505050565b611e136125fc565b611e1d8251612531565b611e6e576040805162461bcd60e51b815260206004820152601a60248201527f5475706c65206d75737420686176652076616c69642073697a65000000000000604482015290519081900360640190fd5b600160005b8351811015611ea557838181518110611e8857fe5b602002602001015160800151820191508080600101915050611e73565b506040805160a0810182526000808252825160608101845281815260208181018390528451838152808201865293949085019391929083019190611eff565b611eec6125fc565b815260200190600190039081611ee45790505b50905281526020810194909452600360408501526060909301525090565b60408051602080820193909352815180820384018152908201909152805191012090565b6000600282604001515110611f5257fe5b604082015151611fb757611f64611c28565b8251602080850151604080516001600160f81b031960f896871b8116828601529490951b9093166021850152602280850191909152825180850390910181526042909301909152815191012090506115e4565b611fbf611c28565b8260000151611fe58460400151600081518110611fd857fe5b60200260200101516114c4565b8460200151604051602001808560ff1660ff1660f81b81526001018460ff1660ff1660f81b8152600101838152602001828152602001945050505050604051602081830303815290604052805190602001209050919050565b6000612048611d68565b8383604051602001808460ff1660ff1660f81b8152600101838152602001828152602001935050505060405160208183030381529060405280519060200120905092915050565b6120976125fc565b6008825111156120e5576040805162461bcd60e51b8152602060048201526014602482015273092dcecc2d8d2c840e8eae0d8ca40d8cadccee8d60631b604482015290519081900360640190fd5b60608251604051908082528060200260200182016040528015612112578160200160208202803883390190505b508051909150600160005b8281101561217557612134868281518110611fd857fe5b84828151811061214057fe5b60200260200101818152505085818151811061215857fe5b60200260200101516080015182019150808060010191505061211d565b506000835184604051602001808360ff1660ff1660f81b8152600101828051906020019060200280838360005b838110156121ba5781810151838201526020016121a2565b5050505090500192505050604051602081830303815290604052805190602001209050610c528183612480565b606490565b6000816000015182602001518360400151846060015185608001518660a001518760c001518860e001518961010001518a61012001518b61014001518c6101600151604051602001808d6001600160401b03166001600160401b031660c01b81526008018c6001600160401b03166001600160401b031660c01b81526008018b81526020018a8152602001898152602001888152602001878152602001868152602001856001600160401b03166001600160401b031660c01b8152600801848152602001838152602001826001600160401b03166001600160401b031660c01b81526008019c50505050505050505050505050604051602081830303815290604052805190602001209050919050565b6040805160208082019590955280820193909352606080840192909252805180840390920182526080909201909152805191012090565b6103e80290565b6000816020018351101561238a576040805162461bcd60e51b815260206004820152601260248201527152656164206f7574206f6620626f756e647360701b604482015290519081900360640190fd5b50016020015190565b60008060208301611b6b858563ffffffff61233a16565b6123b26125fc565b604080516001808252818301909252606091816020015b6123d16125fc565b8152602001906001900390816123c957905050905082816000815181106123f457fe5b602002602001018190525061114360405180606001604052808760ff16815260200186815260200183815250612538565b61242d6125fc565b6040805160608101825260ff851681526020808201859052825160008082529181018452610cf793830191612478565b6124656125fc565b81526020019060019003908161245d5790505b509052612538565b6124886125fc565b6040805160a08101825284815281516060810183526000808252602082810182905284518281528082018652939490850193908301916124de565b6124cb6125fc565b8152602001906001900390816124c35790505b5090528152604080516000808252602082810190935291909201919061251a565b6125076125fc565b8152602001906001900390816124ff5790505b508152600260208201526040019290925250919050565b6008101590565b6125406125fc565b6040805160a0810182526000808252602080830186905283518281529081018452919283019190612587565b6125746125fc565b81526020019060019003908161256c5790505b50815260016020820181905260409091015292915050565b60405180610120016040528060008152602001600080191681526020016000815260200160008019168152602001600063ffffffff1681526020016000815260200160008152602001600081526020016125f7612630565b905290565b6040518060a00160405280600081526020016126166126d0565b815260606020820181905260006040830181905291015290565b6040805161018081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e0810182905261010081018290526101208101829052610140810182905261016081019190915290565b6040518060c001604052806000815260200160008152602001600081526020016000801916815260200160008152602001600080191681525090565b604080516060808201835260008083526020830152918101919091529056fea265627a7a723158209fd230b976ec45270583226c5932aa72f67884888773bc70a117096f5c4f607f64736f6c63430005110032"

// DeployRollupTester deploys a new Ethereum contract, binding an instance of RollupTester to it.
func DeployRollupTester(auth *bind.TransactOpts, backend bind.ContractBackend) (common.Address, *types.Transaction, *RollupTester, error) {
	parsed, err := abi.JSON(strings.NewReader(RollupTesterABI))
	if err != nil {
		return common.Address{}, nil, nil, err
	}

	address, tx, contract, err := bind.DeployContract(auth, parsed, common.FromHex(RollupTesterBin), backend)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &RollupTester{RollupTesterCaller: RollupTesterCaller{contract: contract}, RollupTesterTransactor: RollupTesterTransactor{contract: contract}, RollupTesterFilterer: RollupTesterFilterer{contract: contract}}, nil
}

// RollupTester is an auto generated Go binding around an Ethereum contract.
type RollupTester struct {
	RollupTesterCaller     // Read-only binding to the contract
	RollupTesterTransactor // Write-only binding to the contract
	RollupTesterFilterer   // Log filterer for contract events
}

// RollupTesterCaller is an auto generated read-only Go binding around an Ethereum contract.
type RollupTesterCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// RollupTesterTransactor is an auto generated write-only Go binding around an Ethereum contract.
type RollupTesterTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// RollupTesterFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type RollupTesterFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// RollupTesterSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type RollupTesterSession struct {
	Contract     *RollupTester     // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// RollupTesterCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type RollupTesterCallerSession struct {
	Contract *RollupTesterCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts       // Call options to use throughout this session
}

// RollupTesterTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type RollupTesterTransactorSession struct {
	Contract     *RollupTesterTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts       // Transaction auth options to use throughout this session
}

// RollupTesterRaw is an auto generated low-level Go binding around an Ethereum contract.
type RollupTesterRaw struct {
	Contract *RollupTester // Generic contract binding to access the raw methods on
}

// RollupTesterCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type RollupTesterCallerRaw struct {
	Contract *RollupTesterCaller // Generic read-only contract binding to access the raw methods on
}

// RollupTesterTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type RollupTesterTransactorRaw struct {
	Contract *RollupTesterTransactor // Generic write-only contract binding to access the raw methods on
}

// NewRollupTester creates a new instance of RollupTester, bound to a specific deployed contract.
func NewRollupTester(address common.Address, backend bind.ContractBackend) (*RollupTester, error) {
	contract, err := bindRollupTester(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &RollupTester{RollupTesterCaller: RollupTesterCaller{contract: contract}, RollupTesterTransactor: RollupTesterTransactor{contract: contract}, RollupTesterFilterer: RollupTesterFilterer{contract: contract}}, nil
}

// NewRollupTesterCaller creates a new read-only instance of RollupTester, bound to a specific deployed contract.
func NewRollupTesterCaller(address common.Address, caller bind.ContractCaller) (*RollupTesterCaller, error) {
	contract, err := bindRollupTester(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &RollupTesterCaller{contract: contract}, nil
}

// NewRollupTesterTransactor creates a new write-only instance of RollupTester, bound to a specific deployed contract.
func NewRollupTesterTransactor(address common.Address, transactor bind.ContractTransactor) (*RollupTesterTransactor, error) {
	contract, err := bindRollupTester(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &RollupTesterTransactor{contract: contract}, nil
}

// NewRollupTesterFilterer creates a new log filterer instance of RollupTester, bound to a specific deployed contract.
func NewRollupTesterFilterer(address common.Address, filterer bind.ContractFilterer) (*RollupTesterFilterer, error) {
	contract, err := bindRollupTester(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &RollupTesterFilterer{contract: contract}, nil
}

// bindRollupTester binds a generic wrapper to an already deployed contract.
func bindRollupTester(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(RollupTesterABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_RollupTester *RollupTesterRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _RollupTester.Contract.RollupTesterCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_RollupTester *RollupTesterRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _RollupTester.Contract.RollupTesterTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_RollupTester *RollupTesterRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _RollupTester.Contract.RollupTesterTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_RollupTester *RollupTesterCallerRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _RollupTester.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_RollupTester *RollupTesterTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _RollupTester.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_RollupTester *RollupTesterTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _RollupTester.Contract.contract.Transact(opts, method, params...)
}

// CalculateLeafFromPath is a free data retrieval call binding the contract method 0x9584b946.
//
// Solidity: function calculateLeafFromPath(bytes32 from, bytes32[] proof) pure returns(bytes32)
func (_RollupTester *RollupTesterCaller) CalculateLeafFromPath(opts *bind.CallOpts, from [32]byte, proof [][32]byte) ([32]byte, error) {
	var (
		ret0 = new([32]byte)
	)
	out := ret0
	err := _RollupTester.contract.Call(opts, out, "calculateLeafFromPath", from, proof)
	return *ret0, err
}

// CalculateLeafFromPath is a free data retrieval call binding the contract method 0x9584b946.
//
// Solidity: function calculateLeafFromPath(bytes32 from, bytes32[] proof) pure returns(bytes32)
func (_RollupTester *RollupTesterSession) CalculateLeafFromPath(from [32]byte, proof [][32]byte) ([32]byte, error) {
	return _RollupTester.Contract.CalculateLeafFromPath(&_RollupTester.CallOpts, from, proof)
}

// CalculateLeafFromPath is a free data retrieval call binding the contract method 0x9584b946.
//
// Solidity: function calculateLeafFromPath(bytes32 from, bytes32[] proof) pure returns(bytes32)
func (_RollupTester *RollupTesterCallerSession) CalculateLeafFromPath(from [32]byte, proof [][32]byte) ([32]byte, error) {
	return _RollupTester.Contract.CalculateLeafFromPath(&_RollupTester.CallOpts, from, proof)
}

// ChildNodeHash is a free data retrieval call binding the contract method 0xdf8f77ed.
//
// Solidity: function childNodeHash(bytes32 prevNodeHash, uint256 deadlineTicks, bytes32 nodeDataHash, uint256 childType, bytes32 vmProtoStateHash) pure returns(bytes32)
func (_RollupTester *RollupTesterCaller) ChildNodeHash(opts *bind.CallOpts, prevNodeHash [32]byte, deadlineTicks *big.Int, nodeDataHash [32]byte, childType *big.Int, vmProtoStateHash [32]byte) ([32]byte, error) {
	var (
		ret0 = new([32]byte)
	)
	out := ret0
	err := _RollupTester.contract.Call(opts, out, "childNodeHash", prevNodeHash, deadlineTicks, nodeDataHash, childType, vmProtoStateHash)
	return *ret0, err
}

// ChildNodeHash is a free data retrieval call binding the contract method 0xdf8f77ed.
//
// Solidity: function childNodeHash(bytes32 prevNodeHash, uint256 deadlineTicks, bytes32 nodeDataHash, uint256 childType, bytes32 vmProtoStateHash) pure returns(bytes32)
func (_RollupTester *RollupTesterSession) ChildNodeHash(prevNodeHash [32]byte, deadlineTicks *big.Int, nodeDataHash [32]byte, childType *big.Int, vmProtoStateHash [32]byte) ([32]byte, error) {
	return _RollupTester.Contract.ChildNodeHash(&_RollupTester.CallOpts, prevNodeHash, deadlineTicks, nodeDataHash, childType, vmProtoStateHash)
}

// ChildNodeHash is a free data retrieval call binding the contract method 0xdf8f77ed.
//
// Solidity: function childNodeHash(bytes32 prevNodeHash, uint256 deadlineTicks, bytes32 nodeDataHash, uint256 childType, bytes32 vmProtoStateHash) pure returns(bytes32)
func (_RollupTester *RollupTesterCallerSession) ChildNodeHash(prevNodeHash [32]byte, deadlineTicks *big.Int, nodeDataHash [32]byte, childType *big.Int, vmProtoStateHash [32]byte) ([32]byte, error) {
	return _RollupTester.Contract.ChildNodeHash(&_RollupTester.CallOpts, prevNodeHash, deadlineTicks, nodeDataHash, childType, vmProtoStateHash)
}

// ComputePrevLeaf is a free data retrieval call binding the contract method 0x28ef9d40.
//
// Solidity: function computePrevLeaf(bytes32[8] fields, uint256[5] fields2, uint32 prevChildType, uint64 numSteps, uint64 numArbGas, uint64 messageCount, uint64 logCount) pure returns(bytes32 prevLeaf, bytes32 vmProtoHashBefore)
func (_RollupTester *RollupTesterCaller) ComputePrevLeaf(opts *bind.CallOpts, fields [8][32]byte, fields2 [5]*big.Int, prevChildType uint32, numSteps uint64, numArbGas uint64, messageCount uint64, logCount uint64) (struct {
	PrevLeaf          [32]byte
	VmProtoHashBefore [32]byte
}, error) {
	ret := new(struct {
		PrevLeaf          [32]byte
		VmProtoHashBefore [32]byte
	})
	out := ret
	err := _RollupTester.contract.Call(opts, out, "computePrevLeaf", fields, fields2, prevChildType, numSteps, numArbGas, messageCount, logCount)
	return *ret, err
}

// ComputePrevLeaf is a free data retrieval call binding the contract method 0x28ef9d40.
//
// Solidity: function computePrevLeaf(bytes32[8] fields, uint256[5] fields2, uint32 prevChildType, uint64 numSteps, uint64 numArbGas, uint64 messageCount, uint64 logCount) pure returns(bytes32 prevLeaf, bytes32 vmProtoHashBefore)
func (_RollupTester *RollupTesterSession) ComputePrevLeaf(fields [8][32]byte, fields2 [5]*big.Int, prevChildType uint32, numSteps uint64, numArbGas uint64, messageCount uint64, logCount uint64) (struct {
	PrevLeaf          [32]byte
	VmProtoHashBefore [32]byte
}, error) {
	return _RollupTester.Contract.ComputePrevLeaf(&_RollupTester.CallOpts, fields, fields2, prevChildType, numSteps, numArbGas, messageCount, logCount)
}

// ComputePrevLeaf is a free data retrieval call binding the contract method 0x28ef9d40.
//
// Solidity: function computePrevLeaf(bytes32[8] fields, uint256[5] fields2, uint32 prevChildType, uint64 numSteps, uint64 numArbGas, uint64 messageCount, uint64 logCount) pure returns(bytes32 prevLeaf, bytes32 vmProtoHashBefore)
func (_RollupTester *RollupTesterCallerSession) ComputePrevLeaf(fields [8][32]byte, fields2 [5]*big.Int, prevChildType uint32, numSteps uint64, numArbGas uint64, messageCount uint64, logCount uint64) (struct {
	PrevLeaf          [32]byte
	VmProtoHashBefore [32]byte
}, error) {
	return _RollupTester.Contract.ComputePrevLeaf(&_RollupTester.CallOpts, fields, fields2, prevChildType, numSteps, numArbGas, messageCount, logCount)
}

// ComputeProtoHashBefore is a free data retrieval call binding the contract method 0x47994dc6.
//
// Solidity: function computeProtoHashBefore(bytes32 machineHash, bytes32 inboxTop, uint256 inboxCount, uint256 messageCount, uint256 logCount) pure returns(bytes32)
func (_RollupTester *RollupTesterCaller) ComputeProtoHashBefore(opts *bind.CallOpts, machineHash [32]byte, inboxTop [32]byte, inboxCount *big.Int, messageCount *big.Int, logCount *big.Int) ([32]byte, error) {
	var (
		ret0 = new([32]byte)
	)
	out := ret0
	err := _RollupTester.contract.Call(opts, out, "computeProtoHashBefore", machineHash, inboxTop, inboxCount, messageCount, logCount)
	return *ret0, err
}

// ComputeProtoHashBefore is a free data retrieval call binding the contract method 0x47994dc6.
//
// Solidity: function computeProtoHashBefore(bytes32 machineHash, bytes32 inboxTop, uint256 inboxCount, uint256 messageCount, uint256 logCount) pure returns(bytes32)
func (_RollupTester *RollupTesterSession) ComputeProtoHashBefore(machineHash [32]byte, inboxTop [32]byte, inboxCount *big.Int, messageCount *big.Int, logCount *big.Int) ([32]byte, error) {
	return _RollupTester.Contract.ComputeProtoHashBefore(&_RollupTester.CallOpts, machineHash, inboxTop, inboxCount, messageCount, logCount)
}

// ComputeProtoHashBefore is a free data retrieval call binding the contract method 0x47994dc6.
//
// Solidity: function computeProtoHashBefore(bytes32 machineHash, bytes32 inboxTop, uint256 inboxCount, uint256 messageCount, uint256 logCount) pure returns(bytes32)
func (_RollupTester *RollupTesterCallerSession) ComputeProtoHashBefore(machineHash [32]byte, inboxTop [32]byte, inboxCount *big.Int, messageCount *big.Int, logCount *big.Int) ([32]byte, error) {
	return _RollupTester.Contract.ComputeProtoHashBefore(&_RollupTester.CallOpts, machineHash, inboxTop, inboxCount, messageCount, logCount)
}

// Confirm is a free data retrieval call binding the contract method 0xdcea8ab2.
//
// Solidity: function confirm(bytes32 confNode, bytes32 initalProtoStateHash, uint256 beforeSendCount, uint256[] branches, uint256[] deadlineTicks, bytes32[] challengeNodeData, bytes32[] logsAcc, bytes32[] vmProtoStateHashes, uint256[] messageCounts, bytes messages) pure returns(bytes32[] validNodeHashes, bytes32 lastNode)
func (_RollupTester *RollupTesterCaller) Confirm(opts *bind.CallOpts, confNode [32]byte, initalProtoStateHash [32]byte, beforeSendCount *big.Int, branches []*big.Int, deadlineTicks []*big.Int, challengeNodeData [][32]byte, logsAcc [][32]byte, vmProtoStateHashes [][32]byte, messageCounts []*big.Int, messages []byte) (struct {
	ValidNodeHashes [][32]byte
	LastNode        [32]byte
}, error) {
	ret := new(struct {
		ValidNodeHashes [][32]byte
		LastNode        [32]byte
	})
	out := ret
	err := _RollupTester.contract.Call(opts, out, "confirm", confNode, initalProtoStateHash, beforeSendCount, branches, deadlineTicks, challengeNodeData, logsAcc, vmProtoStateHashes, messageCounts, messages)
	return *ret, err
}

// Confirm is a free data retrieval call binding the contract method 0xdcea8ab2.
//
// Solidity: function confirm(bytes32 confNode, bytes32 initalProtoStateHash, uint256 beforeSendCount, uint256[] branches, uint256[] deadlineTicks, bytes32[] challengeNodeData, bytes32[] logsAcc, bytes32[] vmProtoStateHashes, uint256[] messageCounts, bytes messages) pure returns(bytes32[] validNodeHashes, bytes32 lastNode)
func (_RollupTester *RollupTesterSession) Confirm(confNode [32]byte, initalProtoStateHash [32]byte, beforeSendCount *big.Int, branches []*big.Int, deadlineTicks []*big.Int, challengeNodeData [][32]byte, logsAcc [][32]byte, vmProtoStateHashes [][32]byte, messageCounts []*big.Int, messages []byte) (struct {
	ValidNodeHashes [][32]byte
	LastNode        [32]byte
}, error) {
	return _RollupTester.Contract.Confirm(&_RollupTester.CallOpts, confNode, initalProtoStateHash, beforeSendCount, branches, deadlineTicks, challengeNodeData, logsAcc, vmProtoStateHashes, messageCounts, messages)
}

// Confirm is a free data retrieval call binding the contract method 0xdcea8ab2.
//
// Solidity: function confirm(bytes32 confNode, bytes32 initalProtoStateHash, uint256 beforeSendCount, uint256[] branches, uint256[] deadlineTicks, bytes32[] challengeNodeData, bytes32[] logsAcc, bytes32[] vmProtoStateHashes, uint256[] messageCounts, bytes messages) pure returns(bytes32[] validNodeHashes, bytes32 lastNode)
func (_RollupTester *RollupTesterCallerSession) Confirm(confNode [32]byte, initalProtoStateHash [32]byte, beforeSendCount *big.Int, branches []*big.Int, deadlineTicks []*big.Int, challengeNodeData [][32]byte, logsAcc [][32]byte, vmProtoStateHashes [][32]byte, messageCounts []*big.Int, messages []byte) (struct {
	ValidNodeHashes [][32]byte
	LastNode        [32]byte
}, error) {
	return _RollupTester.Contract.Confirm(&_RollupTester.CallOpts, confNode, initalProtoStateHash, beforeSendCount, branches, deadlineTicks, challengeNodeData, logsAcc, vmProtoStateHashes, messageCounts, messages)
}

// GenerateInvalidExecutionLeaf is a free data retrieval call binding the contract method 0x5f2de795.
//
// Solidity: function generateInvalidExecutionLeaf(uint256 gracePeriodTicks, uint256 checkTimeTicks, uint256 deadlineTicks, bytes32[8] fields, uint256[5] fields2, uint32 prevChildType, uint64 numSteps, uint64 numArbGas, uint64 messageCount, uint64 logCount) pure returns(bytes32)
func (_RollupTester *RollupTesterCaller) GenerateInvalidExecutionLeaf(opts *bind.CallOpts, gracePeriodTicks *big.Int, checkTimeTicks *big.Int, deadlineTicks *big.Int, fields [8][32]byte, fields2 [5]*big.Int, prevChildType uint32, numSteps uint64, numArbGas uint64, messageCount uint64, logCount uint64) ([32]byte, error) {
	var (
		ret0 = new([32]byte)
	)
	out := ret0
	err := _RollupTester.contract.Call(opts, out, "generateInvalidExecutionLeaf", gracePeriodTicks, checkTimeTicks, deadlineTicks, fields, fields2, prevChildType, numSteps, numArbGas, messageCount, logCount)
	return *ret0, err
}

// GenerateInvalidExecutionLeaf is a free data retrieval call binding the contract method 0x5f2de795.
//
// Solidity: function generateInvalidExecutionLeaf(uint256 gracePeriodTicks, uint256 checkTimeTicks, uint256 deadlineTicks, bytes32[8] fields, uint256[5] fields2, uint32 prevChildType, uint64 numSteps, uint64 numArbGas, uint64 messageCount, uint64 logCount) pure returns(bytes32)
func (_RollupTester *RollupTesterSession) GenerateInvalidExecutionLeaf(gracePeriodTicks *big.Int, checkTimeTicks *big.Int, deadlineTicks *big.Int, fields [8][32]byte, fields2 [5]*big.Int, prevChildType uint32, numSteps uint64, numArbGas uint64, messageCount uint64, logCount uint64) ([32]byte, error) {
	return _RollupTester.Contract.GenerateInvalidExecutionLeaf(&_RollupTester.CallOpts, gracePeriodTicks, checkTimeTicks, deadlineTicks, fields, fields2, prevChildType, numSteps, numArbGas, messageCount, logCount)
}

// GenerateInvalidExecutionLeaf is a free data retrieval call binding the contract method 0x5f2de795.
//
// Solidity: function generateInvalidExecutionLeaf(uint256 gracePeriodTicks, uint256 checkTimeTicks, uint256 deadlineTicks, bytes32[8] fields, uint256[5] fields2, uint32 prevChildType, uint64 numSteps, uint64 numArbGas, uint64 messageCount, uint64 logCount) pure returns(bytes32)
func (_RollupTester *RollupTesterCallerSession) GenerateInvalidExecutionLeaf(gracePeriodTicks *big.Int, checkTimeTicks *big.Int, deadlineTicks *big.Int, fields [8][32]byte, fields2 [5]*big.Int, prevChildType uint32, numSteps uint64, numArbGas uint64, messageCount uint64, logCount uint64) ([32]byte, error) {
	return _RollupTester.Contract.GenerateInvalidExecutionLeaf(&_RollupTester.CallOpts, gracePeriodTicks, checkTimeTicks, deadlineTicks, fields, fields2, prevChildType, numSteps, numArbGas, messageCount, logCount)
}

// GenerateInvalidInboxTopLeaf is a free data retrieval call binding the contract method 0x65aee548.
//
// Solidity: function generateInvalidInboxTopLeaf(uint256[4] invalidInboxData, bytes32[8] fields, uint256[5] fields2, uint32 prevChildType, uint64 numSteps, uint64 numArbGas, uint64 messageCount, uint64 logCount) pure returns(bytes32)
func (_RollupTester *RollupTesterCaller) GenerateInvalidInboxTopLeaf(opts *bind.CallOpts, invalidInboxData [4]*big.Int, fields [8][32]byte, fields2 [5]*big.Int, prevChildType uint32, numSteps uint64, numArbGas uint64, messageCount uint64, logCount uint64) ([32]byte, error) {
	var (
		ret0 = new([32]byte)
	)
	out := ret0
	err := _RollupTester.contract.Call(opts, out, "generateInvalidInboxTopLeaf", invalidInboxData, fields, fields2, prevChildType, numSteps, numArbGas, messageCount, logCount)
	return *ret0, err
}

// GenerateInvalidInboxTopLeaf is a free data retrieval call binding the contract method 0x65aee548.
//
// Solidity: function generateInvalidInboxTopLeaf(uint256[4] invalidInboxData, bytes32[8] fields, uint256[5] fields2, uint32 prevChildType, uint64 numSteps, uint64 numArbGas, uint64 messageCount, uint64 logCount) pure returns(bytes32)
func (_RollupTester *RollupTesterSession) GenerateInvalidInboxTopLeaf(invalidInboxData [4]*big.Int, fields [8][32]byte, fields2 [5]*big.Int, prevChildType uint32, numSteps uint64, numArbGas uint64, messageCount uint64, logCount uint64) ([32]byte, error) {
	return _RollupTester.Contract.GenerateInvalidInboxTopLeaf(&_RollupTester.CallOpts, invalidInboxData, fields, fields2, prevChildType, numSteps, numArbGas, messageCount, logCount)
}

// GenerateInvalidInboxTopLeaf is a free data retrieval call binding the contract method 0x65aee548.
//
// Solidity: function generateInvalidInboxTopLeaf(uint256[4] invalidInboxData, bytes32[8] fields, uint256[5] fields2, uint32 prevChildType, uint64 numSteps, uint64 numArbGas, uint64 messageCount, uint64 logCount) pure returns(bytes32)
func (_RollupTester *RollupTesterCallerSession) GenerateInvalidInboxTopLeaf(invalidInboxData [4]*big.Int, fields [8][32]byte, fields2 [5]*big.Int, prevChildType uint32, numSteps uint64, numArbGas uint64, messageCount uint64, logCount uint64) ([32]byte, error) {
	return _RollupTester.Contract.GenerateInvalidInboxTopLeaf(&_RollupTester.CallOpts, invalidInboxData, fields, fields2, prevChildType, numSteps, numArbGas, messageCount, logCount)
}

// GenerateLastMessageHash is a free data retrieval call binding the contract method 0x02be0bd0.
//
// Solidity: function generateLastMessageHash(bytes messages, uint256 startOffset, uint256 length) pure returns(bytes32, uint256)
func (_RollupTester *RollupTesterCaller) GenerateLastMessageHash(opts *bind.CallOpts, messages []byte, startOffset *big.Int, length *big.Int) ([32]byte, *big.Int, error) {
	var (
		ret0 = new([32]byte)
		ret1 = new(*big.Int)
	)
	out := &[]interface{}{
		ret0,
		ret1,
	}
	err := _RollupTester.contract.Call(opts, out, "generateLastMessageHash", messages, startOffset, length)
	return *ret0, *ret1, err
}

// GenerateLastMessageHash is a free data retrieval call binding the contract method 0x02be0bd0.
//
// Solidity: function generateLastMessageHash(bytes messages, uint256 startOffset, uint256 length) pure returns(bytes32, uint256)
func (_RollupTester *RollupTesterSession) GenerateLastMessageHash(messages []byte, startOffset *big.Int, length *big.Int) ([32]byte, *big.Int, error) {
	return _RollupTester.Contract.GenerateLastMessageHash(&_RollupTester.CallOpts, messages, startOffset, length)
}

// GenerateLastMessageHash is a free data retrieval call binding the contract method 0x02be0bd0.
//
// Solidity: function generateLastMessageHash(bytes messages, uint256 startOffset, uint256 length) pure returns(bytes32, uint256)
func (_RollupTester *RollupTesterCallerSession) GenerateLastMessageHash(messages []byte, startOffset *big.Int, length *big.Int) ([32]byte, *big.Int, error) {
	return _RollupTester.Contract.GenerateLastMessageHash(&_RollupTester.CallOpts, messages, startOffset, length)
}

// GenerateValidLeaf is a free data retrieval call binding the contract method 0x785b5774.
//
// Solidity: function generateValidLeaf(uint256 deadlineTicks, bytes32[8] fields, uint256[5] fields2, uint32 prevChildType, uint64 numSteps, uint64 numArbGas, uint64 messageCount, uint64 logCount) pure returns(bytes32)
func (_RollupTester *RollupTesterCaller) GenerateValidLeaf(opts *bind.CallOpts, deadlineTicks *big.Int, fields [8][32]byte, fields2 [5]*big.Int, prevChildType uint32, numSteps uint64, numArbGas uint64, messageCount uint64, logCount uint64) ([32]byte, error) {
	var (
		ret0 = new([32]byte)
	)
	out := ret0
	err := _RollupTester.contract.Call(opts, out, "generateValidLeaf", deadlineTicks, fields, fields2, prevChildType, numSteps, numArbGas, messageCount, logCount)
	return *ret0, err
}

// GenerateValidLeaf is a free data retrieval call binding the contract method 0x785b5774.
//
// Solidity: function generateValidLeaf(uint256 deadlineTicks, bytes32[8] fields, uint256[5] fields2, uint32 prevChildType, uint64 numSteps, uint64 numArbGas, uint64 messageCount, uint64 logCount) pure returns(bytes32)
func (_RollupTester *RollupTesterSession) GenerateValidLeaf(deadlineTicks *big.Int, fields [8][32]byte, fields2 [5]*big.Int, prevChildType uint32, numSteps uint64, numArbGas uint64, messageCount uint64, logCount uint64) ([32]byte, error) {
	return _RollupTester.Contract.GenerateValidLeaf(&_RollupTester.CallOpts, deadlineTicks, fields, fields2, prevChildType, numSteps, numArbGas, messageCount, logCount)
}

// GenerateValidLeaf is a free data retrieval call binding the contract method 0x785b5774.
//
// Solidity: function generateValidLeaf(uint256 deadlineTicks, bytes32[8] fields, uint256[5] fields2, uint32 prevChildType, uint64 numSteps, uint64 numArbGas, uint64 messageCount, uint64 logCount) pure returns(bytes32)
func (_RollupTester *RollupTesterCallerSession) GenerateValidLeaf(deadlineTicks *big.Int, fields [8][32]byte, fields2 [5]*big.Int, prevChildType uint32, numSteps uint64, numArbGas uint64, messageCount uint64, logCount uint64) ([32]byte, error) {
	return _RollupTester.Contract.GenerateValidLeaf(&_RollupTester.CallOpts, deadlineTicks, fields, fields2, prevChildType, numSteps, numArbGas, messageCount, logCount)
}

// ProcessValidNode is a free data retrieval call binding the contract method 0xb1fca916.
//
// Solidity: function processValidNode(bytes32[] logsAcc, bytes32[] vmProtoStateHashes, uint256[] messageCounts, bytes messages, uint256 validNum, uint256 beforeSendCount, uint256 startOffset) pure returns(uint256 afterSendCount, uint256 afterOffset, bytes32 nodeDataHash, bytes32 vmProtoStateHash)
func (_RollupTester *RollupTesterCaller) ProcessValidNode(opts *bind.CallOpts, logsAcc [][32]byte, vmProtoStateHashes [][32]byte, messageCounts []*big.Int, messages []byte, validNum *big.Int, beforeSendCount *big.Int, startOffset *big.Int) (struct {
	AfterSendCount   *big.Int
	AfterOffset      *big.Int
	NodeDataHash     [32]byte
	VmProtoStateHash [32]byte
}, error) {
	ret := new(struct {
		AfterSendCount   *big.Int
		AfterOffset      *big.Int
		NodeDataHash     [32]byte
		VmProtoStateHash [32]byte
	})
	out := ret
	err := _RollupTester.contract.Call(opts, out, "processValidNode", logsAcc, vmProtoStateHashes, messageCounts, messages, validNum, beforeSendCount, startOffset)
	return *ret, err
}

// ProcessValidNode is a free data retrieval call binding the contract method 0xb1fca916.
//
// Solidity: function processValidNode(bytes32[] logsAcc, bytes32[] vmProtoStateHashes, uint256[] messageCounts, bytes messages, uint256 validNum, uint256 beforeSendCount, uint256 startOffset) pure returns(uint256 afterSendCount, uint256 afterOffset, bytes32 nodeDataHash, bytes32 vmProtoStateHash)
func (_RollupTester *RollupTesterSession) ProcessValidNode(logsAcc [][32]byte, vmProtoStateHashes [][32]byte, messageCounts []*big.Int, messages []byte, validNum *big.Int, beforeSendCount *big.Int, startOffset *big.Int) (struct {
	AfterSendCount   *big.Int
	AfterOffset      *big.Int
	NodeDataHash     [32]byte
	VmProtoStateHash [32]byte
}, error) {
	return _RollupTester.Contract.ProcessValidNode(&_RollupTester.CallOpts, logsAcc, vmProtoStateHashes, messageCounts, messages, validNum, beforeSendCount, startOffset)
}

// ProcessValidNode is a free data retrieval call binding the contract method 0xb1fca916.
//
// Solidity: function processValidNode(bytes32[] logsAcc, bytes32[] vmProtoStateHashes, uint256[] messageCounts, bytes messages, uint256 validNum, uint256 beforeSendCount, uint256 startOffset) pure returns(uint256 afterSendCount, uint256 afterOffset, bytes32 nodeDataHash, bytes32 vmProtoStateHash)
func (_RollupTester *RollupTesterCallerSession) ProcessValidNode(logsAcc [][32]byte, vmProtoStateHashes [][32]byte, messageCounts []*big.Int, messages []byte, validNum *big.Int, beforeSendCount *big.Int, startOffset *big.Int) (struct {
	AfterSendCount   *big.Int
	AfterOffset      *big.Int
	NodeDataHash     [32]byte
	VmProtoStateHash [32]byte
}, error) {
	return _RollupTester.Contract.ProcessValidNode(&_RollupTester.CallOpts, logsAcc, vmProtoStateHashes, messageCounts, messages, validNum, beforeSendCount, startOffset)
}

// RollupUtilsABI is the input ABI used to generate the binding from.
const RollupUtilsABI = "[]"

// RollupUtilsBin is the compiled bytecode used for deploying new contracts.
var RollupUtilsBin = "0x60556023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a723158202368d01eb82d0033af2780ed66d88680fa54a2894a331a0f04c8ca9e807e942164736f6c63430005110032"

// DeployRollupUtils deploys a new Ethereum contract, binding an instance of RollupUtils to it.
func DeployRollupUtils(auth *bind.TransactOpts, backend bind.ContractBackend) (common.Address, *types.Transaction, *RollupUtils, error) {
	parsed, err := abi.JSON(strings.NewReader(RollupUtilsABI))
	if err != nil {
		return common.Address{}, nil, nil, err
	}

	address, tx, contract, err := bind.DeployContract(auth, parsed, common.FromHex(RollupUtilsBin), backend)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &RollupUtils{RollupUtilsCaller: RollupUtilsCaller{contract: contract}, RollupUtilsTransactor: RollupUtilsTransactor{contract: contract}, RollupUtilsFilterer: RollupUtilsFilterer{contract: contract}}, nil
}

// RollupUtils is an auto generated Go binding around an Ethereum contract.
type RollupUtils struct {
	RollupUtilsCaller     // Read-only binding to the contract
	RollupUtilsTransactor // Write-only binding to the contract
	RollupUtilsFilterer   // Log filterer for contract events
}

// RollupUtilsCaller is an auto generated read-only Go binding around an Ethereum contract.
type RollupUtilsCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// RollupUtilsTransactor is an auto generated write-only Go binding around an Ethereum contract.
type RollupUtilsTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// RollupUtilsFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type RollupUtilsFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// RollupUtilsSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type RollupUtilsSession struct {
	Contract     *RollupUtils      // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// RollupUtilsCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type RollupUtilsCallerSession struct {
	Contract *RollupUtilsCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts      // Call options to use throughout this session
}

// RollupUtilsTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type RollupUtilsTransactorSession struct {
	Contract     *RollupUtilsTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts      // Transaction auth options to use throughout this session
}

// RollupUtilsRaw is an auto generated low-level Go binding around an Ethereum contract.
type RollupUtilsRaw struct {
	Contract *RollupUtils // Generic contract binding to access the raw methods on
}

// RollupUtilsCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type RollupUtilsCallerRaw struct {
	Contract *RollupUtilsCaller // Generic read-only contract binding to access the raw methods on
}

// RollupUtilsTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type RollupUtilsTransactorRaw struct {
	Contract *RollupUtilsTransactor // Generic write-only contract binding to access the raw methods on
}

// NewRollupUtils creates a new instance of RollupUtils, bound to a specific deployed contract.
func NewRollupUtils(address common.Address, backend bind.ContractBackend) (*RollupUtils, error) {
	contract, err := bindRollupUtils(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &RollupUtils{RollupUtilsCaller: RollupUtilsCaller{contract: contract}, RollupUtilsTransactor: RollupUtilsTransactor{contract: contract}, RollupUtilsFilterer: RollupUtilsFilterer{contract: contract}}, nil
}

// NewRollupUtilsCaller creates a new read-only instance of RollupUtils, bound to a specific deployed contract.
func NewRollupUtilsCaller(address common.Address, caller bind.ContractCaller) (*RollupUtilsCaller, error) {
	contract, err := bindRollupUtils(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &RollupUtilsCaller{contract: contract}, nil
}

// NewRollupUtilsTransactor creates a new write-only instance of RollupUtils, bound to a specific deployed contract.
func NewRollupUtilsTransactor(address common.Address, transactor bind.ContractTransactor) (*RollupUtilsTransactor, error) {
	contract, err := bindRollupUtils(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &RollupUtilsTransactor{contract: contract}, nil
}

// NewRollupUtilsFilterer creates a new log filterer instance of RollupUtils, bound to a specific deployed contract.
func NewRollupUtilsFilterer(address common.Address, filterer bind.ContractFilterer) (*RollupUtilsFilterer, error) {
	contract, err := bindRollupUtils(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &RollupUtilsFilterer{contract: contract}, nil
}

// bindRollupUtils binds a generic wrapper to an already deployed contract.
func bindRollupUtils(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(RollupUtilsABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_RollupUtils *RollupUtilsRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _RollupUtils.Contract.RollupUtilsCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_RollupUtils *RollupUtilsRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _RollupUtils.Contract.RollupUtilsTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_RollupUtils *RollupUtilsRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _RollupUtils.Contract.RollupUtilsTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_RollupUtils *RollupUtilsCallerRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _RollupUtils.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_RollupUtils *RollupUtilsTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _RollupUtils.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_RollupUtils *RollupUtilsTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _RollupUtils.Contract.contract.Transact(opts, method, params...)
}

// SafeMathABI is the input ABI used to generate the binding from.
const SafeMathABI = "[]"

// SafeMathBin is the compiled bytecode used for deploying new contracts.
var SafeMathBin = "0x60556023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a72315820ea30c2ac462387739cdc66ac33e8718b485f3864bf839539036db62fa89d6c5b64736f6c63430005110032"

// DeploySafeMath deploys a new Ethereum contract, binding an instance of SafeMath to it.
func DeploySafeMath(auth *bind.TransactOpts, backend bind.ContractBackend) (common.Address, *types.Transaction, *SafeMath, error) {
	parsed, err := abi.JSON(strings.NewReader(SafeMathABI))
	if err != nil {
		return common.Address{}, nil, nil, err
	}

	address, tx, contract, err := bind.DeployContract(auth, parsed, common.FromHex(SafeMathBin), backend)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &SafeMath{SafeMathCaller: SafeMathCaller{contract: contract}, SafeMathTransactor: SafeMathTransactor{contract: contract}, SafeMathFilterer: SafeMathFilterer{contract: contract}}, nil
}

// SafeMath is an auto generated Go binding around an Ethereum contract.
type SafeMath struct {
	SafeMathCaller     // Read-only binding to the contract
	SafeMathTransactor // Write-only binding to the contract
	SafeMathFilterer   // Log filterer for contract events
}

// SafeMathCaller is an auto generated read-only Go binding around an Ethereum contract.
type SafeMathCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// SafeMathTransactor is an auto generated write-only Go binding around an Ethereum contract.
type SafeMathTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// SafeMathFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type SafeMathFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// SafeMathSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type SafeMathSession struct {
	Contract     *SafeMath         // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// SafeMathCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type SafeMathCallerSession struct {
	Contract *SafeMathCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts   // Call options to use throughout this session
}

// SafeMathTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type SafeMathTransactorSession struct {
	Contract     *SafeMathTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts   // Transaction auth options to use throughout this session
}

// SafeMathRaw is an auto generated low-level Go binding around an Ethereum contract.
type SafeMathRaw struct {
	Contract *SafeMath // Generic contract binding to access the raw methods on
}

// SafeMathCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type SafeMathCallerRaw struct {
	Contract *SafeMathCaller // Generic read-only contract binding to access the raw methods on
}

// SafeMathTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type SafeMathTransactorRaw struct {
	Contract *SafeMathTransactor // Generic write-only contract binding to access the raw methods on
}

// NewSafeMath creates a new instance of SafeMath, bound to a specific deployed contract.
func NewSafeMath(address common.Address, backend bind.ContractBackend) (*SafeMath, error) {
	contract, err := bindSafeMath(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &SafeMath{SafeMathCaller: SafeMathCaller{contract: contract}, SafeMathTransactor: SafeMathTransactor{contract: contract}, SafeMathFilterer: SafeMathFilterer{contract: contract}}, nil
}

// NewSafeMathCaller creates a new read-only instance of SafeMath, bound to a specific deployed contract.
func NewSafeMathCaller(address common.Address, caller bind.ContractCaller) (*SafeMathCaller, error) {
	contract, err := bindSafeMath(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &SafeMathCaller{contract: contract}, nil
}

// NewSafeMathTransactor creates a new write-only instance of SafeMath, bound to a specific deployed contract.
func NewSafeMathTransactor(address common.Address, transactor bind.ContractTransactor) (*SafeMathTransactor, error) {
	contract, err := bindSafeMath(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &SafeMathTransactor{contract: contract}, nil
}

// NewSafeMathFilterer creates a new log filterer instance of SafeMath, bound to a specific deployed contract.
func NewSafeMathFilterer(address common.Address, filterer bind.ContractFilterer) (*SafeMathFilterer, error) {
	contract, err := bindSafeMath(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &SafeMathFilterer{contract: contract}, nil
}

// bindSafeMath binds a generic wrapper to an already deployed contract.
func bindSafeMath(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(SafeMathABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_SafeMath *SafeMathRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _SafeMath.Contract.SafeMathCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_SafeMath *SafeMathRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _SafeMath.Contract.SafeMathTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_SafeMath *SafeMathRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _SafeMath.Contract.SafeMathTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_SafeMath *SafeMathCallerRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _SafeMath.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_SafeMath *SafeMathTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _SafeMath.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_SafeMath *SafeMathTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _SafeMath.Contract.contract.Transact(opts, method, params...)
}

// VMABI is the input ABI used to generate the binding from.
const VMABI = "[]"

// VMBin is the compiled bytecode used for deploying new contracts.
var VMBin = "0x60556023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a7231582007154bc0ffd591cec796c4063c546f80f752c0f9306516d2ac2fa3e5b3d1c2a464736f6c63430005110032"

// DeployVM deploys a new Ethereum contract, binding an instance of VM to it.
func DeployVM(auth *bind.TransactOpts, backend bind.ContractBackend) (common.Address, *types.Transaction, *VM, error) {
	parsed, err := abi.JSON(strings.NewReader(VMABI))
	if err != nil {
		return common.Address{}, nil, nil, err
	}

	address, tx, contract, err := bind.DeployContract(auth, parsed, common.FromHex(VMBin), backend)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &VM{VMCaller: VMCaller{contract: contract}, VMTransactor: VMTransactor{contract: contract}, VMFilterer: VMFilterer{contract: contract}}, nil
}

// VM is an auto generated Go binding around an Ethereum contract.
type VM struct {
	VMCaller     // Read-only binding to the contract
	VMTransactor // Write-only binding to the contract
	VMFilterer   // Log filterer for contract events
}

// VMCaller is an auto generated read-only Go binding around an Ethereum contract.
type VMCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// VMTransactor is an auto generated write-only Go binding around an Ethereum contract.
type VMTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// VMFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type VMFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// VMSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type VMSession struct {
	Contract     *VM               // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// VMCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type VMCallerSession struct {
	Contract *VMCaller     // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts // Call options to use throughout this session
}

// VMTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type VMTransactorSession struct {
	Contract     *VMTransactor     // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// VMRaw is an auto generated low-level Go binding around an Ethereum contract.
type VMRaw struct {
	Contract *VM // Generic contract binding to access the raw methods on
}

// VMCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type VMCallerRaw struct {
	Contract *VMCaller // Generic read-only contract binding to access the raw methods on
}

// VMTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type VMTransactorRaw struct {
	Contract *VMTransactor // Generic write-only contract binding to access the raw methods on
}

// NewVM creates a new instance of VM, bound to a specific deployed contract.
func NewVM(address common.Address, backend bind.ContractBackend) (*VM, error) {
	contract, err := bindVM(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &VM{VMCaller: VMCaller{contract: contract}, VMTransactor: VMTransactor{contract: contract}, VMFilterer: VMFilterer{contract: contract}}, nil
}

// NewVMCaller creates a new read-only instance of VM, bound to a specific deployed contract.
func NewVMCaller(address common.Address, caller bind.ContractCaller) (*VMCaller, error) {
	contract, err := bindVM(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &VMCaller{contract: contract}, nil
}

// NewVMTransactor creates a new write-only instance of VM, bound to a specific deployed contract.
func NewVMTransactor(address common.Address, transactor bind.ContractTransactor) (*VMTransactor, error) {
	contract, err := bindVM(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &VMTransactor{contract: contract}, nil
}

// NewVMFilterer creates a new log filterer instance of VM, bound to a specific deployed contract.
func NewVMFilterer(address common.Address, filterer bind.ContractFilterer) (*VMFilterer, error) {
	contract, err := bindVM(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &VMFilterer{contract: contract}, nil
}

// bindVM binds a generic wrapper to an already deployed contract.
func bindVM(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(VMABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_VM *VMRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _VM.Contract.VMCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_VM *VMRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _VM.Contract.VMTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_VM *VMRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _VM.Contract.VMTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_VM *VMCallerRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _VM.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_VM *VMTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _VM.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_VM *VMTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _VM.Contract.contract.Transact(opts, method, params...)
}
