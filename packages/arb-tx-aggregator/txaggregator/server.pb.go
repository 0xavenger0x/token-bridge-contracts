// Code generated by protoc-gen-go. DO NOT EDIT.
// source: server.proto

package txaggregator

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SendTransactionArgs struct {
	To                   string   `protobuf:"bytes,1,opt,name=to,proto3" json:"to,omitempty"`
	SequenceNum          string   `protobuf:"bytes,2,opt,name=sequenceNum,proto3" json:"sequenceNum,omitempty"`
	Value                string   `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	Data                 string   `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	Pubkey               string   `protobuf:"bytes,5,opt,name=pubkey,proto3" json:"pubkey,omitempty"`
	Signature            string   `protobuf:"bytes,6,opt,name=signature,proto3" json:"signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendTransactionArgs) Reset()         { *m = SendTransactionArgs{} }
func (m *SendTransactionArgs) String() string { return proto.CompactTextString(m) }
func (*SendTransactionArgs) ProtoMessage()    {}
func (*SendTransactionArgs) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{0}
}

func (m *SendTransactionArgs) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendTransactionArgs.Unmarshal(m, b)
}
func (m *SendTransactionArgs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendTransactionArgs.Marshal(b, m, deterministic)
}
func (m *SendTransactionArgs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendTransactionArgs.Merge(m, src)
}
func (m *SendTransactionArgs) XXX_Size() int {
	return xxx_messageInfo_SendTransactionArgs.Size(m)
}
func (m *SendTransactionArgs) XXX_DiscardUnknown() {
	xxx_messageInfo_SendTransactionArgs.DiscardUnknown(m)
}

var xxx_messageInfo_SendTransactionArgs proto.InternalMessageInfo

func (m *SendTransactionArgs) GetTo() string {
	if m != nil {
		return m.To
	}
	return ""
}

func (m *SendTransactionArgs) GetSequenceNum() string {
	if m != nil {
		return m.SequenceNum
	}
	return ""
}

func (m *SendTransactionArgs) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *SendTransactionArgs) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

func (m *SendTransactionArgs) GetPubkey() string {
	if m != nil {
		return m.Pubkey
	}
	return ""
}

func (m *SendTransactionArgs) GetSignature() string {
	if m != nil {
		return m.Signature
	}
	return ""
}

type SendTransactionReply struct {
	Accepted             bool     `protobuf:"varint,1,opt,name=accepted,proto3" json:"accepted,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendTransactionReply) Reset()         { *m = SendTransactionReply{} }
func (m *SendTransactionReply) String() string { return proto.CompactTextString(m) }
func (*SendTransactionReply) ProtoMessage()    {}
func (*SendTransactionReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{1}
}

func (m *SendTransactionReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendTransactionReply.Unmarshal(m, b)
}
func (m *SendTransactionReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendTransactionReply.Marshal(b, m, deterministic)
}
func (m *SendTransactionReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendTransactionReply.Merge(m, src)
}
func (m *SendTransactionReply) XXX_Size() int {
	return xxx_messageInfo_SendTransactionReply.Size(m)
}
func (m *SendTransactionReply) XXX_DiscardUnknown() {
	xxx_messageInfo_SendTransactionReply.DiscardUnknown(m)
}

var xxx_messageInfo_SendTransactionReply proto.InternalMessageInfo

func (m *SendTransactionReply) GetAccepted() bool {
	if m != nil {
		return m.Accepted
	}
	return false
}

func init() {
	proto.RegisterType((*SendTransactionArgs)(nil), "txaggregator.SendTransactionArgs")
	proto.RegisterType((*SendTransactionReply)(nil), "txaggregator.SendTransactionReply")
}

func init() { proto.RegisterFile("server.proto", fileDescriptor_ad098daeda4239f7) }

var fileDescriptor_ad098daeda4239f7 = []byte{
	// 280 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x91, 0x41, 0x4f, 0x02, 0x31,
	0x10, 0x85, 0x03, 0x02, 0x81, 0x91, 0x68, 0x52, 0x89, 0x69, 0x88, 0x07, 0xe4, 0xe4, 0x85, 0xdd,
	0x04, 0x7f, 0x01, 0x9e, 0x8c, 0x07, 0x0f, 0xc8, 0xc1, 0x78, 0x9b, 0x2d, 0x43, 0xd9, 0xb0, 0xdb,
	0xae, 0xed, 0x94, 0x2c, 0xbf, 0xc8, 0xbf, 0x69, 0x52, 0x0d, 0x6c, 0x88, 0xf1, 0xd6, 0xf7, 0xbd,
	0x66, 0xfa, 0xfa, 0x06, 0x86, 0x9e, 0xdc, 0x9e, 0x5c, 0x52, 0x39, 0xcb, 0x56, 0x0c, 0xb9, 0x46,
	0xad, 0x1d, 0x69, 0x64, 0xeb, 0xa6, 0x5f, 0x2d, 0xb8, 0x79, 0x23, 0xb3, 0x5e, 0x39, 0x34, 0x1e,
	0x15, 0xe7, 0xd6, 0x2c, 0x9c, 0xf6, 0xe2, 0x0a, 0xda, 0x6c, 0x65, 0x6b, 0xd2, 0x7a, 0x18, 0x2c,
	0xdb, 0x6c, 0xc5, 0x04, 0x2e, 0x3d, 0x7d, 0x06, 0x32, 0x8a, 0x5e, 0x43, 0x29, 0xdb, 0xd1, 0x68,
	0x22, 0x31, 0x82, 0xee, 0x1e, 0x8b, 0x40, 0xf2, 0x22, 0x7a, 0x3f, 0x42, 0x08, 0xe8, 0xac, 0x91,
	0x51, 0x76, 0x22, 0x8c, 0x67, 0x71, 0x0b, 0xbd, 0x2a, 0x64, 0x3b, 0x3a, 0xc8, 0x6e, 0xa4, 0xbf,
	0x4a, 0xdc, 0xc1, 0xc0, 0xe7, 0xda, 0x20, 0x07, 0x47, 0xb2, 0x17, 0xad, 0x13, 0x98, 0xce, 0x61,
	0x74, 0x16, 0x74, 0x49, 0x55, 0x71, 0x10, 0x63, 0xe8, 0xa3, 0x52, 0x54, 0x31, 0xad, 0x63, 0xde,
	0xfe, 0xf2, 0xa8, 0xe7, 0x5b, 0x18, 0xae, 0xea, 0xc5, 0xf1, 0xb7, 0xe2, 0x1d, 0xae, 0xcf, 0x66,
	0x88, 0xfb, 0xa4, 0xd9, 0x47, 0xf2, 0x47, 0x17, 0xe3, 0xe9, 0xbf, 0x57, 0x62, 0x8a, 0xa7, 0x97,
	0x8f, 0x67, 0x9d, 0xf3, 0x36, 0x64, 0x89, 0xb2, 0x65, 0x6a, 0x37, 0x1b, 0xb5, 0xc5, 0xdc, 0x14,
	0x98, 0xf9, 0x14, 0x5d, 0x96, 0xb3, 0x0b, 0x65, 0x5a, 0xa1, 0xda, 0xa1, 0xa6, 0x48, 0x66, 0x5c,
	0xcf, 0x4e, 0x33, 0xd3, 0xe6, 0x03, 0x59, 0x2f, 0x2e, 0xea, 0xf1, 0x3b, 0x00, 0x00, 0xff, 0xff,
	0x40, 0x12, 0xf5, 0x4d, 0xb8, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TxAggregatorClient is the client API for TxAggregator service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TxAggregatorClient interface {
	SendTransaction(ctx context.Context, in *SendTransactionArgs, opts ...grpc.CallOption) (*SendTransactionReply, error)
}

type txAggregatorClient struct {
	cc *grpc.ClientConn
}

func NewTxAggregatorClient(cc *grpc.ClientConn) TxAggregatorClient {
	return &txAggregatorClient{cc}
}

func (c *txAggregatorClient) SendTransaction(ctx context.Context, in *SendTransactionArgs, opts ...grpc.CallOption) (*SendTransactionReply, error) {
	out := new(SendTransactionReply)
	err := c.cc.Invoke(ctx, "/txaggregator.TxAggregator/SendTransaction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TxAggregatorServer is the server API for TxAggregator service.
type TxAggregatorServer interface {
	SendTransaction(context.Context, *SendTransactionArgs) (*SendTransactionReply, error)
}

// UnimplementedTxAggregatorServer can be embedded to have forward compatible implementations.
type UnimplementedTxAggregatorServer struct {
}

func (*UnimplementedTxAggregatorServer) SendTransaction(ctx context.Context, req *SendTransactionArgs) (*SendTransactionReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendTransaction not implemented")
}

func RegisterTxAggregatorServer(s *grpc.Server, srv TxAggregatorServer) {
	s.RegisterService(&_TxAggregator_serviceDesc, srv)
}

func _TxAggregator_SendTransaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendTransactionArgs)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TxAggregatorServer).SendTransaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/txaggregator.TxAggregator/SendTransaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TxAggregatorServer).SendTransaction(ctx, req.(*SendTransactionArgs))
	}
	return interceptor(ctx, in, info, handler)
}

var _TxAggregator_serviceDesc = grpc.ServiceDesc{
	ServiceName: "txaggregator.TxAggregator",
	HandlerType: (*TxAggregatorServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SendTransaction",
			Handler:    _TxAggregator_SendTransaction_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "server.proto",
}
