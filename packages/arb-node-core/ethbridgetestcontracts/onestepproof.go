// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package ethbridgetestcontracts

import (
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
)

// OneStepProofABI is the input ABI used to generate the binding from.
const OneStepProofABI = "[{\"inputs\":[{\"internalType\":\"contractIBridge\",\"name\":\"bridge\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"initialMessagesRead\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[2]\",\"name\":\"accs\",\"type\":\"bytes32[2]\"},{\"internalType\":\"bytes\",\"name\":\"proof\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"bproof\",\"type\":\"bytes\"}],\"name\":\"executeStep\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"gas\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"totalMessagesRead\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[4]\",\"name\":\"fields\",\"type\":\"bytes32[4]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contractIBridge\",\"name\":\"bridge\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"initialMessagesRead\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[2]\",\"name\":\"accs\",\"type\":\"bytes32[2]\"},{\"internalType\":\"bytes\",\"name\":\"proof\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"bproof\",\"type\":\"bytes\"}],\"name\":\"executeStepDebug\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"startMachine\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"afterMachine\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]"

// OneStepProofFuncSigs maps the 4-byte function signature to its string representation.
var OneStepProofFuncSigs = map[string]string{
	"9d16dd04": "executeStep(address,uint256,bytes32[2],bytes,bytes)",
	"2ccebb7a": "executeStepDebug(address,uint256,bytes32[2],bytes,bytes)",
}

// OneStepProofBin is the compiled bytecode used for deploying new contracts.
var OneStepProofBin = "0x608060405234801561001057600080fd5b50614c3f806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80632ccebb7a1461003b5780639d16dd04146101f2575b600080fd5b610114600480360360c081101561005157600080fd5b6001600160a01b038235169160208101359160408201919081019060a081016080820135600160201b81111561008657600080fd5b82018360208201111561009857600080fd5b803590602001918460018302840111600160201b831117156100b957600080fd5b919390929091602081019035600160201b8111156100d657600080fd5b8201836020820111156100e857600080fd5b803590602001918460018302840111600160201b8311171561010957600080fd5b50909250905061031e565b604051808060200180602001838103835285818151815260200191508051906020019080838360005b8381101561015557818101518382015260200161013d565b50505050905090810190601f1680156101825780820380516001836020036101000a031916815260200191505b50838103825284518152845160209182019186019080838360005b838110156101b557818101518382015260200161019d565b50505050905090810190601f1680156101e25780820380516001836020036101000a031916815260200191505b5094505050505060405180910390f35b6102cb600480360360c081101561020857600080fd5b6001600160a01b038235169160208101359160408201919081019060a081016080820135600160201b81111561023d57600080fd5b82018360208201111561024f57600080fd5b803590602001918460018302840111600160201b8311171561027057600080fd5b919390929091602081019035600160201b81111561028d57600080fd5b82018360208201111561029f57600080fd5b803590602001918460018302840111600160201b831117156102c057600080fd5b5090925090506103e3565b604051808467ffffffffffffffff16815260200183815260200182600460200280838360005b838110156103095781810151838201526020016102f1565b50505050905001935050505060405180910390f35b606080610329614972565b6103ad898989898080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050604080516020601f8d018190048102820181019092528b815292508b91508a9081908401838280828437600081840152601f19601f820116905080830192505050505050508e6104a2565b90506103b881610958565b6103c58160200151610d66565b92506103d48160400151610d66565b91505097509795505050505050565b6000806103ee614a08565b6103f6614972565b61047a8a8a8a8a8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050604080516020601f8e018190048102820181019092528c815292508c91508b9081908401838280828437600081840152601f19601f820116905080830192505050505050508f6104a2565b905061048581610958565b61048e816110da565b935093509350509750975097945050505050565b6104aa614972565b6000846000815181106104b957fe5b602001015160f81c60f81b60f81c90506000856001815181106104d857fe5b602001015160f81c60f81b60f81c90506000866002815181106104f757fe5b016020015160f81c9050600360606004840160ff1667ffffffffffffffff8111801561052257600080fd5b5060405190808252806020026020018201604052801561055c57816020015b610549614a26565b8152602001906001900390816105415790505b50905060608360040160ff1667ffffffffffffffff8111801561057e57600080fd5b506040519080825280602002602001820160405280156105b857816020015b6105a5614a26565b81526020019060019003908161059d5790505b50905060005b8560ff168110156105f4576105d38b8561113d565b8483815181106105df57fe5b602090810291909101015293506001016105be565b5060005b8460ff1681101561062e5761060d8b8561113d565b83838151811061061957fe5b602090810291909101015293506001016105f8565b50610637614a63565b6106418b856112ff565b809250819550505060008b858151811061065757fe5b01602001516001959095019460f81c9050610670614972565b6001600160a01b038b1681526020810183905261068c836113b0565b6040820152606081018f90528d6000602002013560808201528d60016020908102919091013560a0830152600060c0830181905260408051808201825260ff8c811682528185018a905260e086019190915281518083019092528a8116825292810187905261010084015283821660018114610120850152918b1661014084015261016083018f90526101a083018e90526101c08301526101808201879052158061073a57508160ff166001145b6040518060400160405280600b81526020016a04241445f494d4d5f5459560ac1b815250906107e75760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156107ac578181015183820152602001610794565b50505050905090810190601f1680156107d95780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506107f0614a26565b60ff83166108115761080a8a836020015160000151611424565b90506108b1565b6000865111604051806040016040528060068152602001654e4f5f494d4d60d01b815250906108815760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156107ac578181015183820152602001610794565b506108ae8a8360200151600001518860018d0360ff16815181106108a157fe5b6020026020010151611488565b90505b6108ba8161150c565b60208301515260005b838a0360ff16811015610902576108fa8782815181106108df57fe5b6020026020010151846020015161167990919063ffffffff16565b6001016108c3565b5060005b8860ff168110156109435761093b86828151811061092057fe5b6020026020010151846020015161169390919063ffffffff16565b600101610906565b50909f9e505050505050505050505050505050565b6000806000612d3c61097185610140015160ff166116ad565b9350935093509350600084118061098b5750846101200151155b801561099c575060e0850151518410155b806109c3575084610120015180156109b2575083155b80156109c3575060e0850151516001145b6040518060400160405280600a815260200169535441434b5f4d414e5960b01b81525090610a325760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156107ac578181015183820152602001610794565b50610100850151516040805180820190915260088152674155585f4d414e5960c01b602082015290841015610aa85760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156107ac578181015183820152602001610794565b5060e085015151841115610b6557610ac6610ac1611e2c565b61150c565b610ad786604001516020015161150c565b146040518060400160405280600d81526020016c535441434b5f4d495353494e4760981b81525090610b4a5760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156107ac578181015183820152602001610794565b50610b56856005611e73565b50610b6085611eeb565b610c25565b61010085015151831115610c0057610b7e610ac1611e2c565b610b8f86604001516040015161150c565b146040518060400160405280600b81526020016a4155585f4d495353494e4760a81b81525090610b4a5760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156107ac578181015183820152602001610794565b610c0a8583611e73565b15610c1857610b6085611eeb565b610c25858263ffffffff16565b846101c0015115610cc75760408051600160f81b602080830191909152600060218301819052602280840191909152835180840390910181526042909201835281519101209086015160c001511415610c8a57610c858560400151611ef6565b610cc7565b60006101c0860152604085015160c081015190526101208501518015610cae575083155b610cbc5760e0850151600090525b610100850151600090525b60005b60e086015151811015610d1157610d098660e00151602001518281518110610cee57fe5b6020026020010151876040015161167990919063ffffffff16565b600101610cca565b5060005b61010086015151811015610d5e57610d56866101000151602001518281518110610d3b57fe5b6020026020010151876040015161169390919063ffffffff16565b600101610d15565b505050505050565b6060610d758260000151611f01565b610d8a610d85846020015161150c565b611f01565b610d9a610d85856040015161150c565b610daa610d85866060015161150c565b610dba610d85876080015161150c565b610dc78760a00151611fd0565b610dd48860c00151611f01565b610de4610d858a60e0015161150c565b60405160200180806709ac2c6d0d2dcca560c31b81525060080189805190602001908083835b60208310610e295780518252601f199092019160209182019101610e0a565b51815160209384036101000a60001901801990921691161790526216100560e91b919093019081528a516003909101928b0191508083835b60208310610e805780518252601f199092019160209182019101610e61565b51815160209384036101000a60001901801990921691161790526216100560e91b9190930190815289516003909101928a0191508083835b60208310610ed75780518252601f199092019160209182019101610eb8565b51815160209384036101000a60001901801990921691161790526216100560e91b919093019081528851600390910192890191508083835b60208310610f2e5780518252601f199092019160209182019101610f0f565b51815160209384036101000a60001901801990921691161790526216100560e91b919093019081528751600390910192880191508083835b60208310610f855780518252601f199092019160209182019101610f66565b51815160209384036101000a60001901801990921691161790526216100560e91b919093019081528651600390910192870191508083835b60208310610fdc5780518252601f199092019160209182019101610fbd565b51815160209384036101000a60001901801990921691161790526216100560e91b919093019081528551600390910192860191508083835b602083106110335780518252601f199092019160209182019101611014565b51815160209384036101000a60001901801990921691161790526216100560e91b919093019081528451600390910192850191508083835b6020831061108a5780518252601f19909201916020918201910161106b565b6001836020036101000a0380198251168184511680821785525050505050509050018061148560f11b8152506002019850505050505050505060405160208183030381529060405290505b919050565b6000806110e5614a08565b8360c001518460600151604051806080016040528061110788602001516120ab565b815260200161111988604001516120ab565b8152602001876080015181526020018760a001518152509250925092509193909250565b6000611147614a26565b8351831061118d576040805162461bcd60e51b815260206004820152600e60248201526d1a5b9d985b1a59081bd9999cd95d60921b604482015290519081900360640190fd5b60008061119a8686612185565b915091506111a66121ac565b60ff168160ff1614156111da5760006111bf87846121b1565b9093509050826111ce8261221f565b945094505050506112f8565b6111e26122df565b60ff168160ff161415611204576111f986836122e4565b9350935050506112f8565b61120c612386565b60ff168160ff16141561123457600061122587846121b1565b9093509050826111ce8261238b565b61123c612478565b60ff168160ff161415611253576111f9868361247d565b61125b612512565b60ff168160ff161015801561127c5750611273612517565b60ff168160ff16105b156112b857600061128b612512565b82039050606061129c82898661251c565b9094509050836112ab826125c5565b95509550505050506112f8565b6040805162461bcd60e51b815260206004820152601060248201526f696e76616c69642074797065636f646560801b604482015290519081900360640190fd5b9250929050565b6000611309614a63565b611311614a63565b600061010082018190528061132687876121b1565b9096509150611335878761247d565b60208501529550611346878761247d565b60408501529550611357878761113d565b60608501529550611368878761113d565b6080850152955061137987876121b1565b60a0850152955061138a87876121b1565b9096509050611399878761113d565b60e085015291835260c08301529590945092505050565b6113b8614a63565b60405180610120016040528083600001518152602001836020015181526020018360400151815260200183606001518152602001836080015181526020018360a0015181526020018360c0015181526020018360e0015181526020018361010001518152509050919050565b61142c614a26565b6040805160608101825260ff85168152602080820185905282516000808252918101845261147f93830191611477565b611464614a26565b81526020019060019003908161145c5790505b509052612707565b90505b92915050565b611490614a26565b604080516001808252818301909252606091816020015b6114af614a26565b8152602001906001900390816114a757905050905082816000815181106114d257fe5b602002602001018190525061150360405180606001604052808760ff16815260200186815260200183815250612707565b95945050505050565b60006115166121ac565b60ff16826080015160ff16141561153957815161153290612798565b90506110d5565b6115416122df565b60ff16826080015160ff16141561155f5761153282602001516127bc565b611567612478565b60ff16826080015160ff16141561158957815160a083015161153291906128b1565b611591612512565b60ff16826080015160ff1614156115ca576115aa614a26565b6115b783604001516128ff565b90506115c28161150c565b9150506110d5565b6115d2612a75565b60ff16826080015160ff1614156115eb575080516110d5565b6115f3612386565b60ff16826080015160ff161415611638575060608082015160408051607b602080830191909152818301939093528151808203830181529301905281519101206110d5565b6040805162461bcd60e51b8152602060048201526011602482015270496e76616c6964207479706520636f646560781b604482015290519081900360640190fd5b611687826020015182612a7a565b82602001819052505050565b6116a1826040015182612a7a565b82604001819052505050565b60008080612d3c60018514806116c35750600285145b806116ce5750600385145b156116e85750600292506000915060039050612af8611e25565b60048514806116f75750600685145b156117115750600292506000915060049050612d57611e25565b60058514806117205750600785145b1561173a5750600292506000915060079050612d57611e25565b60088514806117495750600985145b156117635750600392506000915060049050612e27611e25565b600a8514156117815750600292506000915060199050612af8611e25565b600b85141561179f5750600292506000915060079050612af8611e25565b60108514806117ae5750601185145b806117b95750601285145b806117c45750601385145b806117cf5750601685145b806117da5750601785145b806117e55750601885145b156117fe57506002925060009150829050612af8611e25565b601485141561181b57506002925060009150829050612f10611e25565b601585141561183857506001925060009150829050612f66611e25565b601985141561185557506001925060009150829050612fb6611e25565b601a8514806118645750601b85145b8061186f5750601c85145b8061187a5750601d85145b156118945750600292506000915060049050612af8611e25565b60308514156118b157506001925060009150829050612ffa611e25565b60318514156118ce5750600092508291506001905061300b611e25565b60328514156118eb57506000925082915060019050613021611e25565b60338514156119095750600192506000915060029050613037611e25565b60348514156119275750600192506000915060049050613050611e25565b60358514156119455750600292506000915060049050613090611e25565b603685141561196257506000925082915060029050613102611e25565b603785141561197f57506000925082915060019050613144611e25565b603885141561199c5750600192506000915082905061315f611e25565b60398514156119b957506000925060019150819050613175611e25565b603a8514156119d65750600092508291506002905061318b611e25565b603b8514156119f357506000925082915060019050612d54611e25565b603c851415611a10575060009250829150600190506131b9611e25565b603d851415611a2d575060019250600091508290506131d4611e25565b6040851415611a4a57506001925060009150829050613217611e25565b6041851415611a68575060029250600091506001905061324a611e25565b6042851415611a8657506003925060009150600190506132a2611e25565b6043851415611aa4575060029250600091506001905061331f611e25565b6044851415611ac2575060039250600091506001905061335b611e25565b6050851415611adf575060029250600091508290506133bc611e25565b6051851415611afd5750600392506000915060289050613456611e25565b6052851415611b1b5750600192506000915060029050613516611e25565b6053851415611b385750600192508291506003905061355f611e25565b6054851415611b5657506002925060019150602990506135e0611e25565b6060851415611b7357506000925082915060649050612d54611e25565b6061851415611b91575060019250600091506064905061369b611e25565b6071851415611baf57506001925060009150602890506136e1611e25565b6072851415611bcc5750600092508291506028905061375c611e25565b6073851415611be9575060009250829150600590506137ba611e25565b6074851415611c06575060009250829150600a90506137c3611e25565b6075851415611c23575060019250600091508290506137d0611e25565b6076851415611c405750600092508291506001905061380a611e25565b6077851415611c5d57506000925082915060199050613823611e25565b6078851415611c7b5750600292506000915060199050613873611e25565b6079851415611c9957506003925060009150601990506138e8611e25565b607b851415611cb757506001925060009150600a9050613975611e25565b6080851415611cd657506004925060009150614e2090506139e9611e25565b6081851415611cf557506004925060009150610dac9050613b65611e25565b6082851415611d1557506003925060009150620140509050613c9c611e25565b6083851415611d34575060019250600091506103e89050613d9b611e25565b6090851415611d5157506001925060009150829050612ffa611e25565b60a0851415611d6e575060009250829150600190506140a7611e25565b60208510801590611d80575060248511155b15611dbc5760405162461bcd60e51b815260040180806020018281038252602e815260200180614baf602e913960400191505060405180910390fd5b60a18510801590611dce575060a68511155b80611dd95750607085145b15611e155760405162461bcd60e51b815260040180806020018281038252602d815260200180614bdd602d913960400191505060405180910390fd5b5060009250829150600590506137ba5b9193509193565b611e34614a26565b60408051600080825260208201909252611e6e91611e68565b611e55614a26565b815260200190600190039081611e4d5790505b506125c5565b905090565b60008167ffffffffffffffff16836040015160a001511015611eba575060c08201805160050167ffffffffffffffff169052604082015160001960a0909101526001611482565b5060c08201805167ffffffffffffffff9083018116909152604083015160a001805191831690910390526000611482565b60016101c090910152565b600161010090910152565b60408051818152606081810183529182919060208201818036833701905050905060005b6020811015611fc9576000848260208110611f3c57fe5b1a60f881811b9250601080830480831b9360ff9091169091029003901b611f62826140e1565b858560020281518110611f7157fe5b60200101906001600160f81b031916908160001a905350611f91816140e1565b858560020260010181518110611fa357fe5b60200101906001600160f81b031916908160001a9053505060019092019150611f259050565b5092915050565b60608180611ff75750506040805180820190915260018152600360fc1b60208201526110d5565b8060005b811561200f57600101600a82049150611ffb565b60608167ffffffffffffffff8111801561202857600080fd5b506040519080825280601f01601f191660200182016040528015612053576020820181803683370190505b50905060001982015b84156120a157600a850660300160f81b8282806001900393508151811061207f57fe5b60200101906001600160f81b031916908160001a905350600a8504945061205c565b5095945050505050565b6000600282610100015114156120c3575060006110d5565b600182610100015114156120d9575060016110d5565b815160208301516120e99061150c565b6120f6846040015161150c565b612103856060015161150c565b612110866080015161150c565b8660a001518760c001516121278960e0015161150c565b60405160200180898152602001888152602001878152602001868152602001858152602001848152602001838152602001828152602001985050505050505050506040516020818303038152906040528051906020012090506110d5565b6000808260010184848151811061219857fe5b016020015190925060f81c90509250929050565b600090565b600080828451101580156121c9575060208385510310155b612206576040805162461bcd60e51b81526020600482015260096024820152681d1bdbc81cda1bdc9d60ba1b604482015290519081900360640190fd5b602083016122148585614112565b915091509250929050565b612227614a26565b6040805160c081018252838152815160608101835260008082526020808301829052845182815280820186529394908501939083019161227d565b61226a614a26565b8152602001906001900390816122625790505b509052815260200160006040519080825280602002602001820160405280156122c057816020015b6122ad614a26565b8152602001906001900390816122a55790505b5081526000602082018190526040820152600160609091015292915050565b600190565b60006122ee614a26565b826000806122fa614a26565b60006123068986612185565b90955093506123158986612185565b9095509250600160ff8516141561233657612330898661113d565b90955091505b612340898661416b565b9095509050600160ff8516141561236b578461235d848385611488565b9650965050505050506112f8565b846123768483611424565b9650965050505050509250929050565b600c90565b612393614a26565b6040518060c00160405280600081526020016040518060600160405280600060ff1681526020016000801b8152602001600067ffffffffffffffff811180156123db57600080fd5b5060405190808252806020026020018201604052801561241557816020015b612402614a26565b8152602001906001900390816123fa5790505b5090528152602001600060405190808252806020026020018201604052801561245857816020015b612445614a26565b81526020019060019003908161243d5790505b50815260208101849052600c604082015260016060909101529050919050565b600290565b6000612487614a26565b8284511015801561249c575060408385510310155b6124d9576040805162461bcd60e51b81526020600482015260096024820152681d1bdbc81cda1bdc9d60ba1b604482015290519081900360640190fd5b6000806124e6868661416b565b90945091506124f586856121b1565b909450905083612505838361417c565b9350935050509250929050565b600390565b600d90565b60006060828160ff871667ffffffffffffffff8111801561253c57600080fd5b5060405190808252806020026020018201604052801561257657816020015b612563614a26565b81526020019060019003908161255b5790505b50905060005b8760ff168160ff1610156125b857612594878461113d565b838360ff16815181106125a357fe5b6020908102919091010152925060010161257c565b5090969095509350505050565b6125cd614a26565b6125d7825161423b565b612628576040805162461bcd60e51b815260206004820152601a60248201527f5475706c65206d75737420686176652076616c69642073697a65000000000000604482015290519081900360640190fd5b600160005b835181101561265f5783818151811061264257fe5b602002602001015160a0015182019150808060010191505061262d565b506040518060c00160405280600081526020016040518060600160405280600060ff1681526020016000801b8152602001600067ffffffffffffffff811180156126a857600080fd5b506040519080825280602002602001820160405280156126e257816020015b6126cf614a26565b8152602001906001900390816126c75790505b5090528152602081019490945260006040850152600360608501526080909301525090565b61270f614a26565b6040518060c0016040528060008152602001838152602001600067ffffffffffffffff8111801561273f57600080fd5b5060405190808252806020026020018201604052801561277957816020015b612766614a26565b81526020019060019003908161275e5790505b5081526000602082015260016040820181905260609091015292915050565b60408051602080820193909352815180820384018152908201909152805191012090565b60006002826040015151106127cd57fe5b604082015151612830576127df6122df565b82600001518360200151604051602001808460ff1660f81b81526001018360ff1660f81b815260010182815260200193505050506040516020818303038152906040528051906020012090506110d5565b6128386122df565b826000015161285e846040015160008151811061285157fe5b602002602001015161150c565b8460200151604051602001808560ff1660f81b81526001018460ff1660f81b8152600101838152602001828152602001945050505050604051602081830303815290604052805190602001209050919050565b60006128bb612512565b8383604051602001808460ff1660f81b8152600101838152602001828152602001935050505060405160208183030381529060405280519060200120905092915050565b612907614a26565b600882511115612955576040805162461bcd60e51b8152602060048201526014602482015273092dcecc2d8d2c840e8eae0d8ca40d8cadccee8d60631b604482015290519081900360640190fd5b6060825167ffffffffffffffff8111801561296f57600080fd5b50604051908082528060200260200182016040528015612999578160200160208202803683370190505b508051909150600160005b828110156129fc576129bb86828151811061285157fe5b8482815181106129c757fe5b6020026020010181815250508581815181106129df57fe5b602002602001015160a001518201915080806001019150506129a4565b506000835184604051602001808360ff1660f81b8152600101828051906020019060200280838360005b83811015612a3e578181015183820152602001612a26565b5050505090500192505050604051602081830303815290604052805190602001209050612a6b818361417c565b9695505050505050565b606490565b612a82614a26565b6040805160028082526060828101909352816020015b612aa0614a26565b815260200190600190039081612a985790505090508281600081518110612ac357fe5b60200260200101819052508381600181518110612adc57fe5b6020026020010181905250612af0816128ff565b949350505050565b612b00614a26565b612b0d8260e00151614242565b9050612b17614a26565b612b248360e00151614242565b9050612b2f82614284565b1580612b415750612b3f81614284565b155b15612b5657612b4f8361428f565b5050612d54565b8151815161014085015160009060ff1660011415612b775750818101612d3e565b61014086015160ff1660021415612b915750818102612d3e565b61014086015160ff1660031415612bab5750808203612d3e565b61014086015160ff16600a1415612bc5575080820a612d3e565b61014086015160ff16600b1415612bdf575080820b612d3e565b61014086015160ff1660101415612bf95750808210612d3e565b61014086015160ff1660111415612c135750808211612d3e565b61014086015160ff1660121415612c2d5750808212612d3e565b61014086015160ff1660131415612c475750808213612d3e565b61014086015160ff1660161415612c615750818116612d3e565b61014086015160ff1660171415612c7b5750818117612d3e565b61014086015160ff1660181415612c955750818118612d3e565b61014086015160ff16601a1415612caf575080821a612d3e565b61014086015160ff16601b1415612cc9575080821b612d3e565b61014086015160ff16601c1415612ce3575080821c612d3e565b61014086015160ff16601d1415612cfd575080821d612d3e565b61014086015160ff1660221415612d3c575060408051602080820185905281830184905282518083038401815260609092019092528051910120612d3e565bfe5b610d5e8660e00151612d4f8361221f565b614298565b50565b612d5f614a26565b612d6c8260e00151614242565b9050612d76614a26565b612d838360e00151614242565b9050612d8e82614284565b1580612da05750612d9e81614284565b155b80612daa57508051155b15612db857612b4f8361428f565b8151815161014085015160009060ff1660041415612dd95750808204612d3e565b61014086015160ff1660051415612df35750808205612d3e565b61014086015160ff1660061415612e0d5750808206612d3e565b61014086015160ff1660071415612d3c5750808207612d3e565b612e2f614a26565b612e3c8260e00151614242565b9050612e46614a26565b612e538360e00151614242565b9050612e5d614a26565b612e6a8460e00151614242565b9050612e7583614284565b1580612e875750612e8582614284565b155b80612e985750612e9681614284565b155b80612ea257508051155b15612eb857612eb08461428f565b505050612d54565b82518251825161014087015160009060ff1660081415612edd57818385089050612ef5565b61014088015160ff1660091415612d3c578183850990505b612f068860e00151612d4f8361221f565b5050505050505050565b612f18614a26565b612f258260e00151614242565b9050612f2f614a26565b612f3c8360e00151614242565b9050612f618360e00151612d4f612f528461150c565b612f5b8661150c565b146142c2565b505050565b612f6e614a26565b612f7b8260e00151614242565b9050612f8681614284565b612f9957612f938261428f565b50612d54565b805160e0830151811590612fb090612d4f8361221f565b50505050565b612fbe614a26565b612fcb8260e00151614242565b9050612fd681614284565b612fe357612f938261428f565b805160e0830151811990612fb090612d4f8361221f565b6130078160e00151614242565b5050565b612d548160e00151826040015160800151614298565b612d548160e00151826040015160600151614298565b6130448160e00151614242565b60409091015160600152565b613058614a26565b6130658260e00151614242565b9050613070816142e4565b61307d57612f938261428f565b6130868161150c565b6040830151525050565b613098614a26565b6130a58260e00151614242565b90506130af614a26565b6130bc8360e00151614242565b90506130c7826142e4565b15806130d957506130d781614284565b155b156130e757612b4f8361428f565b805115612f61576130f78261150c565b604084015152505050565b60e081015151600090158015613131575061311e610ac1611e2c565b61312f83604001516020015161150c565b145b90506130078260e00151612d4f836142c2565b612d548160e00151612d4f83602001516000015160016142f1565b612d54816101000151612d4f8360e00151614242565b612d548160e00151612d4f836101000151614242565b6101008101515160009015801561313157506131a8610ac1611e2c565b61312f83604001516040015161150c565b612d548160e00151612d4f836040015160c0015160016142f1565b6131dc614a26565b6131e98260e00151614242565b90506131f4816142e4565b61320157612f938261428f565b61320a8161150c565b604083015160c001525050565b61321f614a26565b61322c8260e00151614242565b905061323c8260e0015182614298565b6130078260e0015182614298565b613252614a26565b61325f8260e00151614242565b9050613269614a26565b6132768360e00151614242565b90506132868360e0015182614298565b6132948360e0015183614298565b612f618360e0015182614298565b6132aa614a26565b6132b78260e00151614242565b90506132c1614a26565b6132ce8360e00151614242565b90506132d8614a26565b6132e58460e00151614242565b90506132f58460e0015182614298565b6133038460e0015183614298565b6133118460e0015184614298565b612fb08460e0015182614298565b613327614a26565b6133348260e00151614242565b905061333e614a26565b61334b8360e00151614242565b90506132948360e0015183614298565b613363614a26565b6133708260e00151614242565b905061337a614a26565b6133878360e00151614242565b9050613391614a26565b61339e8460e00151614242565b90506133ae8460e0015184614298565b6133118460e0015183614298565b6133c4614a26565b6133d18260e00151614242565b90506133db614a26565b6133e88360e00151614242565b90506133f382614284565b15806134055750613403816143b0565b155b8061341f5750613414816143bd565b60ff16826000015110155b1561342d57612b4f8361428f565b612f618360e00151826040015184600001518151811061344957fe5b6020026020010151614298565b61345e614a26565b61346b8260e00151614242565b9050613475614a26565b6134828360e00151614242565b905061348c614a26565b6134998460e00151614242565b90506134a483614284565b15806134b657506134b4826143b0565b155b806134d057506134c5826143bd565b60ff16836000015110155b156134de57612eb08461428f565b6040820151835181518391839181106134f357fe5b602002602001018190525061350f8560e00151612d4f836125c5565b5050505050565b61351e614a26565b61352b8260e00151614242565b9050613536816143b0565b61354357612f938261428f565b6130078260e00151612d4f613557846143bd565b60ff1661221f565b613567614a26565b6135748260e00151614242565b905061357e614a26565b61358c836101000151614242565b905061359782614284565b15806135a957506135a7816143b0565b155b806135c357506135b8816143bd565b60ff16826000015110155b156135d157612b4f8361428f565b61342d83610100015182614298565b6135e8614a26565b6135f58260e00151614242565b90506135ff614a26565b61360c8360e00151614242565b9050613616614a26565b613624846101000151614242565b905061362f816143b0565b1580613641575061363f83614284565b155b8061365b5750613650816143bd565b60ff16836000015110155b1561366957612eb08461428f565b60408101518351815184918391811061367e57fe5b602002602001018190525061350f856101000151612d4f836125c5565b8060a001516136b0610ac18360e00151614242565b604080516020808201949094528082019290925280518083038201815260609092019052805191012060a090910152565b6136e9614a26565b6136f68260e00151614242565b9050613703610ac1611e2c565b613714836040015160e0015161150c565b1461372c57613722826143e4565b604083015160e001525b6130078260e00151612d4f6137408461150c565b612f5b866040015160e001516040015160018151811061285157fe5b613767610ac1611e2c565b613778826040015160e0015161150c565b146137a9576137938160e00151826040015160e00151614298565b61379b611e2c565b604082015160e00152612d54565b612d548160e00151612d4f836143e4565b612d548161428f565b612d5481604001516146dd565b6137d8614a26565b6137e58260e00151614242565b90506137f081614284565b6137fd57612f938261428f565b51604082015160a0015250565b612d548160e00151612d4f836040015160a0015161221f565b60e081015160408051600160f81b6020808301919091526000602183018190526022808401919091528351808403909101815260429092019092528051910120612d549190612d4f9060016142f1565b61387b614a26565b6138888260e00151614242565b9050613892614a26565b61389f8360e00151614242565b90506138aa82614284565b15806138bc57506138ba816142e4565b155b156138ca57612b4f8361428f565b612f618360e00151612d4f84600001516138e38561150c565b611424565b6138f0614a26565b6138fd8260e00151614242565b9050613907614a26565b6139148360e00151614242565b905061391e614a26565b61392b8460e00151614242565b905061393683614284565b15806139485750613946816142e4565b155b1561395657612eb08461428f565b612fb08460e00151612d4f856000015161396f8561150c565b86611488565b61397d614a26565b61398a8260e00151614242565b905061399581614284565b6139a257612f938261428f565b604080516000808252602082019092526060916139d5565b6139c2614a26565b8152602001906001900390816139ba5790505b509050612f618360e00151612d4f836125c5565b6139f1614a26565b6139fe8260e00151614242565b9050613a08614a26565b613a158360e00151614242565b9050613a1f614a26565b613a2c8460e00151614242565b9050613a36614a26565b613a438560e00151614242565b9050613a4e84614284565b1580613a605750613a5e83614284565b155b80613a715750613a6f82614284565b155b80613a825750613a8081614284565b155b15613a9957613a908561428f565b50505050612d54565b83518351835115801590613aaf57508351600114155b15613ad157613ac68760e00151612d4f600061221f565b505050505050612d54565b83518351604080516000808252602080830180855285905260ff601b9096019586168385015260608301889052608083018790529251909260019260a080820193601f1981019281900390910190855afa158015613b33573d6000803e3d6000fd5b505050602060405103519050613b598a60e00151612d4f836001600160a01b031661221f565b50505050505050505050565b613b6d614a26565b613b7a8260e00151614242565b9050613b84614a26565b613b918360e00151614242565b9050613b9b614a26565b613ba88460e00151614242565b9050613bb2614a26565b613bbf8560e00151614242565b9050613bca84614284565b1580613bdc5750613bda83614284565b155b80613bed5750613beb82614284565b155b80613bfe5750613bfc81614284565b155b15613c0c57613a908561428f565b613c14614a08565b5060408051608081018252855181528451602082015283519181019190915281516060820152613c42614ace565b600060408260808560066107d05a03fa905080613c6e57613c628861428f565b50505050505050612d54565b60e0880151613c8890612d4f8460015b602002015161221f565b60e0880151612f0690612d4f846000613c7e565b613ca4614a26565b613cb18260e00151614242565b9050613cbb614a26565b613cc88360e00151614242565b9050613cd2614a26565b613cdf8460e00151614242565b9050613cea83614284565b1580613cfc5750613cfa82614284565b155b80613d0d5750613d0b81614284565b155b15613d1b57612eb08461428f565b613d23614aec565b50604080516060810182528451815283516020820152825191810191909152613d4a614ace565b600060408260808560076107d05a03fa905080613d6a57613ac68761428f565b60e0870151613d7e90612d4f846001613c7e565b60e0870151613d9290612d4f846000613c7e565b50505050505050565b613da3614a26565b613db08260e00151614242565b9050613dba614b0a565b60005b601e811015613e4a57613dcf836143b0565b613ddc57612eb08461428f565b60408301518051613ded5750613e4a565b8051600214613dff57613a908561428f565b80600081518110613e0c57fe5b60200260200101518383601e8110613e2057fe5b6020020152805181906001908110613e3457fe5b6020908102919091010151935050600101613dbd565b613e59846207a1208302611e73565b15613e6657505050612d54565b613e6f836143b0565b1580613e7f575060408301515115155b15613e8d57612eb08461428f565b613e95614b38565b60005b8281101561406457613ea8614a26565b8482601e8110613eb457fe5b60200201519050613ec4816143b0565b613ed157613ac68761428f565b60408101518051600614613ee857613c628861428f565b60005b6006811015613f3257613f10828281518110613f0357fe5b6020026020010151614284565b613f2a57613f1d8961428f565b5050505050505050612d54565b600101613eeb565b5080600081518110613f4057fe5b602002602001015160000151848460060260b48110613f5b57fe5b6020020152805181906001908110613f6f57fe5b602002602001015160000151848460060260010160b48110613f8d57fe5b6020020152805181906003908110613fa157fe5b602002602001015160000151848460060260020160b48110613fbf57fe5b6020020152805181906002908110613fd357fe5b602002602001015160000151848460060260030160b48110613ff157fe5b602002015280518190600590811061400557fe5b602002602001015160000151848460060260040160b4811061402357fe5b602002015280518190600490811061403757fe5b602002602001015160000151848460060260050160b4811061405557fe5b60200201525050600101613e98565b5060c08202614071614b57565b6000602082848660086107d05a03fa90508061409057613c628861428f565b60e08801518251612f069190612d4f9015156142c2565b612d548160e00151612d4f6000801b604051602001808281526020019150506040516020818303038152906040528051906020012061238b565b6000600a60f883901c1015614101578160f81c60300160f81b90506110d5565b8160f81c60570160f81b90506110d5565b60008160200183511015614162576040805162461bcd60e51b815260206004820152601260248201527152656164206f7574206f6620626f756e647360701b604482015290519081900360640190fd5b50016020015190565b600080602083016122148585614112565b614184614a26565b6040805160c08101825284815281516060810183526000808252602080830182905284518281528082018652939490850193908301916141da565b6141c7614a26565b8152602001906001900390816141bf5790505b5090528152602001600060405190808252806020026020018201604052801561421d57816020015b61420a614a26565b8152602001906001900390816142025790505b50815260006020820152600260408201526060019290925250919050565b6008101590565b61424a614a26565b614252614a26565b826020015160018460000151038151811061426957fe5b60209081029190910101518351600019018452915050919050565b6080015160ff161590565b612d5481611eeb565b8082602001518360000151815181106142ad57fe5b60209081029190910101525080516001019052565b6142ca614a26565b81156142da57611532600161221f565b611532600061221f565b6080015160ff1660011490565b6142f9614a26565b6040805160c081018252848152815160608101835260008082526020808301829052845182815280820186529394908501939083019161434f565b61433c614a26565b8152602001906001900390816143345790505b5090528152602001600060405190808252806020026020018201604052801561439257816020015b61437f614a26565b8152602001906001900390816143775790505b50815260006020820152606460408201526060019290925250919050565b6080015160ff1660031490565b608081015160009060ff16600314156143dc57506040810151516110d5565b5060016110d5565b6143ec614a26565b61016082015161018083015181516000918391811061440757fe5b0160200151610180850180516001019081905260f89190911c91506000908190819081906144369087906146e8565b61018089018051601401908190529091506144529087906121b1565b6101808a0182905294506144679087906121b1565b6101808a01829052935061447c9087906121b1565b6101808a0182905292506000906144949088906121b1565b6101808b0182905291506000906144ad90899084614748565b6101808b01518981016020018490209192509060006144d08a878b8b8b8761477a565b9050808d600001516001600160a01b0316636817ce328f606001516040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561451f57600080fd5b505afa158015614533573d6000803e3d6000fd5b505050506040513d602081101561454957600080fd5b50511461458d576040805162461bcd60e51b815260206004820152600d60248201526c57524f4e475f4d45535341474560981b604482015290519081900360640190fd5b60608d810180516001019052604080516007808252610100820190925290816020015b6145b8614a26565b8152602001906001900390816145b05790505090506145d98b60ff1661221f565b816000815181106145e657fe5b60200260200101819052506145fa8a61221f565b8160018151811061460757fe5b602002602001018190525061461b8961221f565b8160028151811061462857fe5b6020026020010181905250614645876001600160a01b031661221f565b8160038151811061465257fe5b60200260200101819052506146668861221f565b8160048151811061467357fe5b60200260200101819052506146878661221f565b8160058151811061469457fe5b60200260200101819052506146aa8560016142f1565b816006815181106146b757fe5b60200260200101819052506146cb816125c5565b9e9d5050505050505050505050505050565b600261010090910152565b60008160140183511015614738576040805162461bcd60e51b815260206004820152601260248201527152656164206f7574206f6620626f756e647360701b604482015290519081900360640190fd5b500160200151600160601b900490565b6000806147608585614759866147e8565b6001614813565b50855190915061150390614775607b846148e7565b6148e7565b6040805160f89790971b6001600160f81b03191660208089019190915260609690961b6bffffffffffffffffffffffff191660218801526035870194909452605586019290925260758501526095808501919091528151808503909101815260b59093019052815191012090565b6000600182116147fa575060016110d5565b614809600260018401046147e8565b60020290506110d5565b60008060208411614867578551851061483b576148306000612798565b6001915091506148de565b600061484f61484a8888614913565b612798565b90508061485c6000612798565b9093501490506148de565b600080614880886002880489016002895b046000614813565b9150915080801561488e5750845b156148ad576148a288886002890488614813565b9350935050506148de565b6000806148bd8a8a60028b614878565b915091506148cb82856148e7565b8180156148d55750835b95509550505050505b94509492505050565b604080516020808201949094528082019290925280518083038201815260609092019052805191012090565b600080805b602081101561496a57600882901b9150600081850186511161493b576000614959565b858286018151811061494957fe5b01602001516001600160f81b0319165b60f81c929092179150600101614918565b509392505050565b604051806101e0016040528060006001600160a01b03168152602001614996614a63565b81526020016149a3614a63565b81526000602082018190526040820181905260608201819052608082015260a0016149cc614b75565b81526020016149d9614b75565b81526000602082018190526040820181905260608083018190526080830182905260a083015260c09091015290565b60405180608001604052806004906020820280368337509192915050565b6040518060c0016040528060008152602001614a40614b8f565b815260606020820181905260006040830181905290820181905260809091015290565b6040805161012081019091526000815260208101614a7f614a26565b8152602001614a8c614a26565b8152602001614a99614a26565b8152602001614aa6614a26565b81526000602082018190526040820152606001614ac1614a26565b8152602001600081525090565b60405180604001604052806002906020820280368337509192915050565b60405180606001604052806003906020820280368337509192915050565b604051806103c00160405280601e905b614b22614a26565b815260200190600190039081614b1a5790505090565b60405180611680016040528060b4906020820280368337509192915050565b60405180602001604052806001906020820280368337509192915050565b604051806040016040528060008152602001606081525090565b604080516060808201835260008083526020830152918101919091529056fe75736520616e6f7468657220636f6e747261637420746f2068616e646c652068617368696e67206f70636f64657375736520616e6f7468657220636f6e747261637420746f2068616e646c6520627566666572206f70636f646573a2646970667358221220e96aa3c68d05aa3823509e6633d67d8ecd283e219de981d90f64d82928f2eb4464736f6c634300060c0033"

// DeployOneStepProof deploys a new Ethereum contract, binding an instance of OneStepProof to it.
func DeployOneStepProof(auth *bind.TransactOpts, backend bind.ContractBackend) (common.Address, *types.Transaction, *OneStepProof, error) {
	parsed, err := abi.JSON(strings.NewReader(OneStepProofABI))
	if err != nil {
		return common.Address{}, nil, nil, err
	}

	address, tx, contract, err := bind.DeployContract(auth, parsed, common.FromHex(OneStepProofBin), backend)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &OneStepProof{OneStepProofCaller: OneStepProofCaller{contract: contract}, OneStepProofTransactor: OneStepProofTransactor{contract: contract}, OneStepProofFilterer: OneStepProofFilterer{contract: contract}}, nil
}

// OneStepProof is an auto generated Go binding around an Ethereum contract.
type OneStepProof struct {
	OneStepProofCaller     // Read-only binding to the contract
	OneStepProofTransactor // Write-only binding to the contract
	OneStepProofFilterer   // Log filterer for contract events
}

// OneStepProofCaller is an auto generated read-only Go binding around an Ethereum contract.
type OneStepProofCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// OneStepProofTransactor is an auto generated write-only Go binding around an Ethereum contract.
type OneStepProofTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// OneStepProofFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type OneStepProofFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// OneStepProofSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type OneStepProofSession struct {
	Contract     *OneStepProof     // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// OneStepProofCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type OneStepProofCallerSession struct {
	Contract *OneStepProofCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts       // Call options to use throughout this session
}

// OneStepProofTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type OneStepProofTransactorSession struct {
	Contract     *OneStepProofTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts       // Transaction auth options to use throughout this session
}

// OneStepProofRaw is an auto generated low-level Go binding around an Ethereum contract.
type OneStepProofRaw struct {
	Contract *OneStepProof // Generic contract binding to access the raw methods on
}

// OneStepProofCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type OneStepProofCallerRaw struct {
	Contract *OneStepProofCaller // Generic read-only contract binding to access the raw methods on
}

// OneStepProofTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type OneStepProofTransactorRaw struct {
	Contract *OneStepProofTransactor // Generic write-only contract binding to access the raw methods on
}

// NewOneStepProof creates a new instance of OneStepProof, bound to a specific deployed contract.
func NewOneStepProof(address common.Address, backend bind.ContractBackend) (*OneStepProof, error) {
	contract, err := bindOneStepProof(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &OneStepProof{OneStepProofCaller: OneStepProofCaller{contract: contract}, OneStepProofTransactor: OneStepProofTransactor{contract: contract}, OneStepProofFilterer: OneStepProofFilterer{contract: contract}}, nil
}

// NewOneStepProofCaller creates a new read-only instance of OneStepProof, bound to a specific deployed contract.
func NewOneStepProofCaller(address common.Address, caller bind.ContractCaller) (*OneStepProofCaller, error) {
	contract, err := bindOneStepProof(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &OneStepProofCaller{contract: contract}, nil
}

// NewOneStepProofTransactor creates a new write-only instance of OneStepProof, bound to a specific deployed contract.
func NewOneStepProofTransactor(address common.Address, transactor bind.ContractTransactor) (*OneStepProofTransactor, error) {
	contract, err := bindOneStepProof(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &OneStepProofTransactor{contract: contract}, nil
}

// NewOneStepProofFilterer creates a new log filterer instance of OneStepProof, bound to a specific deployed contract.
func NewOneStepProofFilterer(address common.Address, filterer bind.ContractFilterer) (*OneStepProofFilterer, error) {
	contract, err := bindOneStepProof(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &OneStepProofFilterer{contract: contract}, nil
}

// bindOneStepProof binds a generic wrapper to an already deployed contract.
func bindOneStepProof(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(OneStepProofABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_OneStepProof *OneStepProofRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _OneStepProof.Contract.OneStepProofCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_OneStepProof *OneStepProofRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _OneStepProof.Contract.OneStepProofTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_OneStepProof *OneStepProofRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _OneStepProof.Contract.OneStepProofTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_OneStepProof *OneStepProofCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _OneStepProof.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_OneStepProof *OneStepProofTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _OneStepProof.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_OneStepProof *OneStepProofTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _OneStepProof.Contract.contract.Transact(opts, method, params...)
}

// ExecuteStep is a free data retrieval call binding the contract method 0x9d16dd04.
//
// Solidity: function executeStep(address bridge, uint256 initialMessagesRead, bytes32[2] accs, bytes proof, bytes bproof) view returns(uint64 gas, uint256 totalMessagesRead, bytes32[4] fields)
func (_OneStepProof *OneStepProofCaller) ExecuteStep(opts *bind.CallOpts, bridge common.Address, initialMessagesRead *big.Int, accs [2][32]byte, proof []byte, bproof []byte) (struct {
	Gas               uint64
	TotalMessagesRead *big.Int
	Fields            [4][32]byte
}, error) {
	var out []interface{}
	err := _OneStepProof.contract.Call(opts, &out, "executeStep", bridge, initialMessagesRead, accs, proof, bproof)

	outstruct := new(struct {
		Gas               uint64
		TotalMessagesRead *big.Int
		Fields            [4][32]byte
	})

	outstruct.Gas = out[0].(uint64)
	outstruct.TotalMessagesRead = out[1].(*big.Int)
	outstruct.Fields = out[2].([4][32]byte)

	return *outstruct, err

}

// ExecuteStep is a free data retrieval call binding the contract method 0x9d16dd04.
//
// Solidity: function executeStep(address bridge, uint256 initialMessagesRead, bytes32[2] accs, bytes proof, bytes bproof) view returns(uint64 gas, uint256 totalMessagesRead, bytes32[4] fields)
func (_OneStepProof *OneStepProofSession) ExecuteStep(bridge common.Address, initialMessagesRead *big.Int, accs [2][32]byte, proof []byte, bproof []byte) (struct {
	Gas               uint64
	TotalMessagesRead *big.Int
	Fields            [4][32]byte
}, error) {
	return _OneStepProof.Contract.ExecuteStep(&_OneStepProof.CallOpts, bridge, initialMessagesRead, accs, proof, bproof)
}

// ExecuteStep is a free data retrieval call binding the contract method 0x9d16dd04.
//
// Solidity: function executeStep(address bridge, uint256 initialMessagesRead, bytes32[2] accs, bytes proof, bytes bproof) view returns(uint64 gas, uint256 totalMessagesRead, bytes32[4] fields)
func (_OneStepProof *OneStepProofCallerSession) ExecuteStep(bridge common.Address, initialMessagesRead *big.Int, accs [2][32]byte, proof []byte, bproof []byte) (struct {
	Gas               uint64
	TotalMessagesRead *big.Int
	Fields            [4][32]byte
}, error) {
	return _OneStepProof.Contract.ExecuteStep(&_OneStepProof.CallOpts, bridge, initialMessagesRead, accs, proof, bproof)
}

// ExecuteStepDebug is a free data retrieval call binding the contract method 0x2ccebb7a.
//
// Solidity: function executeStepDebug(address bridge, uint256 initialMessagesRead, bytes32[2] accs, bytes proof, bytes bproof) view returns(string startMachine, string afterMachine)
func (_OneStepProof *OneStepProofCaller) ExecuteStepDebug(opts *bind.CallOpts, bridge common.Address, initialMessagesRead *big.Int, accs [2][32]byte, proof []byte, bproof []byte) (struct {
	StartMachine string
	AfterMachine string
}, error) {
	var out []interface{}
	err := _OneStepProof.contract.Call(opts, &out, "executeStepDebug", bridge, initialMessagesRead, accs, proof, bproof)

	outstruct := new(struct {
		StartMachine string
		AfterMachine string
	})

	outstruct.StartMachine = out[0].(string)
	outstruct.AfterMachine = out[1].(string)

	return *outstruct, err

}

// ExecuteStepDebug is a free data retrieval call binding the contract method 0x2ccebb7a.
//
// Solidity: function executeStepDebug(address bridge, uint256 initialMessagesRead, bytes32[2] accs, bytes proof, bytes bproof) view returns(string startMachine, string afterMachine)
func (_OneStepProof *OneStepProofSession) ExecuteStepDebug(bridge common.Address, initialMessagesRead *big.Int, accs [2][32]byte, proof []byte, bproof []byte) (struct {
	StartMachine string
	AfterMachine string
}, error) {
	return _OneStepProof.Contract.ExecuteStepDebug(&_OneStepProof.CallOpts, bridge, initialMessagesRead, accs, proof, bproof)
}

// ExecuteStepDebug is a free data retrieval call binding the contract method 0x2ccebb7a.
//
// Solidity: function executeStepDebug(address bridge, uint256 initialMessagesRead, bytes32[2] accs, bytes proof, bytes bproof) view returns(string startMachine, string afterMachine)
func (_OneStepProof *OneStepProofCallerSession) ExecuteStepDebug(bridge common.Address, initialMessagesRead *big.Int, accs [2][32]byte, proof []byte, bproof []byte) (struct {
	StartMachine string
	AfterMachine string
}, error) {
	return _OneStepProof.Contract.ExecuteStepDebug(&_OneStepProof.CallOpts, bridge, initialMessagesRead, accs, proof, bproof)
}
