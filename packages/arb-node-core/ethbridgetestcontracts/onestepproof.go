// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package ethbridgetestcontracts

import (
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
)

// OneStepProofABI is the input ABI used to generate the binding from.
const OneStepProofABI = "[{\"inputs\":[{\"internalType\":\"contractIBridge\",\"name\":\"bridge\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"initialMessagesRead\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[2]\",\"name\":\"accs\",\"type\":\"bytes32[2]\"},{\"internalType\":\"bytes\",\"name\":\"proof\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"bproof\",\"type\":\"bytes\"}],\"name\":\"executeStep\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"gas\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"totalMessagesRead\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[4]\",\"name\":\"fields\",\"type\":\"bytes32[4]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contractIBridge\",\"name\":\"bridge\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"initialMessagesRead\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[2]\",\"name\":\"accs\",\"type\":\"bytes32[2]\"},{\"internalType\":\"bytes\",\"name\":\"proof\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"bproof\",\"type\":\"bytes\"}],\"name\":\"executeStepDebug\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"startMachine\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"afterMachine\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]"

// OneStepProofFuncSigs maps the 4-byte function signature to its string representation.
var OneStepProofFuncSigs = map[string]string{
	"9d16dd04": "executeStep(address,uint256,bytes32[2],bytes,bytes)",
	"2ccebb7a": "executeStepDebug(address,uint256,bytes32[2],bytes,bytes)",
}

// OneStepProofBin is the compiled bytecode used for deploying new contracts.
var OneStepProofBin = "0x608060405234801561001057600080fd5b506152f2806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80632ccebb7a1461003b5780639d16dd04146101f2575b600080fd5b610114600480360360c081101561005157600080fd5b6001600160a01b038235169160208101359160408201919081019060a081016080820135600160201b81111561008657600080fd5b82018360208201111561009857600080fd5b803590602001918460018302840111600160201b831117156100b957600080fd5b919390929091602081019035600160201b8111156100d657600080fd5b8201836020820111156100e857600080fd5b803590602001918460018302840111600160201b8311171561010957600080fd5b50909250905061031d565b604051808060200180602001838103835285818151815260200191508051906020019080838360005b8381101561015557818101518382015260200161013d565b50505050905090810190601f1680156101825780820380516001836020036101000a031916815260200191505b50838103825284518152845160209182019186019080838360005b838110156101b557818101518382015260200161019d565b50505050905090810190601f1680156101e25780820380516001836020036101000a031916815260200191505b5094505050505060405180910390f35b6102cb600480360360c081101561020857600080fd5b6001600160a01b038235169160208101359160408201919081019060a081016080820135600160201b81111561023d57600080fd5b82018360208201111561024f57600080fd5b803590602001918460018302840111600160201b8311171561027057600080fd5b919390929091602081019035600160201b81111561028d57600080fd5b82018360208201111561029f57600080fd5b803590602001918460018302840111600160201b831117156102c057600080fd5b5090925090506103e2565b60405180846001600160401b0316815260200183815260200182600460200280838360005b838110156103085781810151838201526020016102f0565b50505050905001935050505060405180910390f35b606080610328615022565b6103ac898989898080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050604080516020601f8d018190048102820181019092528b815292508b91508a9081908401838280828437600081840152601f19601f820116905080830192505050505050508e6104a1565b90506103b78161093e565b6103c48160400151610d54565b92506103d38160600151610d54565b91505097509795505050505050565b6000806103ed6150bb565b6103f5615022565b6104798a8a8a8a8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050604080516020601f8e018190048102820181019092528c815292508c91508b9081908401838280828437600081840152601f19601f820116905080830192505050505050508f6104a1565b90506104848161093e565b61048d816110c8565b935093509350509750975097945050505050565b6104a9615022565b6000846000815181106104b857fe5b602001015160f81c60f81b60f81c90506000856001815181106104d757fe5b602001015160f81c60f81b60f81c90506000866002815181106104f657fe5b016020015160f81c9050600360606004840160ff166001600160401b038111801561052057600080fd5b5060405190808252806020026020018201604052801561055a57816020015b6105476150d9565b81526020019060019003908161053f5790505b50905060608360040160ff166001600160401b038111801561057b57600080fd5b506040519080825280602002602001820160405280156105b557816020015b6105a26150d9565b81526020019060019003908161059a5790505b50905060005b8560ff168110156105f1576105d08b8561112c565b8483815181106105dc57fe5b602090810291909101015293506001016105bb565b5060005b8460ff1681101561062b5761060a8b8561112c565b83838151811061061657fe5b602090810291909101015293506001016105f5565b50610634615116565b61063e8b856112ee565b809250819550505060008b858151811061065457fe5b01602001516001959095019460f81c905061066d615022565b6040810183905261067d8361139f565b6060820152608081018f90528d3560c08201526020808f013560e08301526000610100830181905260408051808201825260ff8c811682528185018a905261012086019190915281518083019092528a8116825292810187905261014084015283821660018114610160850152918b166101808401526101a083018f90526101e083018e90526102008301526101c08201879052158061072057508160ff166001145b6040518060400160405280600b81526020016a04241445f494d4d5f5459560ac1b815250906107cd5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561079257818101518382015260200161077a565b50505050905090810190601f1680156107bf5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506107d66150d9565b60ff83166107f7576107f08a836040015160000151611413565b9050610897565b6000865111604051806040016040528060068152602001654e4f5f494d4d60d01b815250906108675760405162461bcd60e51b815260206004820181815283516024840152835190928392604490910191908501908083836000831561079257818101518382015260200161077a565b506108948a8360400151600001518860018d0360ff168151811061088757fe5b6020026020010151611477565b90505b6108a0816114fb565b60408301515260005b838a0360ff168110156108e8576108e08782815181106108c557fe5b6020026020010151846040015161166890919063ffffffff16565b6001016108a9565b5060005b8860ff168110156109295761092186828151811061090657fe5b6020026020010151846040015161168290919063ffffffff16565b6001016108ec565b50909f9e505050505050505050505050505050565b6000806000612d2661095785610180015160ff1661169c565b935093509350935060008411806109715750846101600151155b80156109835750610120850151518410155b806109ab57508461016001518015610999575083155b80156109ab5750610120850151516001145b6040518060400160405280600a815260200169535441434b5f4d414e5960b01b81525090610a1a5760405162461bcd60e51b815260206004820181815283516024840152835190928392604490910191908501908083836000831561079257818101518382015260200161077a565b50610140850151516040805180820190915260088152674155585f4d414e5960c01b602082015290841015610a905760405162461bcd60e51b815260206004820181815283516024840152835190928392604490910191908501908083836000831561079257818101518382015260200161077a565b5061012085015151841115610b4e57610aaf610aaa611e1b565b6114fb565b610ac08660600151602001516114fb565b146040518060400160405280600d81526020016c535441434b5f4d495353494e4760981b81525090610b335760405162461bcd60e51b815260206004820181815283516024840152835190928392604490910191908501908083836000831561079257818101518382015260200161077a565b50610b3f856005611e62565b50610b4985611ed9565b610c0e565b61014085015151831115610be957610b67610aaa611e1b565b610b788660600151604001516114fb565b146040518060400160405280600b81526020016a4155585f4d495353494e4760a81b81525090610b335760405162461bcd60e51b815260206004820181815283516024840152835190928392604490910191908501908083836000831561079257818101518382015260200161077a565b610bf38583611e62565b15610c0157610b4985611ed9565b610c0e858263ffffffff16565b84610200015115610cb35760408051600160f81b6020808301919091526000602183018190526022808401919091528351808403909101815260429092019092528051910120606086015160c001511415610c7557610c708560600151611ee4565b610cb3565b6000610200860152606085015160c081015190526101608501518015610c99575083155b610ca857610120850151600090525b610140850151600090525b60005b61012086015151811015610cff57610cf7866101200151602001518281518110610cdc57fe5b6020026020010151876060015161166890919063ffffffff16565b600101610cb6565b5060005b61014086015151811015610d4c57610d44866101400151602001518281518110610d2957fe5b6020026020010151876060015161168290919063ffffffff16565b600101610d03565b505050505050565b6060610d638260000151611eef565b610d78610d7384602001516114fb565b611eef565b610d88610d7385604001516114fb565b610d98610d7386606001516114fb565b610da8610d7387608001516114fb565b610db58760a00151611fbe565b610dc28860c00151611eef565b610dd2610d738a60e001516114fb565b60405160200180806709ac2c6d0d2dcca560c31b81525060080189805190602001908083835b60208310610e175780518252601f199092019160209182019101610df8565b51815160209384036101000a60001901801990921691161790526216100560e91b919093019081528a516003909101928b0191508083835b60208310610e6e5780518252601f199092019160209182019101610e4f565b51815160209384036101000a60001901801990921691161790526216100560e91b9190930190815289516003909101928a0191508083835b60208310610ec55780518252601f199092019160209182019101610ea6565b51815160209384036101000a60001901801990921691161790526216100560e91b919093019081528851600390910192890191508083835b60208310610f1c5780518252601f199092019160209182019101610efd565b51815160209384036101000a60001901801990921691161790526216100560e91b919093019081528751600390910192880191508083835b60208310610f735780518252601f199092019160209182019101610f54565b51815160209384036101000a60001901801990921691161790526216100560e91b919093019081528651600390910192870191508083835b60208310610fca5780518252601f199092019160209182019101610fab565b51815160209384036101000a60001901801990921691161790526216100560e91b919093019081528551600390910192860191508083835b602083106110215780518252601f199092019160209182019101611002565b51815160209384036101000a60001901801990921691161790526216100560e91b919093019081528451600390910192850191508083835b602083106110785780518252601f199092019160209182019101611059565b6001836020036101000a0380198251168184511680821785525050505050509050018061148560f11b8152506002019850505050505050505060405160208183030381529060405290505b919050565b6000806110d36150bb565b836101000151846080015160405180608001604052806110f68860400151612098565b81526020016111088860600151612098565b81526020018760c0015181526020018760e001518152509250925092509193909250565b60006111366150d9565b8351831061117c576040805162461bcd60e51b815260206004820152600e60248201526d1a5b9d985b1a59081bd9999cd95d60921b604482015290519081900360640190fd5b6000806111898686612172565b91509150611195612199565b60ff168160ff1614156111c95760006111ae878461219e565b9093509050826111bd8261220c565b945094505050506112e7565b6111d16122cc565b60ff168160ff1614156111f3576111e886836122d1565b9350935050506112e7565b6111fb612373565b60ff168160ff161415611223576000611214878461219e565b9093509050826111bd82612378565b61122b612464565b60ff168160ff161415611242576111e88683612469565b61124a6124fe565b60ff168160ff161015801561126b5750611262612503565b60ff168160ff16105b156112a757600061127a6124fe565b82039050606061128b828986612508565b90945090508361129a826125b0565b95509550505050506112e7565b6040805162461bcd60e51b815260206004820152601060248201526f696e76616c69642074797065636f646560801b604482015290519081900360640190fd5b9250929050565b60006112f8615116565b611300615116565b6000610100820181905280611315878761219e565b90965091506113248787612469565b602085015295506113358787612469565b60408501529550611346878761112c565b60608501529550611357878761112c565b60808501529550611368878761219e565b60a08501529550611379878761219e565b9096509050611388878761112c565b60e085015291835260c08301529590945092505050565b6113a7615116565b60405180610120016040528083600001518152602001836020015181526020018360400151815260200183606001518152602001836080015181526020018360a0015181526020018360c0015181526020018360e0015181526020018361010001518152509050919050565b61141b6150d9565b6040805160608101825260ff85168152602080820185905282516000808252918101845261146e93830191611466565b6114536150d9565b81526020019060019003908161144b5790505b5090526126f1565b90505b92915050565b61147f6150d9565b604080516001808252818301909252606091816020015b61149e6150d9565b81526020019060019003908161149657905050905082816000815181106114c157fe5b60200260200101819052506114f260405180606001604052808760ff168152602001868152602001838152506126f1565b95945050505050565b6000611505612199565b60ff16826080015160ff16141561152857815161152190612781565b90506110c3565b6115306122cc565b60ff16826080015160ff16141561154e5761152182602001516127a5565b611556612464565b60ff16826080015160ff16141561157857815160a0830151611521919061289a565b6115806124fe565b60ff16826080015160ff1614156115b9576115996150d9565b6115a683604001516128e8565b90506115b1816114fb565b9150506110c3565b6115c1612a5d565b60ff16826080015160ff1614156115da575080516110c3565b6115e2612373565b60ff16826080015160ff161415611627575060608082015160408051607b602080830191909152818301939093528151808203830181529301905281519101206110c3565b6040805162461bcd60e51b8152602060048201526011602482015270496e76616c6964207479706520636f646560781b604482015290519081900360640190fd5b611676826020015182612a62565b82602001819052505050565b611690826040015182612a62565b82604001819052505050565b60008080612d2660018514806116b25750600285145b806116bd5750600385145b156116d75750600292506000915060039050612ae0611e14565b60048514806116e65750600685145b156117005750600292506000915060049050612d42611e14565b600585148061170f5750600785145b156117295750600292506000915060079050612d42611e14565b60088514806117385750600985145b156117525750600392506000915060049050612e14611e14565b600a8514156117705750600292506000915060199050612ae0611e14565b600b85141561178e5750600292506000915060079050612ae0611e14565b601085148061179d5750601185145b806117a85750601285145b806117b35750601385145b806117be5750601685145b806117c95750601785145b806117d45750601885145b156117ed57506002925060009150829050612ae0611e14565b601485141561180a57506002925060009150829050612f01611e14565b601585141561182757506001925060009150829050612f5a611e14565b601985141561184457506001925060009150829050612fac611e14565b601a8514806118535750601b85145b8061185e5750601c85145b806118695750601d85145b156118835750600292506000915060049050612ae0611e14565b60308514156118a057506001925060009150829050612ff2611e14565b60318514156118bd57506000925082915060019050613004611e14565b60328514156118da5750600092508291506001905061301b611e14565b60338514156118f85750600192506000915060029050613032611e14565b6034851415611916575060019250600091506004905061304c611e14565b6035851415611934575060029250600091506004905061308d611e14565b603685141561195157506000925082915060029050613101611e14565b603785141561196e57506000925082915060019050613145611e14565b603885141561198b57506001925060009150829050613161611e14565b60398514156119a857506000925060019150819050613178611e14565b603a8514156119c55750600092508291506002905061318f611e14565b603b8514156119e257506000925082915060019050612d3f611e14565b603c8514156119ff575060009250829150600190506131bd611e14565b603d851415611a1c575060019250600091508290506131d9611e14565b6040851415611a395750600192506000915082905061321d611e14565b6041851415611a575750600292506000915060019050613253611e14565b6042851415611a7557506003925060009150600190506132b0611e14565b6043851415611a935750600292506000915060019050613334611e14565b6044851415611ab15750600392506000915060019050613373611e14565b6050851415611ace575060029250600091508290506133d9611e14565b6051851415611aec5750600392506000915060289050613476611e14565b6052851415611b0a575060019250600091506002905061353a611e14565b6053851415611b2757506001925082915060039050613585611e14565b6054851415611b455750600292506001915060299050613607611e14565b6060851415611b6257506000925082915060649050612d3f611e14565b6061851415611b8057506001925060009150606490506136c4611e14565b6071851415611b9e575060019250600091506028905061370b611e14565b6072851415611bbb57506000925082915060289050613788611e14565b6073851415611bd8575060009250829150600590506137e8611e14565b6074851415611bf5575060009250829150600a90506137f1611e14565b6075851415611c12575060019250600091508290506137fe611e14565b6076851415611c2f57506000925082915060019050613839611e14565b6077851415611c4c57506000925082915060199050613853611e14565b6078851415611c6a57506002925060009150601990506138a4611e14565b6079851415611c88575060039250600091506019905061391c611e14565b607b851415611ca657506001925060009150600a90506139ad611e14565b6080851415611cc557506004925060009150614e209050613a23611e14565b6081851415611ce457506004925060009150610dac9050613ba5611e14565b6082851415611d0457506003925060009150620140509050613ce2611e14565b6083851415611d23575060019250600091506103e89050613de6611e14565b6090851415611d4057506001925060009150829050612ff2611e14565b60a0851415611d5d5750600092508291506001905061412f611e14565b60208510801590611d6f575060248511155b15611dab5760405162461bcd60e51b815260040180806020018281038252602e815260200180615262602e913960400191505060405180910390fd5b60a18510801590611dbd575060a68511155b80611dc85750607085145b15611e045760405162461bcd60e51b815260040180806020018281038252602d815260200180615290602d913960400191505060405180910390fd5b5060009250829150600590506137e85b9193509193565b611e236150d9565b60408051600080825260208201909252611e5d91611e57565b611e446150d9565b815260200190600190039081611e3c5790505b506125b0565b905090565b6000816001600160401b0316836060015160a001511015611ea85750610100820180516005016001600160401b03169052606082015160001960a0909101526001611471565b50610100820180516001600160401b039083018116909152606083015160a001805191831690910390526000611471565b600161020090910152565b600161010090910152565b60408051818152606081810183529182919060208201818036833701905050905060005b6020811015611fb7576000848260208110611f2a57fe5b1a60f881811b9250601080830480831b9360ff9091169091029003901b611f508261416a565b858560020281518110611f5f57fe5b60200101906001600160f81b031916908160001a905350611f7f8161416a565b858560020260010181518110611f9157fe5b60200101906001600160f81b031916908160001a9053505060019092019150611f139050565b5092915050565b60608180611fe55750506040805180820190915260018152600360fc1b60208201526110c3565b8060005b8115611ffd57600101600a82049150611fe9565b6060816001600160401b038111801561201557600080fd5b506040519080825280601f01601f191660200182016040528015612040576020820181803683370190505b50905060001982015b841561208e57600a850660300160f81b8282806001900393508151811061206c57fe5b60200101906001600160f81b031916908160001a905350600a85049450612049565b5095945050505050565b6000600282610100015114156120b0575060006110c3565b600182610100015114156120c6575060016110c3565b815160208301516120d6906114fb565b6120e384604001516114fb565b6120f085606001516114fb565b6120fd86608001516114fb565b8660a001518760c001516121148960e001516114fb565b60405160200180898152602001888152602001878152602001868152602001858152602001848152602001838152602001828152602001985050505050505050506040516020818303038152906040528051906020012090506110c3565b6000808260010184848151811061218557fe5b016020015190925060f81c90509250929050565b600090565b600080828451101580156121b6575060208385510310155b6121f3576040805162461bcd60e51b81526020600482015260096024820152681d1bdbc81cda1bdc9d60ba1b604482015290519081900360640190fd5b60208301612201858561419b565b915091509250929050565b6122146150d9565b6040805160c081018252838152815160608101835260008082526020808301829052845182815280820186529394908501939083019161226a565b6122576150d9565b81526020019060019003908161224f5790505b509052815260200160006040519080825280602002602001820160405280156122ad57816020015b61229a6150d9565b8152602001906001900390816122925790505b5081526000602082018190526040820152600160609091015292915050565b600190565b60006122db6150d9565b826000806122e76150d9565b60006122f38986612172565b90955093506123028986612172565b9095509250600160ff851614156123235761231d898661112c565b90955091505b61232d89866141f4565b9095509050600160ff85161415612358578461234a848385611477565b9650965050505050506112e7565b846123638483611413565b9650965050505050509250929050565b600c90565b6123806150d9565b6040518060c00160405280600081526020016040518060600160405280600060ff1681526020016000801b815260200160006001600160401b03811180156123c757600080fd5b5060405190808252806020026020018201604052801561240157816020015b6123ee6150d9565b8152602001906001900390816123e65790505b5090528152602001600060405190808252806020026020018201604052801561244457816020015b6124316150d9565b8152602001906001900390816124295790505b50815260208101849052600c604082015260016060909101529050919050565b600290565b60006124736150d9565b82845110158015612488575060408385510310155b6124c5576040805162461bcd60e51b81526020600482015260096024820152681d1bdbc81cda1bdc9d60ba1b604482015290519081900360640190fd5b6000806124d286866141f4565b90945091506124e1868561219e565b9094509050836124f18383614205565b9350935050509250929050565b600390565b600d90565b60006060828160ff87166001600160401b038111801561252757600080fd5b5060405190808252806020026020018201604052801561256157816020015b61254e6150d9565b8152602001906001900390816125465790505b50905060005b8760ff168160ff1610156125a35761257f878461112c565b838360ff168151811061258e57fe5b60209081029190910101529250600101612567565b5090969095509350505050565b6125b86150d9565b6125c282516142c4565b612613576040805162461bcd60e51b815260206004820152601a60248201527f5475706c65206d75737420686176652076616c69642073697a65000000000000604482015290519081900360640190fd5b600160005b835181101561264a5783818151811061262d57fe5b602002602001015160a00151820191508080600101915050612618565b506040518060c00160405280600081526020016040518060600160405280600060ff1681526020016000801b815260200160006001600160401b038111801561269257600080fd5b506040519080825280602002602001820160405280156126cc57816020015b6126b96150d9565b8152602001906001900390816126b15790505b5090528152602081019490945260006040850152600360608501526080909301525090565b6126f96150d9565b6040518060c001604052806000815260200183815260200160006001600160401b038111801561272857600080fd5b5060405190808252806020026020018201604052801561276257816020015b61274f6150d9565b8152602001906001900390816127475790505b5081526000602082015260016040820181905260609091015292915050565b60408051602080820193909352815180820384018152908201909152805191012090565b60006002826040015151106127b657fe5b604082015151612819576127c86122cc565b82600001518360200151604051602001808460ff1660f81b81526001018360ff1660f81b815260010182815260200193505050506040516020818303038152906040528051906020012090506110c3565b6128216122cc565b8260000151612847846040015160008151811061283a57fe5b60200260200101516114fb565b8460200151604051602001808560ff1660f81b81526001018460ff1660f81b8152600101838152602001828152602001945050505050604051602081830303815290604052805190602001209050919050565b60006128a46124fe565b8383604051602001808460ff1660f81b8152600101838152602001828152602001935050505060405160208183030381529060405280519060200120905092915050565b6128f06150d9565b60088251111561293e576040805162461bcd60e51b8152602060048201526014602482015273092dcecc2d8d2c840e8eae0d8ca40d8cadccee8d60631b604482015290519081900360640190fd5b606082516001600160401b038111801561295757600080fd5b50604051908082528060200260200182016040528015612981578160200160208202803683370190505b508051909150600160005b828110156129e4576129a386828151811061283a57fe5b8482815181106129af57fe5b6020026020010181815250508581815181106129c757fe5b602002602001015160a0015182019150808060010191505061298c565b506000835184604051602001808360ff1660f81b8152600101828051906020019060200280838360005b83811015612a26578181015183820152602001612a0e565b5050505090500192505050604051602081830303815290604052805190602001209050612a538183614205565b9695505050505050565b606490565b612a6a6150d9565b6040805160028082526060828101909352816020015b612a886150d9565b815260200190600190039081612a805790505090508281600081518110612aab57fe5b60200260200101819052508381600181518110612ac457fe5b6020026020010181905250612ad8816128e8565b949350505050565b612ae86150d9565b612af68261012001516142cb565b9050612b006150d9565b612b0e8361012001516142cb565b9050612b198261430d565b1580612b2b5750612b298161430d565b155b15612b4057612b3983614318565b5050612d3f565b8151815161018085015160009060ff1660011415612b615750818101612d28565b61018086015160ff1660021415612b7b5750818102612d28565b61018086015160ff1660031415612b955750808203612d28565b61018086015160ff16600a1415612baf575080820a612d28565b61018086015160ff16600b1415612bc9575080820b612d28565b61018086015160ff1660101415612be35750808210612d28565b61018086015160ff1660111415612bfd5750808211612d28565b61018086015160ff1660121415612c175750808212612d28565b61018086015160ff1660131415612c315750808213612d28565b61018086015160ff1660161415612c4b5750818116612d28565b61018086015160ff1660171415612c655750818117612d28565b61018086015160ff1660181415612c7f5750818118612d28565b61018086015160ff16601a1415612c99575080821a612d28565b61018086015160ff16601b1415612cb3575080821b612d28565b61018086015160ff16601c1415612ccd575080821c612d28565b61018086015160ff16601d1415612ce7575080821d612d28565b61018086015160ff1660221415612d26575060408051602080820185905281830184905282518083038401815260609092019092528051910120612d28565bfe5b610d4c866101200151612d3a8361220c565b614321565b50565b612d4a6150d9565b612d588261012001516142cb565b9050612d626150d9565b612d708361012001516142cb565b9050612d7b8261430d565b1580612d8d5750612d8b8161430d565b155b80612d9757508051155b15612da557612b3983614318565b8151815161018085015160009060ff1660041415612dc65750808204612d28565b61018086015160ff1660051415612de05750808205612d28565b61018086015160ff1660061415612dfa5750808206612d28565b61018086015160ff1660071415612d265750808207612d28565b612e1c6150d9565b612e2a8261012001516142cb565b9050612e346150d9565b612e428361012001516142cb565b9050612e4c6150d9565b612e5a8461012001516142cb565b9050612e658361430d565b1580612e775750612e758261430d565b155b80612e885750612e868161430d565b155b80612e9257508051155b15612ea857612ea084614318565b505050612d3f565b82518251825161018087015160009060ff1660081415612ecd57818385089050612ee5565b61018088015160ff1660091415612d26578183850990505b612ef7886101200151612d3a8361220c565b5050505050505050565b612f096150d9565b612f178261012001516142cb565b9050612f216150d9565b612f2f8361012001516142cb565b9050612f55836101200151612d3a612f46846114fb565b612f4f866114fb565b1461434b565b505050565b612f626150d9565b612f708261012001516142cb565b9050612f7b8161430d565b612f8e57612f8882614318565b50612d3f565b8051610120830151811590612fa690612d3a8361220c565b50505050565b612fb46150d9565b612fc28261012001516142cb565b9050612fcd8161430d565b612fda57612f8882614318565b8051610120830151811990612fa690612d3a8361220c565b6130008161012001516142cb565b5050565b612d3f816101200151826060015160800151614321565b612d3f816101200151826060015160600151614321565b6130408161012001516142cb565b60609182015190910152565b6130546150d9565b6130628261012001516142cb565b905061306d8161436d565b61307a57612f8882614318565b613083816114fb565b6060830151525050565b6130956150d9565b6130a38261012001516142cb565b90506130ad6150d9565b6130bb8361012001516142cb565b90506130c68261436d565b15806130d857506130d68161430d565b155b156130e657612b3983614318565b805115612f55576130f6826114fb565b606084015152505050565b61012081015151600090158015613131575061311e610aaa611e1b565b61312f8360600151602001516114fb565b145b9050613000826101200151612d3a8361434b565b612d3f816101200151612d3a836040015160000151600161437a565b612d3f816101400151612d3a8361012001516142cb565b612d3f816101200151612d3a8361014001516142cb565b6101408101515160009015801561313157506131ac610aaa611e1b565b61312f8360600151604001516114fb565b612d3f816101200151612d3a836060015160c00151600161437a565b6131e16150d9565b6131ef8261012001516142cb565b90506131fa8161436d565b61320757612f8882614318565b613210816114fb565b606083015160c001525050565b6132256150d9565b6132338261012001516142cb565b905061324482610120015182614321565b61300082610120015182614321565b61325b6150d9565b6132698261012001516142cb565b90506132736150d9565b6132818361012001516142cb565b905061329283610120015182614321565b6132a183610120015183614321565b612f5583610120015182614321565b6132b86150d9565b6132c68261012001516142cb565b90506132d06150d9565b6132de8361012001516142cb565b90506132e86150d9565b6132f68461012001516142cb565b905061330784610120015182614321565b61331684610120015183614321565b61332584610120015184614321565b612fa684610120015182614321565b61333c6150d9565b61334a8261012001516142cb565b90506133546150d9565b6133628361012001516142cb565b90506132a183610120015183614321565b61337b6150d9565b6133898261012001516142cb565b90506133936150d9565b6133a18361012001516142cb565b90506133ab6150d9565b6133b98461012001516142cb565b90506133ca84610120015184614321565b61332584610120015183614321565b6133e16150d9565b6133ef8261012001516142cb565b90506133f96150d9565b6134078361012001516142cb565b90506134128261430d565b1580613424575061342281614439565b155b8061343e575061343381614446565b60ff16826000015110155b1561344c57612b3983614318565b612f55836101200151826040015184600001518151811061346957fe5b6020026020010151614321565b61347e6150d9565b61348c8261012001516142cb565b90506134966150d9565b6134a48361012001516142cb565b90506134ae6150d9565b6134bc8461012001516142cb565b90506134c78361430d565b15806134d957506134d782614439565b155b806134f357506134e882614446565b60ff16836000015110155b1561350157612ea084614318565b60408201518351815183918391811061351657fe5b6020026020010181905250613533856101200151612d3a836125b0565b5050505050565b6135426150d9565b6135508261012001516142cb565b905061355b81614439565b61356857612f8882614318565b613000826101200151612d3a61357d84614446565b60ff1661220c565b61358d6150d9565b61359b8261012001516142cb565b90506135a56150d9565b6135b38361014001516142cb565b90506135be8261430d565b15806135d057506135ce81614439565b155b806135ea57506135df81614446565b60ff16826000015110155b156135f857612b3983614318565b61344c83610140015182614321565b61360f6150d9565b61361d8261012001516142cb565b90506136276150d9565b6136358361012001516142cb565b905061363f6150d9565b61364d8461014001516142cb565b905061365881614439565b158061366a57506136688361430d565b155b80613684575061367981614446565b60ff16836000015110155b1561369257612ea084614318565b6040810151835181518491839181106136a757fe5b6020026020010181905250613533856101400151612d3a836125b0565b8060e001516136da610aaa8361012001516142cb565b604080516020808201949094528082019290925280518083038201815260609092019052805191012060e090910152565b6137136150d9565b6137218261012001516142cb565b905061372e610aaa611e1b565b61373f836060015160e001516114fb565b146137575761374d8261446d565b606083015160e001525b613000826101200151612d3a61376c846114fb565b612f4f866060015160e001516040015160018151811061283a57fe5b613793610aaa611e1b565b6137a4826060015160e001516114fb565b146137d6576137c0816101200151826060015160e00151614321565b6137c8611e1b565b606082015160e00152612d3f565b612d3f816101200151612d3a8361446d565b612d3f81614318565b612d3f8160600151614d85565b6138066150d9565b6138148261012001516142cb565b905061381f8161430d565b61382c57612f8882614318565b51606082015160a0015250565b612d3f816101200151612d3a836060015160a0015161220c565b61012081015160408051600160f81b6020808301919091526000602183018190526022808401919091528351808403909101815260429092019092528051910120612d3f9190612d3a90600161437a565b6138ac6150d9565b6138ba8261012001516142cb565b90506138c46150d9565b6138d28361012001516142cb565b90506138dd8261430d565b15806138ef57506138ed8161436d565b155b156138fd57612b3983614318565b612f55836101200151612d3a8460000151613917856114fb565b611413565b6139246150d9565b6139328261012001516142cb565b905061393c6150d9565b61394a8361012001516142cb565b90506139546150d9565b6139628461012001516142cb565b905061396d8361430d565b158061397f575061397d8161436d565b155b1561398d57612ea084614318565b612fa6846101200151612d3a85600001516139a7856114fb565b86611477565b6139b56150d9565b6139c38261012001516142cb565b90506139ce8161430d565b6139db57612f8882614318565b60408051600080825260208201909252606091613a0e565b6139fb6150d9565b8152602001906001900390816139f35790505b509050612f55836101200151612d3a836125b0565b613a2b6150d9565b613a398261012001516142cb565b9050613a436150d9565b613a518361012001516142cb565b9050613a5b6150d9565b613a698461012001516142cb565b9050613a736150d9565b613a818561012001516142cb565b9050613a8c8461430d565b1580613a9e5750613a9c8361430d565b155b80613aaf5750613aad8261430d565b155b80613ac05750613abe8161430d565b155b15613ad757613ace85614318565b50505050612d3f565b83518351835115801590613aed57508351600114155b15613b1057613b05876101200151612d3a600061220c565b505050505050612d3f565b83518351604080516000808252602080830180855285905260ff601b9096019586168385015260608301889052608083018790529251909260019260a080820193601f1981019281900390910190855afa158015613b72573d6000803e3d6000fd5b505050602060405103519050613b998a6101200151612d3a836001600160a01b031661220c565b50505050505050505050565b613bad6150d9565b613bbb8261012001516142cb565b9050613bc56150d9565b613bd38361012001516142cb565b9050613bdd6150d9565b613beb8461012001516142cb565b9050613bf56150d9565b613c038561012001516142cb565b9050613c0e8461430d565b1580613c205750613c1e8361430d565b155b80613c315750613c2f8261430d565b155b80613c425750613c408161430d565b155b15613c5057613ace85614318565b613c586150bb565b5060408051608081018252855181528451602082015283519181019190915281516060820152613c86615181565b600060408260808560066107d05a03fa905080613cb257613ca688614318565b50505050505050612d3f565b610120880151613ccd90612d3a8460015b602002015161220c565b610120880151612ef790612d3a846000613cc3565b613cea6150d9565b613cf88261012001516142cb565b9050613d026150d9565b613d108361012001516142cb565b9050613d1a6150d9565b613d288461012001516142cb565b9050613d338361430d565b1580613d455750613d438261430d565b155b80613d565750613d548161430d565b155b15613d6457612ea084614318565b613d6c61519f565b50604080516060810182528451815283516020820152825191810191909152613d93615181565b600060408260808560076107d05a03fa905080613db357613b0587614318565b610120870151613dc890612d3a846001613cc3565b610120870151613ddd90612d3a846000613cc3565b50505050505050565b613dee6150d9565b613dfc8261012001516142cb565b9050613e066151bd565b6000805b601e811015613e9857613e1c84614439565b613e295760019150613e98565b60408401518051613e3a5750613e98565b8051600214613e4d576001925050613e98565b80600081518110613e5a57fe5b60200260200101518483601e8110613e6e57fe5b6020020152805181906001908110613e8257fe5b6020908102919091010151945050600101613e0a565b613ea7856207a1208302611e62565b15613ecc57610100850180516103e719016001600160401b03169052613ace85611ed9565b8180613ede5750613edc84614439565b155b80613eed575060408401515115155b15613efb57613ace85614318565b613f036151eb565b60005b828110156140e057613f166150d9565b8582601e8110613f2257fe5b60200201519050613f3281614439565b613f3f57613ca688614318565b60408101518051600614613f6357613f5689614318565b5050505050505050612d3f565b60005b6006811015613fae57613f8b828281518110613f7e57fe5b602002602001015161430d565b613fa657613f988a614318565b505050505050505050612d3f565b600101613f66565b5080600081518110613fbc57fe5b602002602001015160000151848460060260b48110613fd757fe5b6020020152805181906001908110613feb57fe5b602002602001015160000151848460060260010160b4811061400957fe5b602002015280518190600390811061401d57fe5b602002602001015160000151848460060260020160b4811061403b57fe5b602002015280518190600290811061404f57fe5b602002602001015160000151848460060260030160b4811061406d57fe5b602002015280518190600590811061408157fe5b602002602001015160000151848460060260040160b4811061409f57fe5b60200201528051819060049081106140b357fe5b602002602001015160000151848460060260050160b481106140d157fe5b60200201525050600101613f06565b5060c082026140ed61520a565b6000602082848660086107d05a03fa90508061410c57613f5689614318565b61012089015182516141249190612d3a90151561434b565b505050505050505050565b612d3f816101200151612d3a6000801b6040516020018082815260200191505060405160208183030381529060405280519060200120612378565b6000600a60f883901c101561418a578160f81c60300160f81b90506110c3565b8160f81c60570160f81b90506110c3565b600081602001835110156141eb576040805162461bcd60e51b815260206004820152601260248201527152656164206f7574206f6620626f756e647360701b604482015290519081900360640190fd5b50016020015190565b60008060208301612201858561419b565b61420d6150d9565b6040805160c0810182528481528151606081018352600080825260208083018290528451828152808201865293949085019390830191614263565b6142506150d9565b8152602001906001900390816142485790505b509052815260200160006040519080825280602002602001820160405280156142a657816020015b6142936150d9565b81526020019060019003908161428b5790505b50815260006020820152600260408201526060019290925250919050565b6008101590565b6142d36150d9565b6142db6150d9565b82602001516001846000015103815181106142f257fe5b60209081029190910101518351600019018452915050919050565b6080015160ff161590565b612d3f81611ed9565b80826020015183600001518151811061433657fe5b60209081029190910101525080516001019052565b6143536150d9565b811561436357611521600161220c565b611521600061220c565b6080015160ff1660011490565b6143826150d9565b6040805160c08101825284815281516060810183526000808252602080830182905284518281528082018652939490850193908301916143d8565b6143c56150d9565b8152602001906001900390816143bd5790505b5090528152602001600060405190808252806020026020018201604052801561441b57816020015b6144086150d9565b8152602001906001900390816144005790505b50815260006020820152606460408201526060019290925250919050565b6080015160ff1660031490565b608081015160009060ff166003141561446557506040810151516110c3565b5060016110c3565b6144756150d9565b6101a082015160408051600880825261012082019092526000918291606091816020015b6144a16150d9565b815260200190600190039081614499579050509050600084876101c00151815181106144c957fe5b01602001516101c0880180516001019081905260f89190911c91506000908190819081906144f8908a90614d90565b6101c08c01805160140190819052909150614514908a9061219e565b6101c08d018290529450614529908a9061219e565b6101c08d01829052935061453e908a9061219e565b6101c08d018290529750614553908a9061219e565b6101c08d01829052925060009061456b908b9061219e565b6101c08e018290529150600090614584908c9084614df0565b6101c08e0180518d81016020018590208582019092529192506145ac89868a8a8f8b87614e22565b9b506145ba8960ff1661220c565b8a6000815181106145c757fe5b60200260200101819052506145db8861220c565b8a6001815181106145e857fe5b60200260200101819052506145fc8761220c565b8a60028151811061460957fe5b6020026020010181905250614626856001600160a01b031661220c565b8a60038151811061463357fe5b60200260200101819052506146478b61220c565b8a60048151811061465457fe5b60200260200101819052506146688661220c565b8a60058151811061467557fe5b60200260200101819052506146898461220c565b8a60068151811061469657fe5b60200260200101819052506146ac83600161437a565b8a6007815181106146b957fe5b602002602001018190525050505050505050505060006146de85886101c0015161219e565b6101c089019190915260a088015190915081148061470257508660a0015160010181145b614743576040805162461bcd60e51b815260206004820152600d60248201526c5345515f42415443485f4e554d60981b604482015290519081900360640190fd5b600085886101c001518151811061475657fe5b01602001516101c089018051600101905260f81c905080158061477c57508060ff166001145b6147ba576040805162461bcd60e51b815260206004820152600a6024820152691254d7d111531056515160b21b604482015290519081900360640190fd5b600060ff821661482d576147d3878a6101c0015161219e565b6101c08b0191909152604080517129b2b8bab2b731b2b91036b2b9b9b0b3b29d60711b602080830191909152603282019390935260528082018a905282518083039091018152607290910190915280519101209050614bc0565b600083156148af5789600001516001600160a01b031663d9dd67ab600186036040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561488057600080fd5b505afa158015614894573d6000803e3d6000fd5b505050506040513d60208110156148aa57600080fd5b505190505b8060405160200180806e283932bb34b7bab9903130ba31b41d60891b815250600f018281526020019150506040516020818303038152906040528051906020012091506000806000806149078c8f6101c0015161219e565b8f6101c0018196508281525050506149248c8f6101c0015161219e565b8f6101c0018195508281525050506149418c8f6101c0015161219e565b8f6101c00181945082815250505061495e8c8f6101c0015161219e565b8f6101c001819350828152505050828a10156149b1576040805162461bcd60e51b815260206004820152600d60248201526c1111531056515117d4d5105495609a1b604482015290519081900360640190fd5b818a106149f3576040805162461bcd60e51b815260206004820152600b60248201526a1111531056515117d1539160aa1b604482015290519081900360640190fd5b60008a15614a75578e602001516001600160a01b031663d9dd67ab60018d036040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015614a4657600080fd5b505afa158015614a5a573d6000803e3d6000fd5b505050506040513d6020811015614a7057600080fd5b505190505b8e602001516001600160a01b031663d9dd67ab8c6040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015614abd57600080fd5b505afa158015614ad1573d6000803e3d6000fd5b505050506040513d6020811015614ae757600080fd5b5051614af3828e614e98565b14614b33576040805162461bcd60e51b815260206004820152600b60248201526a44454c415945445f41434360a81b604482015290519081900360640190fd5b84848c03019a50614b438b61220c565b8a600481518110614b5057fe5b60209081029190910181019190915260408051702232b630bcb2b21036b2b9b9b0b3b2b99d60791b8184015260318101989098526051880196909652607187019490945250609185019190915260b1808501919091528251808503909101815260d1909301909152815191012090505b88608001518514614c0c576040805162461bcd60e51b815260206004820152601160248201527057524f4e475f4d53475f5345515f4e554d60781b604482015290519081900360640190fd5b6000614c1d888b6101c0015161219e565b6101c08c0191909152905060005b81811015614ca2576000614c448a8d6101c0015161219e565b6101c08e0191909152604080517129b2b8bab2b731b2b91036b2b9b9b0b3b29d60711b602080830191909152603282019790975260528082019390935281518082039093018352607201905280519401939093209250600101614c2b565b5089600001516001600160a01b031663d9dd67ab856040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015614ceb57600080fd5b505afa158015614cff573d6000803e3d6000fd5b505050506040513d6020811015614d1557600080fd5b50518214614d5c576040805162461bcd60e51b815260206004820152600f60248201526e57524f4e475f42415443485f41434360881b604482015290519081900360640190fd5b60808a018051600101905260a08a01849052614d77856125b0565b9a9950505050505050505050565b600261010090910152565b60008160140183511015614de0576040805162461bcd60e51b815260206004820152601260248201527152656164206f7574206f6620626f756e647360701b604482015290519081900360640190fd5b500160200151600160601b900490565b600080614e088585614e0186614ec4565b6001614eef565b5085519091506114f290614e1d607b84614e98565b614e98565b6040805160f89890981b6001600160f81b0319166020808a019190915260609790971b6bffffffffffffffffffffffff19166021890152603588019590955260558701939093526075860191909152609585015260b5808501919091528151808503909101815260d59093019052815191012090565b604080516020808201949094528082019290925280518083038201815260609092019052805191012090565b600060018211614ed6575060016110c3565b614ee560026001840104614ec4565b60020290506110c3565b60008060208411614f435785518510614f1757614f0c6000612781565b600191509150614fba565b6000614f2b614f268888614fc3565b612781565b905080614f386000612781565b909350149050614fba565b600080614f5c886002880489016002895b046000614eef565b91509150808015614f6a5750845b15614f8957614f7e88886002890488614eef565b935093505050614fba565b600080614f998a8a60028b614f54565b91509150614fa78285614e98565b818015614fb15750835b95509550505050505b94509492505050565b600080805b602081101561501a57600882901b91506000818501865111614feb576000615009565b8582860181518110614ff957fe5b01602001516001600160f81b0319165b60f81c929092179150600101614fc8565b509392505050565b604080516102208101825260008082526020820152908101615042615116565b815260200161504f615116565b815260006020820181905260408201819052606082018190526080820181905260a082015260c00161507f615228565b815260200161508c615228565b81526000602082018190526040820181905260608083018190526080830182905260a083015260c09091015290565b60405180608001604052806004906020820280368337509192915050565b6040518060c00160405280600081526020016150f3615242565b815260606020820181905260006040830181905290820181905260809091015290565b60408051610120810190915260008152602081016151326150d9565b815260200161513f6150d9565b815260200161514c6150d9565b81526020016151596150d9565b815260006020820181905260408201526060016151746150d9565b8152602001600081525090565b60405180604001604052806002906020820280368337509192915050565b60405180606001604052806003906020820280368337509192915050565b604051806103c00160405280601e905b6151d56150d9565b8152602001906001900390816151cd5790505090565b60405180611680016040528060b4906020820280368337509192915050565b60405180602001604052806001906020820280368337509192915050565b604051806040016040528060008152602001606081525090565b604080516060808201835260008083526020830152918101919091529056fe75736520616e6f7468657220636f6e747261637420746f2068616e646c652068617368696e67206f70636f64657375736520616e6f7468657220636f6e747261637420746f2068616e646c6520627566666572206f70636f646573a2646970667358221220c8655ab0f2aa96a6a7fd6338def520604b7b082e0f53459e0b6037ca1d65311764736f6c634300060c0033"

// DeployOneStepProof deploys a new Ethereum contract, binding an instance of OneStepProof to it.
func DeployOneStepProof(auth *bind.TransactOpts, backend bind.ContractBackend) (common.Address, *types.Transaction, *OneStepProof, error) {
	parsed, err := abi.JSON(strings.NewReader(OneStepProofABI))
	if err != nil {
		return common.Address{}, nil, nil, err
	}

	address, tx, contract, err := bind.DeployContract(auth, parsed, common.FromHex(OneStepProofBin), backend)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &OneStepProof{OneStepProofCaller: OneStepProofCaller{contract: contract}, OneStepProofTransactor: OneStepProofTransactor{contract: contract}, OneStepProofFilterer: OneStepProofFilterer{contract: contract}}, nil
}

// OneStepProof is an auto generated Go binding around an Ethereum contract.
type OneStepProof struct {
	OneStepProofCaller     // Read-only binding to the contract
	OneStepProofTransactor // Write-only binding to the contract
	OneStepProofFilterer   // Log filterer for contract events
}

// OneStepProofCaller is an auto generated read-only Go binding around an Ethereum contract.
type OneStepProofCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// OneStepProofTransactor is an auto generated write-only Go binding around an Ethereum contract.
type OneStepProofTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// OneStepProofFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type OneStepProofFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// OneStepProofSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type OneStepProofSession struct {
	Contract     *OneStepProof     // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// OneStepProofCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type OneStepProofCallerSession struct {
	Contract *OneStepProofCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts       // Call options to use throughout this session
}

// OneStepProofTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type OneStepProofTransactorSession struct {
	Contract     *OneStepProofTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts       // Transaction auth options to use throughout this session
}

// OneStepProofRaw is an auto generated low-level Go binding around an Ethereum contract.
type OneStepProofRaw struct {
	Contract *OneStepProof // Generic contract binding to access the raw methods on
}

// OneStepProofCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type OneStepProofCallerRaw struct {
	Contract *OneStepProofCaller // Generic read-only contract binding to access the raw methods on
}

// OneStepProofTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type OneStepProofTransactorRaw struct {
	Contract *OneStepProofTransactor // Generic write-only contract binding to access the raw methods on
}

// NewOneStepProof creates a new instance of OneStepProof, bound to a specific deployed contract.
func NewOneStepProof(address common.Address, backend bind.ContractBackend) (*OneStepProof, error) {
	contract, err := bindOneStepProof(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &OneStepProof{OneStepProofCaller: OneStepProofCaller{contract: contract}, OneStepProofTransactor: OneStepProofTransactor{contract: contract}, OneStepProofFilterer: OneStepProofFilterer{contract: contract}}, nil
}

// NewOneStepProofCaller creates a new read-only instance of OneStepProof, bound to a specific deployed contract.
func NewOneStepProofCaller(address common.Address, caller bind.ContractCaller) (*OneStepProofCaller, error) {
	contract, err := bindOneStepProof(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &OneStepProofCaller{contract: contract}, nil
}

// NewOneStepProofTransactor creates a new write-only instance of OneStepProof, bound to a specific deployed contract.
func NewOneStepProofTransactor(address common.Address, transactor bind.ContractTransactor) (*OneStepProofTransactor, error) {
	contract, err := bindOneStepProof(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &OneStepProofTransactor{contract: contract}, nil
}

// NewOneStepProofFilterer creates a new log filterer instance of OneStepProof, bound to a specific deployed contract.
func NewOneStepProofFilterer(address common.Address, filterer bind.ContractFilterer) (*OneStepProofFilterer, error) {
	contract, err := bindOneStepProof(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &OneStepProofFilterer{contract: contract}, nil
}

// bindOneStepProof binds a generic wrapper to an already deployed contract.
func bindOneStepProof(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(OneStepProofABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_OneStepProof *OneStepProofRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _OneStepProof.Contract.OneStepProofCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_OneStepProof *OneStepProofRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _OneStepProof.Contract.OneStepProofTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_OneStepProof *OneStepProofRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _OneStepProof.Contract.OneStepProofTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_OneStepProof *OneStepProofCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _OneStepProof.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_OneStepProof *OneStepProofTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _OneStepProof.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_OneStepProof *OneStepProofTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _OneStepProof.Contract.contract.Transact(opts, method, params...)
}

// ExecuteStep is a free data retrieval call binding the contract method 0x9d16dd04.
//
// Solidity: function executeStep(address bridge, uint256 initialMessagesRead, bytes32[2] accs, bytes proof, bytes bproof) view returns(uint64 gas, uint256 totalMessagesRead, bytes32[4] fields)
func (_OneStepProof *OneStepProofCaller) ExecuteStep(opts *bind.CallOpts, bridge common.Address, initialMessagesRead *big.Int, accs [2][32]byte, proof []byte, bproof []byte) (struct {
	Gas               uint64
	TotalMessagesRead *big.Int
	Fields            [4][32]byte
}, error) {
	var out []interface{}
	err := _OneStepProof.contract.Call(opts, &out, "executeStep", bridge, initialMessagesRead, accs, proof, bproof)

	outstruct := new(struct {
		Gas               uint64
		TotalMessagesRead *big.Int
		Fields            [4][32]byte
	})
	if err != nil {
		return *outstruct, err
	}

	outstruct.Gas = *abi.ConvertType(out[0], new(uint64)).(*uint64)
	outstruct.TotalMessagesRead = *abi.ConvertType(out[1], new(*big.Int)).(**big.Int)
	outstruct.Fields = *abi.ConvertType(out[2], new([4][32]byte)).(*[4][32]byte)

	return *outstruct, err

}

// ExecuteStep is a free data retrieval call binding the contract method 0x9d16dd04.
//
// Solidity: function executeStep(address bridge, uint256 initialMessagesRead, bytes32[2] accs, bytes proof, bytes bproof) view returns(uint64 gas, uint256 totalMessagesRead, bytes32[4] fields)
func (_OneStepProof *OneStepProofSession) ExecuteStep(bridge common.Address, initialMessagesRead *big.Int, accs [2][32]byte, proof []byte, bproof []byte) (struct {
	Gas               uint64
	TotalMessagesRead *big.Int
	Fields            [4][32]byte
}, error) {
	return _OneStepProof.Contract.ExecuteStep(&_OneStepProof.CallOpts, bridge, initialMessagesRead, accs, proof, bproof)
}

// ExecuteStep is a free data retrieval call binding the contract method 0x9d16dd04.
//
// Solidity: function executeStep(address bridge, uint256 initialMessagesRead, bytes32[2] accs, bytes proof, bytes bproof) view returns(uint64 gas, uint256 totalMessagesRead, bytes32[4] fields)
func (_OneStepProof *OneStepProofCallerSession) ExecuteStep(bridge common.Address, initialMessagesRead *big.Int, accs [2][32]byte, proof []byte, bproof []byte) (struct {
	Gas               uint64
	TotalMessagesRead *big.Int
	Fields            [4][32]byte
}, error) {
	return _OneStepProof.Contract.ExecuteStep(&_OneStepProof.CallOpts, bridge, initialMessagesRead, accs, proof, bproof)
}

// ExecuteStepDebug is a free data retrieval call binding the contract method 0x2ccebb7a.
//
// Solidity: function executeStepDebug(address bridge, uint256 initialMessagesRead, bytes32[2] accs, bytes proof, bytes bproof) view returns(string startMachine, string afterMachine)
func (_OneStepProof *OneStepProofCaller) ExecuteStepDebug(opts *bind.CallOpts, bridge common.Address, initialMessagesRead *big.Int, accs [2][32]byte, proof []byte, bproof []byte) (struct {
	StartMachine string
	AfterMachine string
}, error) {
	var out []interface{}
	err := _OneStepProof.contract.Call(opts, &out, "executeStepDebug", bridge, initialMessagesRead, accs, proof, bproof)

	outstruct := new(struct {
		StartMachine string
		AfterMachine string
	})
	if err != nil {
		return *outstruct, err
	}

	outstruct.StartMachine = *abi.ConvertType(out[0], new(string)).(*string)
	outstruct.AfterMachine = *abi.ConvertType(out[1], new(string)).(*string)

	return *outstruct, err

}

// ExecuteStepDebug is a free data retrieval call binding the contract method 0x2ccebb7a.
//
// Solidity: function executeStepDebug(address bridge, uint256 initialMessagesRead, bytes32[2] accs, bytes proof, bytes bproof) view returns(string startMachine, string afterMachine)
func (_OneStepProof *OneStepProofSession) ExecuteStepDebug(bridge common.Address, initialMessagesRead *big.Int, accs [2][32]byte, proof []byte, bproof []byte) (struct {
	StartMachine string
	AfterMachine string
}, error) {
	return _OneStepProof.Contract.ExecuteStepDebug(&_OneStepProof.CallOpts, bridge, initialMessagesRead, accs, proof, bproof)
}

// ExecuteStepDebug is a free data retrieval call binding the contract method 0x2ccebb7a.
//
// Solidity: function executeStepDebug(address bridge, uint256 initialMessagesRead, bytes32[2] accs, bytes proof, bytes bproof) view returns(string startMachine, string afterMachine)
func (_OneStepProof *OneStepProofCallerSession) ExecuteStepDebug(bridge common.Address, initialMessagesRead *big.Int, accs [2][32]byte, proof []byte, bproof []byte) (struct {
	StartMachine string
	AfterMachine string
}, error) {
	return _OneStepProof.Contract.ExecuteStepDebug(&_OneStepProof.CallOpts, bridge, initialMessagesRead, accs, proof, bproof)
}
