// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package ethbridgetestcontracts

import (
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
)

// OneStepProof2ABI is the input ABI used to generate the binding from.
const OneStepProof2ABI = "[{\"inputs\":[{\"internalType\":\"bytes32[3]\",\"name\":\"_machineFields\",\"type\":\"bytes32[3]\"},{\"internalType\":\"bytes\",\"name\":\"proof\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"bproof\",\"type\":\"bytes\"}],\"name\":\"executeStep\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"gas\",\"type\":\"uint64\"},{\"internalType\":\"bytes32[5]\",\"name\":\"fields\",\"type\":\"bytes32[5]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"proof\",\"type\":\"bytes\"}],\"name\":\"parseProof\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}]"

// OneStepProof2FuncSigs maps the 4-byte function signature to its string representation.
var OneStepProof2FuncSigs = map[string]string{
	"3a06aeec": "executeStep(bytes32[3],bytes,bytes)",
	"793deea3": "parseProof(bytes)",
}

// OneStepProof2Bin is the compiled bytecode used for deploying new contracts.
var OneStepProof2Bin = "0x608060405234801561001057600080fd5b50613a33806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80633a06aeec1461003b578063793deea314610149575b600080fd5b610100600480360360a081101561005157600080fd5b81018160808101606082013564010000000081111561006f57600080fd5b82018360208201111561008157600080fd5b803590602001918460018302840111640100000000831117156100a357600080fd5b9193909290916020810190356401000000008111156100c157600080fd5b8201836020820111156100d357600080fd5b803590602001918460018302840111640100000000831117156100f557600080fd5b509092509050610312565b60405167ffffffffffffffff83168152602081018260a080838360005b8381101561013557818101518382015260200161011d565b505050509050019250505060405180910390f35b6101ef6004803603602081101561015f57600080fd5b81019060208101813564010000000081111561017a57600080fd5b82018360208201111561018c57600080fd5b803590602001918460018302840111640100000000831117156101ae57600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506103c4945050505050565b6040518080602001806020018060200180602001858103855289818151815260200191508051906020019060200280838360005b8381101561023b578181015183820152602001610223565b50505050905001858103845288818151815260200191508051906020019060200280838360005b8381101561027a578181015183820152602001610262565b50505050905001858103835287818151815260200191508051906020019060200280838360005b838110156102b95781810151838201526020016102a1565b50505050905001858103825286818151815260200191508051906020019060200280838360005b838110156102f85781810151838201526020016102e0565b505050509050019850505050505050505060405180910390f35b600061031c613802565b610324613820565b604080516020601f890181900481028201810183528882526103a1928b3592828d013592918d0135918c908c908190840183828082843760009201919091525050604080516020601f8e018190048102820181019092528c815292508c91508b908190840183828082843760009201919091525061040092505050565b90506103ac816108bd565b6103b581610cbc565b92509250509550959350505050565b6060806060806103d26138a6565b6103db86610d1f565b80516020820151604083015160609093015191975095509093509150505b9193509193565b610408613820565b60008360008151811061041757fe5b602001015160f81c60f81b60f81c905060008460018151811061043657fe5b602001015160f81c60f81b60f81c905060008560028151811061045557fe5b016020015160f81c9050600360606004840160ff1667ffffffffffffffff8111801561048057600080fd5b506040519080825280602002602001820160405280156104ba57816020015b6104a76138ce565b81526020019060019003908161049f5790505b50905060608360040160ff1667ffffffffffffffff811180156104dc57600080fd5b5060405190808252806020026020018201604052801561051657816020015b6105036138ce565b8152602001906001900390816104fb5790505b50905060005b8560ff16811015610552576105318a85610e17565b84838151811061053d57fe5b6020908102919091010152935060010161051c565b5060005b8460ff1681101561058c5761056b8a85610e17565b83838151811061057757fe5b60209081029190910101529350600101610556565b5061059561390b565b61059f8a85610fd9565b90945090506105ac613820565b604051806101c001604052808381526020016105c78461108a565b81526020018f81526020018e81526020018d8152602001600067ffffffffffffffff16815260200160405180604001604052808a60ff16815260200187815250815260200160405180604001604052808960ff1681526020018681525081526020018c878151811061063557fe5b602001015160f81c60f81b60f81c60ff16600114151581526020018960ff1681526020018c81526020018660010181526020018b815260200160001515815250905060008b868151811061068557fe5b01602001516001969096019560f81c90508015806106a657508060ff166001145b6040518060400160405280600b81526020016a04241445f494d4d5f5459560ac1b815250906107535760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610718578181015183820152602001610700565b50505050905090810190601f1680156107455780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5061075c6138ce565b60ff821661077957825151610772908b906110fe565b9050610819565b6000865111604051806040016040528060068152602001654e4f5f494d4d60d01b815250906107e95760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315610718578181015183820152602001610700565b506108168a8460000151600001518860018d0360ff168151811061080957fe5b6020026020010151611162565b90505b610822816111e8565b83515260005b828a0360ff168110156108675761085f87828151811061084457fe5b6020026020010151856000015161135590919063ffffffff16565b600101610828565b5060005b8860ff168110156108a8576108a086828151811061088557fe5b6020026020010151856000015161136f90919063ffffffff16565b60010161086b565b50919f9e505050505050505050505050505050565b60008060006139766108d685610120015160ff16611389565b935093509350935060008411806108f05750846101000151155b8015610901575060c0850151518410155b8061092857508461010001518015610917575083155b8015610928575060c0850151516001145b6040518060400160405280600a815260200169535441434b5f4d414e5960b01b815250906109975760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315610718578181015183820152602001610700565b5060e0850151516040805180820190915260088152674155585f4d414e5960c01b602082015290841015610a0c5760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315610718578181015183820152602001610700565b50610a178583611499565b15610a2a57610a25856114fc565b610b7c565b60c085015151841115610ad557610a47610a42611507565b6111e8565b610a588660200151602001516111e8565b146040518060400160405280600d81526020016c535441434b5f4d495353494e4760981b81525090610acb5760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315610718578181015183820152602001610700565b50610a25856114fc565b60e085015151831115610b6f57610aed610a42611507565b610afe8660200151604001516111e8565b146040518060400160405280600b81526020016a4155585f4d495353494e4760a81b81525090610acb5760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315610718578181015183820152602001610700565b610b7c858263ffffffff16565b846101a0015115610c1f5760408051600160f81b6020808301919091526000602183018190526022808401919091528351808403909101815260429092019092528051908201209086015160c001511415610be357610bde856020015161154e565b610c1f565b60006101a0860152602085015160c081015190526101008501518015610c07575083155b610c155760c0850151600090525b60e0850151600090525b60005b60c086015151811015610c6957610c618660c00151602001518281518110610c4657fe5b6020026020010151876020015161135590919063ffffffff16565b600101610c22565b5060005b60e086015151811015610cb457610cac8660e00151602001518281518110610c9157fe5b6020026020010151876020015161136f90919063ffffffff16565b600101610c6d565b505050505050565b6000610cc6613802565b8260a001516040518060a00160405280610ce38660000151611559565b8152602001610cf58660200151611559565b81526020018560400151815260200185606001518152602001856080015181525091509150915091565b610d276138a6565b6060610d668384600081518110610d3a57fe5b602001015160f81c60f81b85600181518110610d5257fe5b01602001516001600160f81b031916611633565b90506060610d938485600181518110610d7b57fe5b602001015160f81c60f81b86600281518110610d5257fe5b90506060610dc08586600281518110610da857fe5b602001015160f81c60f81b87600381518110610d5257fe5b90506060610ded8687600381518110610dd557fe5b602001015160f81c60f81b88600481518110610d5257fe5b6040805160808101825295865260208601949094529284019190915250606082015290505b919050565b6000610e216138ce565b83518310610e67576040805162461bcd60e51b815260206004820152600e60248201526d1a5b9d985b1a59081bd9999cd95d60921b604482015290519081900360640190fd5b600080610e7486866116d1565b91509150610e806116f8565b60ff168160ff161415610eb4576000610e9987846116fd565b909350905082610ea88261176b565b94509450505050610fd2565b610ebc61182b565b60ff168160ff161415610ede57610ed38683611830565b935093505050610fd2565b610ee66118d2565b60ff168160ff161415610f0e576000610eff87846116fd565b909350905082610ea8826118d7565b610f166119c4565b60ff168160ff161415610f2d57610ed386836119c9565b610f35611a5e565b60ff168160ff1610158015610f565750610f4d611a63565b60ff168160ff16105b15610f92576000610f65611a5e565b820390506060610f76828986611a68565b909450905083610f8582611b11565b9550955050505050610fd2565b6040805162461bcd60e51b815260206004820152601060248201526f696e76616c69642074797065636f646560801b604482015290519081900360640190fd5b9250929050565b6000610fe361390b565b610feb61390b565b600061010082018190528061100087876116fd565b909650915061100f87876119c9565b6020850152955061102087876119c9565b604085015295506110318787610e17565b606085015295506110428787610e17565b6080850152955061105387876116fd565b60a0850152955061106487876116fd565b90965090506110738787610e17565b60e085015291835260c08301529590945092505050565b61109261390b565b60405180610120016040528083600001518152602001836020015181526020018360400151815260200183606001518152602001836080015181526020018360a0015181526020018360c0015181526020018360e0015181526020018361010001518152509050919050565b6111066138ce565b6040805160608101825260ff85168152602080820185905282516000808252918101845261115993830191611151565b61113e6138ce565b8152602001906001900390816111365790505b509052611c53565b90505b92915050565b61116a6138ce565b604080516001808252818301909252606091816020015b6111896138ce565b81526020019060019003908161118157905050905082816000815181106111ac57fe5b60200260200101819052506111dd60405180606001604052808760ff16815260200186815260200183815250611c53565b9150505b9392505050565b60006111f26116f8565b60ff16826080015160ff16141561121557815161120e90611ce4565b9050610e12565b61121d61182b565b60ff16826080015160ff16141561123b5761120e8260200151611d08565b6112436119c4565b60ff16826080015160ff16141561126557815160a083015161120e9190611dfd565b61126d611a5e565b60ff16826080015160ff1614156112a6576112866138ce565b6112938360400151611e4b565b905061129e816111e8565b915050610e12565b6112ae611fc1565b60ff16826080015160ff1614156112c757508051610e12565b6112cf6118d2565b60ff16826080015160ff161415611314575060608082015160408051607b60208083019190915281830193909352815180820383018152930190528151910120610e12565b6040805162461bcd60e51b8152602060048201526011602482015270496e76616c6964207479706520636f646560781b604482015290519081900360640190fd5b611363826020015182611fc6565b82602001819052505050565b61137d826040015182611fc6565b82604001819052505050565b6000808061397660a18514156113ae57506002925060009150600a90506120446103f9565b60a28514156113cc57506002925060009150600a905061212a6103f9565b60a38514156113ea57506002925060009150600a90506121f06103f9565b60a485141561140857506003925060009150606490506122b66103f9565b60a585141561142657506003925060009150606490506123c56103f9565b60a685141561144457506003925060009150606490506124b86103f9565b607085141561146257506002925060009150606490506125ab6103f9565b60405162461bcd60e51b815260040180806020018281038252602c8152602001806139d2602c913960400191505060405180910390fd5b60a0808301805167ffffffffffffffff9084018116909152602084015190910151600091831611156114db5750602082015160001960a090910152600161115c565b50602082015160a001805167ffffffffffffffff831690039052600061115c565b60016101a090910152565b61150f6138ce565b6040805160008082526020820190925261154991611543565b6115306138ce565b8152602001906001900390816115285790505b50611b11565b905090565b600161010090910152565b60006002826101000151141561157157506000610e12565b6001826101000151141561158757506001610e12565b81516020830151611597906111e8565b6115a484604001516111e8565b6115b185606001516111e8565b6115be86608001516111e8565b8660a001518760c001516115d58960e001516111e8565b6040516020018089815260200188815260200187815260200186815260200185815260200184815260200183815260200182815260200198505050505050505050604051602081830303815290604052805190602001209050610e12565b606060f883811c9083901c81900360ff1690828267ffffffffffffffff8111801561165d57600080fd5b50604051908082528060200260200182016040528015611687578160200160208202803683370190505b50905060005b838110156116c6576116a488828501602002612736565b60001b8282815181106116b357fe5b602090810291909101015260010161168d565b509695505050505050565b600080826001018484815181106116e457fe5b016020015190925060f81c90509250929050565b600090565b60008082845110158015611715575060208385510310155b611752576040805162461bcd60e51b81526020600482015260096024820152681d1bdbc81cda1bdc9d60ba1b604482015290519081900360640190fd5b602083016117608585612776565b915091509250929050565b6117736138ce565b6040805160c08101825283815281516060810183526000808252602080830182905284518281528082018652939490850193908301916117c9565b6117b66138ce565b8152602001906001900390816117ae5790505b5090528152602001600060405190808252806020026020018201604052801561180c57816020015b6117f96138ce565b8152602001906001900390816117f15790505b5081526000602082018190526040820152600160609091015292915050565b600190565b600061183a6138ce565b826000806118466138ce565b600061185289866116d1565b909550935061186189866116d1565b9095509250600160ff851614156118825761187c8986610e17565b90955091505b61188c89866127cf565b9095509050600160ff851614156118b757846118a9848385611162565b965096505050505050610fd2565b846118c284836110fe565b9650965050505050509250929050565b600c90565b6118df6138ce565b6040518060c00160405280600081526020016040518060600160405280600060ff1681526020016000801b8152602001600067ffffffffffffffff8111801561192757600080fd5b5060405190808252806020026020018201604052801561196157816020015b61194e6138ce565b8152602001906001900390816119465790505b509052815260200160006040519080825280602002602001820160405280156119a457816020015b6119916138ce565b8152602001906001900390816119895790505b50815260208101849052600c604082015260016060909101529050919050565b600290565b60006119d36138ce565b828451101580156119e8575060408385510310155b611a25576040805162461bcd60e51b81526020600482015260096024820152681d1bdbc81cda1bdc9d60ba1b604482015290519081900360640190fd5b600080611a3286866127cf565b9094509150611a4186856116fd565b909450905083611a5183836127e0565b9350935050509250929050565b600390565b600d90565b60006060828160ff871667ffffffffffffffff81118015611a8857600080fd5b50604051908082528060200260200182016040528015611ac257816020015b611aaf6138ce565b815260200190600190039081611aa75790505b50905060005b8760ff168160ff161015611b0457611ae08784610e17565b838360ff1681518110611aef57fe5b60209081029190910101529250600101611ac8565b5090969095509350505050565b611b196138ce565b611b23825161289f565b611b74576040805162461bcd60e51b815260206004820152601a60248201527f5475706c65206d75737420686176652076616c69642073697a65000000000000604482015290519081900360640190fd5b600160005b8351811015611bab57838181518110611b8e57fe5b602002602001015160a00151820191508080600101915050611b79565b506040518060c00160405280600081526020016040518060600160405280600060ff1681526020016000801b8152602001600067ffffffffffffffff81118015611bf457600080fd5b50604051908082528060200260200182016040528015611c2e57816020015b611c1b6138ce565b815260200190600190039081611c135790505b5090528152602081019490945260006040850152600360608501526080909301525090565b611c5b6138ce565b6040518060c0016040528060008152602001838152602001600067ffffffffffffffff81118015611c8b57600080fd5b50604051908082528060200260200182016040528015611cc557816020015b611cb26138ce565b815260200190600190039081611caa5790505b5081526000602082015260016040820181905260609091015292915050565b60408051602080820193909352815180820384018152908201909152805191012090565b6000600282604001515110611d1957fe5b604082015151611d7c57611d2b61182b565b82600001518360200151604051602001808460ff1660f81b81526001018360ff1660f81b81526001018281526020019350505050604051602081830303815290604052805190602001209050610e12565b611d8461182b565b8260000151611daa8460400151600081518110611d9d57fe5b60200260200101516111e8565b8460200151604051602001808560ff1660f81b81526001018460ff1660f81b8152600101838152602001828152602001945050505050604051602081830303815290604052805190602001209050919050565b6000611e07611a5e565b8383604051602001808460ff1660f81b8152600101838152602001828152602001935050505060405160208183030381529060405280519060200120905092915050565b611e536138ce565b600882511115611ea1576040805162461bcd60e51b8152602060048201526014602482015273092dcecc2d8d2c840e8eae0d8ca40d8cadccee8d60631b604482015290519081900360640190fd5b6060825167ffffffffffffffff81118015611ebb57600080fd5b50604051908082528060200260200182016040528015611ee5578160200160208202803683370190505b508051909150600160005b82811015611f4857611f07868281518110611d9d57fe5b848281518110611f1357fe5b602002602001018181525050858181518110611f2b57fe5b602002602001015160a00151820191508080600101915050611ef0565b506000835184604051602001808360ff1660f81b8152600101828051906020019060200280838360005b83811015611f8a578181015183820152602001611f72565b5050505090500192505050604051602081830303815290604052805190602001209050611fb781836127e0565b9695505050505050565b606490565b611fce6138ce565b6040805160028082526060828101909352816020015b611fec6138ce565b815260200190600190039081611fe4579050509050828160008151811061200f57fe5b6020026020010181905250838160018151811061202857fe5b602002602001018190525061203c81611e4b565b949350505050565b61204c6138ce565b6120598260c001516128a6565b90506120636138ce565b6120708360c001516128a6565b905061207b826128e8565b158061208d575061208b81612906565b155b156120a25761209b83612913565b5050612127565b8151600160401b116120e9576040805162461bcd60e51b815260206004820152601b60248201526000805160206139b2833981519152604482015290519081900360640190fd5b600061210b82606001518460000151612106876101800151610d1f565b61291c565b90506121238460c0015161211e8361176b565b61293e565b5050505b50565b6121326138ce565b61213f8260c001516128a6565b90506121496138ce565b6121568360c001516128a6565b9050612161826128e8565b1580612173575061217181612906565b155b156121815761209b83612913565b600160401b8260000151600701106121ce576040805162461bcd60e51b815260206004820152601b60248201526000805160206139b2833981519152604482015290519081900360640190fd5b600061210b826060015184600001516121eb876101800151610d1f565b612968565b6121f86138ce565b6122058260c001516128a6565b905061220f6138ce565b61221c8360c001516128a6565b9050612227826128e8565b1580612239575061223781612906565b155b156122475761209b83612913565b600160401b8260000151601f0110612294576040805162461bcd60e51b815260206004820152601b60248201526000805160206139b2833981519152604482015290519081900360640190fd5b600061210b826060015184600001516122b1876101800151610d1f565b612ac7565b6122be6138ce565b6122cb8260c001516128a6565b90506122d56138ce565b6122e28360c001516128a6565b90506122ec6138ce565b6122f98460c001516128a6565b9050612304836128e8565b1580612316575061231482612bfa565b155b80612327575061232581612906565b155b1561233d5761233584612913565b505050612127565b8251600160401b11612384576040805162461bcd60e51b815260206004820152601b60248201526000805160206139b2833981519152604482015290519081900360640190fd5b60006123ab8260600151856000015185600001516123a6896101800151610d1f565b612c05565b90506123be8560c0015161211e836118d7565b5050505050565b6123cd6138ce565b6123da8260c001516128a6565b90506123e46138ce565b6123f18360c001516128a6565b90506123fb6138ce565b6124088460c001516128a6565b9050612413836128e8565b1580612425575061242382612bfa565b155b80612436575061243481612906565b155b156124445761233584612913565b600160401b836000015160070110612491576040805162461bcd60e51b815260206004820152601b60248201526000805160206139b2833981519152604482015290519081900360640190fd5b60006123ab8260600151856000015185600001516124b3896101800151610d1f565b612c4e565b6124c06138ce565b6124cd8260c001516128a6565b90506124d76138ce565b6124e48360c001516128a6565b90506124ee6138ce565b6124fb8460c001516128a6565b9050612506836128e8565b1580612518575061251682612bfa565b155b80612529575061252781612906565b155b156125375761233584612913565b600160401b8360000151601f0110612584576040805162461bcd60e51b815260206004820152601b60248201526000805160206139b2833981519152604482015290519081900360640190fd5b60006123ab8260600151856000015185600001516125a6896101800151610d1f565b612d96565b6125b36138ce565b6125c08260c001516128a6565b90506125ca6138ce565b6125d78360c001516128a6565b90506125e2826128e8565b15806125f457506125f281612906565b155b156126025761209b83612913565b815161271010156126165761209b83612913565b8261014001515183610160015110156126c95761016083015182516101408501516000612644828585612e67565b905080612650866111e8565b1461268f576040805162461bcd60e51b815260206004820152600a60248201526915d493d391d7d4d1539160b21b604482015290519081900360640190fd5b5060209201820120606085810180516040805180870192909252818101949094528351808203850181529201909252805192019190912090525b6126e9816060015183600001516126e4866101800151610d1f565b612e85565b15612728576040805162461bcd60e51b815260206004820152600a602482015269084aa8cbe988a9c8ea8960b31b604482015290519081900360640190fd5b61273183612913565b505050565b600080805b602081101561276e57600882901b9150848185018151811061275957fe5b016020015160f81c919091179060010161273b565b509392505050565b600081602001835110156127c6576040805162461bcd60e51b815260206004820152601260248201527152656164206f7574206f6620626f756e647360701b604482015290519081900360640190fd5b50016020015190565b600080602083016117608585612776565b6127e86138ce565b6040805160c081018252848152815160608101835260008082526020808301829052845182815280820186529394908501939083019161283e565b61282b6138ce565b8152602001906001900390816128235790505b5090528152602001600060405190808252806020026020018201604052801561288157816020015b61286e6138ce565b8152602001906001900390816128665790505b50815260006020820152600260408201526060019290925250919050565b6008101590565b6128ae6138ce565b6128b66138ce565b82602001516001846000015103815181106128cd57fe5b60209081029190910101518351600019018452915050919050565b608081015160009060ff1615801561115c57505051600160401b1190565b6080015160ff16600c1490565b612127816114fc565b600061203c612934856020865b048560000151612ed9565b6020855b06613047565b80826020015183600001518151811061295357fe5b60209081029190910101525080516001019052565b6040805160088082528183019092526000916060919060208201818036833701905050905060006129a2866020875b048660000151612ed9565b9050602080860660080110612a755760006129c9876020885b046001018760400151612ed9565b905060005b6018601f881660080301811015612a1d576129ef838260208a5b0601613047565b60f81b8482815181106129fe57fe5b60200101906001600160f81b031916908160001a9053506001016129ce565b506018601f8716600803015b6008811015612a6e57612a40826020898401612938565b60f81b848281518110612a4f57fe5b60200101906001600160f81b031916908160001a905350600101612a29565b5050612abe565b60005b6008811015612abc57612a8e82826020896129e8565b60f81b838281518110612a9d57fe5b60200101906001600160f81b031916908160001a905350600101612a78565b505b611fb782613054565b604080516020808252818301909252600091606091906020820181803683370190505090506000612afa86602087612997565b9050602080860660200110612bb3576000612b17876020886129bb565b905060005b601f8716602003811015612b6557612b37838260208a6129e8565b60f81b848281518110612b4657fe5b60200101906001600160f81b031916908160001a905350600101612b1c565b50601f86166008035b6020811015612a6e57612b85826020898401612938565b60f81b848281518110612b9457fe5b60200101906001600160f81b031916908160001a905350600101612b6e565b60005b6020811015612abc57612bcc82826020896129e8565b60f81b838281518110612bdb57fe5b60200101906001600160f81b031916908160001a905350600101612bb6565b6080015160ff161590565b600080612c1486602087612929565b90506000612c26826020880687613091565b90506000612c42886020890484886000015189602001516130d0565b98975050505050505050565b60006060612c5b84613176565b90506000612c6b87602088612997565b9050602080870660080110612d4c5760005b6018601f881660080301811015612cc557612cbb82602089840106858460180181518110612ca757fe5b01602001516001600160f81b0319166131e0565b9150600101612c7d565b50612cdf876020885b0483876000015188602001516130d0565b96506000612cef886020896129bb565b90506018601f8816600803015b6008811015612d2857612d1e8260208a840106868460180181518110612ca757fe5b9150600101612cfc565b50612d44886020890460010183886040015189606001516130d0565b975050612d8b565b60005b6008811015612d7b57612d71828260208a0601858460180181518110612ca757fe5b9150600101612d4f565b50612d8887602088612cce565b96505b509495945050505050565b60006060612da384613176565b90506000612db387602088612997565b9050602080870660200110612e445760005b601f8716602003811015612df457612dea828260208a5b0601858481518110612ca757fe5b9150600101612dc5565b50612e0187602088612cce565b96506000612e11886020896129bb565b9050601f87166020035b6020811015612d2857612e3a8260208a840106868481518110612ca757fe5b9150600101612e1b565b60005b6020811015612d7b57612e5d828260208a612ddc565b9150600101612e47565b825160009061203c90612e80607b8188888860016131fc565b6132a3565b600080612e9485602086612929565b9050601f84165b6020811015612ec657612eae8282613047565b15612ebe576000925050506111e1565b600101612e9b565b506111dd856020860485600001516132cf565b6000815160001415612f4257612eef6000611ce4565b8414612f3a576040805162461bcd60e51b815260206004820152601560248201527432bc3832b1ba32b21032b6b83a3c90313ab33332b960591b604482015290519081900360640190fd5b5060006111e1565b6000612f6183600081518110612f5457fe5b6020026020010151611ce4565b905060015b8351811015612fcb578460011660011415612f9f57612f98848281518110612f8a57fe5b6020026020010151836132a3565b9150612fbf565b612fbc82858381518110612faf57fe5b60200260200101516132a3565b91505b600194851c9401612f66565b50848114613018576040805162461bcd60e51b8152602060048201526015602482015274195e1c1958dd19590818dbdc9c9958dd081c9bdbdd605a1b604482015290519081900360640190fd5b83156130285750600090506111e1565b8260008151811061303557fe5b60200260200101519150509392505050565b601f036008021c60ff1690565b600080805b835181101561308a57600882901b915083818151811061307557fe5b016020015160f81c9190911790600101613059565b5092915050565b6000606061309e85613176565b90508260f81b8185815181106130b057fe5b60200101906001600160f81b031916908160001a9053506111dd81613054565b60008151600314613128576040805162461bcd60e51b815260206004820152601760248201527f4241445f4e4f524d414c495a4154494f4e5f50524f4f46000000000000000000604482015290519081900360640190fd5b611fb7868686868660008151811061313c57fe5b602002602001015160001c8760018151811061315457fe5b60200260200101518860028151811061316957fe5b6020026020010151613455565b6040805160208082528183019092526060918391839160208201818036833701905050905060005b602081101561276e578260f81b8282601f03815181106131ba57fe5b60200101906001600160f81b031916908160001a90535060089290921c9160010161319e565b600060606131ed85613176565b9050828185815181106130b057fe5b600060208311613231578451841061321f576132186000611ce4565b905061203c565b61321861322c86866136e4565b611ce4565b6000613249866002860487016002875b0460006131fc565b90506132556000611ce4565b811480156132605750825b1561327d5761327586866002870460016131fc565b91505061203c565b600061328c8787600288613241565b905061329881836132a3565b979650505050505050565b604080516020808201949094528082019290925280518083038201815260609092019052805191012090565b6000815160001415613338576132e56000611ce4565b8414613330576040805162461bcd60e51b815260206004820152601560248201527432bc3832b1ba32b21032b6b83a3c90313ab33332b960591b604482015290519081900360640190fd5b5060016111e1565b600061334a83600081518110612f5457fe5b90506001606061335861373b565b905060015b85518110156133ec5786600116600114156133965761338f86828151811061338157fe5b6020026020010151856132a3565b93506133e0565b6133a684878381518110612faf57fe5b93508280156133dd57508160018203815181106133bf57fe5b60200260200101518682815181106133d357fe5b6020026020010151145b92505b600196871c960161335d565b50868314613439576040805162461bcd60e51b8152602060048201526015602482015274195e1c1958dd19590818dbdc9c9958dd081c9bdbdd605a1b604482015290519081900360640190fd5b851561344b57600193505050506111e1565b5095945050505050565b60008061346187611ce4565b905061346e898988612ed9565b50606061347961373b565b905060018751036001901b891061353d5787613499578992505050613298565b60006134a48a6137dc565b88519091505b600182038110156134d2576134c88c846001840381518110612faf57fe5b9b506001016134aa565b5060015b60018203811015613528578a60011660011415613506576134ff83600183038151811061338157fe5b935061351c565b61351984846001840381518110612faf57fe5b93505b60019a8b1c9a016134d6565b506135338b846132a3565b9350505050613298565b60015b87518110156135bd5760008a60011660011461355c5783613571565b88828151811061356857fe5b60200260200101515b905060008b6001166001146135995789838151811061358c57fe5b602002602001015161359b565b845b90506135a782826132a3565b60019c8d1c9c9095509290920191506135409050565b5087156135cc57509050613298565b8086815181106135d857fe5b6020026020010151841415806135ec575085155b61363d576040805162461bcd60e51b815260206004820152601c60248201527f726967687420737562747265652063616e6e6f74206265207a65726f00000000604482015290519081900360640190fd5b600086156136545761364f86866132a3565b613656565b855b9050861561366657600019909601955b80875b60018a510381101561368f5761368582858381518110612faf57fe5b9150600101613669565b508381146136d5576040805162461bcd60e51b815260206004820152600e60248201526d0caf0e0cac6e8cac840dac2e8c6d60931b604482015290519081900360640190fd5b509a9950505050505050505050565b600080805b602081101561276e57600882901b9150600081850186511161370c57600061372a565b858286018151811061371a57fe5b01602001516001600160f81b0319165b60f81c9290921791506001016136e9565b6040805181815261082081018252606091829190602082016108008036833701905050905061376a6000611ce4565b8160008151811061377757fe5b602090810291909101015260015b60408110156137d6576137b78260018303815181106137a057fe5b6020026020010151836001840381518110612faf57fe5b8282815181106137c357fe5b6020908102919091010152600101613785565b50905090565b6000816137eb57506001610e12565b6137f8600183901c6137dc565b6001019050610e12565b6040518060a001604052806005906020820280368337509192915050565b604051806101c0016040528061383461390b565b815260200161384161390b565b81526000602082018190526040820181905260608201819052608082015260a00161386a613978565b8152602001613877613978565b81526000602082018190526040820181905260608083018190526080830182905260a083015260c09091015290565b6040518060800160405280606081526020016060815260200160608152602001606081525090565b6040518060c00160405280600081526020016138e8613992565b815260606020820181905260006040830181905290820181905260809091015290565b60408051610120810190915260008152602081016139276138ce565b81526020016139346138ce565b81526020016139416138ce565b815260200161394e6138ce565b815260006020820181905260408201526060016139696138ce565b8152602001600081525090565bfe5b604051806040016040528060008152602001606081525090565b604080516060808201835260008083526020830152918101919091529056fe62756666657220696e646578206d7573742062652036342d626974000000000075736520616e6f7468657220636f6e747261637420746f2068616e646c65206f74686572206f70636f646573a26469706673582212204a1729e9b911c193bf090fe95f5df88a2361b1472bec30f17083cba65dfe330664736f6c634300060c0033"

// DeployOneStepProof2 deploys a new Ethereum contract, binding an instance of OneStepProof2 to it.
func DeployOneStepProof2(auth *bind.TransactOpts, backend bind.ContractBackend) (common.Address, *types.Transaction, *OneStepProof2, error) {
	parsed, err := abi.JSON(strings.NewReader(OneStepProof2ABI))
	if err != nil {
		return common.Address{}, nil, nil, err
	}

	address, tx, contract, err := bind.DeployContract(auth, parsed, common.FromHex(OneStepProof2Bin), backend)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &OneStepProof2{OneStepProof2Caller: OneStepProof2Caller{contract: contract}, OneStepProof2Transactor: OneStepProof2Transactor{contract: contract}, OneStepProof2Filterer: OneStepProof2Filterer{contract: contract}}, nil
}

// OneStepProof2 is an auto generated Go binding around an Ethereum contract.
type OneStepProof2 struct {
	OneStepProof2Caller     // Read-only binding to the contract
	OneStepProof2Transactor // Write-only binding to the contract
	OneStepProof2Filterer   // Log filterer for contract events
}

// OneStepProof2Caller is an auto generated read-only Go binding around an Ethereum contract.
type OneStepProof2Caller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// OneStepProof2Transactor is an auto generated write-only Go binding around an Ethereum contract.
type OneStepProof2Transactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// OneStepProof2Filterer is an auto generated log filtering Go binding around an Ethereum contract events.
type OneStepProof2Filterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// OneStepProof2Session is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type OneStepProof2Session struct {
	Contract     *OneStepProof2    // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// OneStepProof2CallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type OneStepProof2CallerSession struct {
	Contract *OneStepProof2Caller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts        // Call options to use throughout this session
}

// OneStepProof2TransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type OneStepProof2TransactorSession struct {
	Contract     *OneStepProof2Transactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts        // Transaction auth options to use throughout this session
}

// OneStepProof2Raw is an auto generated low-level Go binding around an Ethereum contract.
type OneStepProof2Raw struct {
	Contract *OneStepProof2 // Generic contract binding to access the raw methods on
}

// OneStepProof2CallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type OneStepProof2CallerRaw struct {
	Contract *OneStepProof2Caller // Generic read-only contract binding to access the raw methods on
}

// OneStepProof2TransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type OneStepProof2TransactorRaw struct {
	Contract *OneStepProof2Transactor // Generic write-only contract binding to access the raw methods on
}

// NewOneStepProof2 creates a new instance of OneStepProof2, bound to a specific deployed contract.
func NewOneStepProof2(address common.Address, backend bind.ContractBackend) (*OneStepProof2, error) {
	contract, err := bindOneStepProof2(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &OneStepProof2{OneStepProof2Caller: OneStepProof2Caller{contract: contract}, OneStepProof2Transactor: OneStepProof2Transactor{contract: contract}, OneStepProof2Filterer: OneStepProof2Filterer{contract: contract}}, nil
}

// NewOneStepProof2Caller creates a new read-only instance of OneStepProof2, bound to a specific deployed contract.
func NewOneStepProof2Caller(address common.Address, caller bind.ContractCaller) (*OneStepProof2Caller, error) {
	contract, err := bindOneStepProof2(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &OneStepProof2Caller{contract: contract}, nil
}

// NewOneStepProof2Transactor creates a new write-only instance of OneStepProof2, bound to a specific deployed contract.
func NewOneStepProof2Transactor(address common.Address, transactor bind.ContractTransactor) (*OneStepProof2Transactor, error) {
	contract, err := bindOneStepProof2(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &OneStepProof2Transactor{contract: contract}, nil
}

// NewOneStepProof2Filterer creates a new log filterer instance of OneStepProof2, bound to a specific deployed contract.
func NewOneStepProof2Filterer(address common.Address, filterer bind.ContractFilterer) (*OneStepProof2Filterer, error) {
	contract, err := bindOneStepProof2(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &OneStepProof2Filterer{contract: contract}, nil
}

// bindOneStepProof2 binds a generic wrapper to an already deployed contract.
func bindOneStepProof2(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(OneStepProof2ABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_OneStepProof2 *OneStepProof2Raw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _OneStepProof2.Contract.OneStepProof2Caller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_OneStepProof2 *OneStepProof2Raw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _OneStepProof2.Contract.OneStepProof2Transactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_OneStepProof2 *OneStepProof2Raw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _OneStepProof2.Contract.OneStepProof2Transactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_OneStepProof2 *OneStepProof2CallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _OneStepProof2.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_OneStepProof2 *OneStepProof2TransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _OneStepProof2.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_OneStepProof2 *OneStepProof2TransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _OneStepProof2.Contract.contract.Transact(opts, method, params...)
}

// ExecuteStep is a free data retrieval call binding the contract method 0x3a06aeec.
//
// Solidity: function executeStep(bytes32[3] _machineFields, bytes proof, bytes bproof) view returns(uint64 gas, bytes32[5] fields)
func (_OneStepProof2 *OneStepProof2Caller) ExecuteStep(opts *bind.CallOpts, _machineFields [3][32]byte, proof []byte, bproof []byte) (struct {
	Gas    uint64
	Fields [5][32]byte
}, error) {
	var out []interface{}
	err := _OneStepProof2.contract.Call(opts, &out, "executeStep", _machineFields, proof, bproof)

	outstruct := new(struct {
		Gas    uint64
		Fields [5][32]byte
	})

	outstruct.Gas = out[0].(uint64)
	outstruct.Fields = out[1].([5][32]byte)

	return *outstruct, err

}

// ExecuteStep is a free data retrieval call binding the contract method 0x3a06aeec.
//
// Solidity: function executeStep(bytes32[3] _machineFields, bytes proof, bytes bproof) view returns(uint64 gas, bytes32[5] fields)
func (_OneStepProof2 *OneStepProof2Session) ExecuteStep(_machineFields [3][32]byte, proof []byte, bproof []byte) (struct {
	Gas    uint64
	Fields [5][32]byte
}, error) {
	return _OneStepProof2.Contract.ExecuteStep(&_OneStepProof2.CallOpts, _machineFields, proof, bproof)
}

// ExecuteStep is a free data retrieval call binding the contract method 0x3a06aeec.
//
// Solidity: function executeStep(bytes32[3] _machineFields, bytes proof, bytes bproof) view returns(uint64 gas, bytes32[5] fields)
func (_OneStepProof2 *OneStepProof2CallerSession) ExecuteStep(_machineFields [3][32]byte, proof []byte, bproof []byte) (struct {
	Gas    uint64
	Fields [5][32]byte
}, error) {
	return _OneStepProof2.Contract.ExecuteStep(&_OneStepProof2.CallOpts, _machineFields, proof, bproof)
}

// ParseProof is a free data retrieval call binding the contract method 0x793deea3.
//
// Solidity: function parseProof(bytes proof) pure returns(bytes32[], bytes32[], bytes32[], bytes32[])
func (_OneStepProof2 *OneStepProof2Caller) ParseProof(opts *bind.CallOpts, proof []byte) ([][32]byte, [][32]byte, [][32]byte, [][32]byte, error) {
	var out []interface{}
	err := _OneStepProof2.contract.Call(opts, &out, "parseProof", proof)

	if err != nil {
		return *new([][32]byte), *new([][32]byte), *new([][32]byte), *new([][32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([][32]byte)).(*[][32]byte)
	out1 := *abi.ConvertType(out[1], new([][32]byte)).(*[][32]byte)
	out2 := *abi.ConvertType(out[2], new([][32]byte)).(*[][32]byte)
	out3 := *abi.ConvertType(out[3], new([][32]byte)).(*[][32]byte)

	return out0, out1, out2, out3, err

}

// ParseProof is a free data retrieval call binding the contract method 0x793deea3.
//
// Solidity: function parseProof(bytes proof) pure returns(bytes32[], bytes32[], bytes32[], bytes32[])
func (_OneStepProof2 *OneStepProof2Session) ParseProof(proof []byte) ([][32]byte, [][32]byte, [][32]byte, [][32]byte, error) {
	return _OneStepProof2.Contract.ParseProof(&_OneStepProof2.CallOpts, proof)
}

// ParseProof is a free data retrieval call binding the contract method 0x793deea3.
//
// Solidity: function parseProof(bytes proof) pure returns(bytes32[], bytes32[], bytes32[], bytes32[])
func (_OneStepProof2 *OneStepProof2CallerSession) ParseProof(proof []byte) ([][32]byte, [][32]byte, [][32]byte, [][32]byte, error) {
	return _OneStepProof2.Contract.ParseProof(&_OneStepProof2.CallOpts, proof)
}
