// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package ethbridgetestcontracts

import (
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
)

// OneStepProof2ABI is the input ABI used to generate the binding from.
const OneStepProof2ABI = "[{\"inputs\":[{\"internalType\":\"bytes32[3]\",\"name\":\"_machineFields\",\"type\":\"bytes32[3]\"},{\"internalType\":\"bytes\",\"name\":\"proof\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"bproof\",\"type\":\"bytes\"}],\"name\":\"executeStep\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"gas\",\"type\":\"uint64\"},{\"internalType\":\"bytes32[5]\",\"name\":\"fields\",\"type\":\"bytes32[5]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"proof\",\"type\":\"bytes\"}],\"name\":\"parseProof\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}]"

// OneStepProof2FuncSigs maps the 4-byte function signature to its string representation.
var OneStepProof2FuncSigs = map[string]string{
	"3a06aeec": "executeStep(bytes32[3],bytes,bytes)",
	"793deea3": "parseProof(bytes)",
}

// OneStepProof2Bin is the compiled bytecode used for deploying new contracts.
var OneStepProof2Bin = "0x608060405234801561001057600080fd5b5061358f806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80633a06aeec1461003b578063793deea314610149575b600080fd5b610100600480360360a081101561005157600080fd5b81018160808101606082013564010000000081111561006f57600080fd5b82018360208201111561008157600080fd5b803590602001918460018302840111640100000000831117156100a357600080fd5b9193909290916020810190356401000000008111156100c157600080fd5b8201836020820111156100d357600080fd5b803590602001918460018302840111640100000000831117156100f557600080fd5b509092509050610312565b60405167ffffffffffffffff83168152602081018260a080838360005b8381101561013557818101518382015260200161011d565b505050509050019250505060405180910390f35b6101ef6004803603602081101561015f57600080fd5b81019060208101813564010000000081111561017a57600080fd5b82018360208201111561018c57600080fd5b803590602001918460018302840111640100000000831117156101ae57600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506103c4945050505050565b6040518080602001806020018060200180602001858103855289818151815260200191508051906020019060200280838360005b8381101561023b578181015183820152602001610223565b50505050905001858103845288818151815260200191508051906020019060200280838360005b8381101561027a578181015183820152602001610262565b50505050905001858103835287818151815260200191508051906020019060200280838360005b838110156102b95781810151838201526020016102a1565b50505050905001858103825286818151815260200191508051906020019060200280838360005b838110156102f85781810151838201526020016102e0565b505050509050019850505050505050505060405180910390f35b600061031c61335f565b61032461337d565b604080516020601f890181900481028201810183528882526103a1928b3592828d013592918d0135918c908c908190840183828082843760009201919091525050604080516020601f8e018190048102820181019092528c815292508c91508b908190840183828082843760009201919091525061040092505050565b90506103ac816108d0565b6103b581610c2f565b92509250509550959350505050565b6060806060806103d2613402565b6103db86610c92565b80516020820151604083015160609093015191975095509093509150505b9193509193565b61040861337d565b60008360008151811061041757fe5b602001015160f81c60f81b60f81c905060008460018151811061043657fe5b016020015160f81c9050600260606004840160ff1667ffffffffffffffff8111801561046157600080fd5b5060405190808252806020026020018201604052801561049b57816020015b61048861342a565b8152602001906001900390816104805790505b50905060608360040160ff1667ffffffffffffffff811180156104bd57600080fd5b506040519080825280602002602001820160405280156104f757816020015b6104e461342a565b8152602001906001900390816104dc5790505b50905060005b8560ff16811015610533576105128985610d8a565b84838151811061051e57fe5b602090810291909101015293506001016104fd565b5060005b8460ff1681101561056d5761054c8985610d8a565b83838151811061055857fe5b60209081029190910101529350600101610537565b50610576613467565b6105808985610f4c565b909450905061058d61337d565b604051806101a001604052808381526020016105a884610ffd565b81526020018e81526020018d81526020018c8152602001600067ffffffffffffffff16815260200160405180604001604052808a60ff16815260200187815250815260200160405180604001604052808960ff1681526020018681525081526020018b878151811061061657fe5b602001015160f81c60f81b60f81c60ff16600114151581526020018b876001018151811061064057fe5b0160209081015160f81c825281018c90526002870160408201526060018a90528a519091506000908b908790811061067457fe5b602001015160f81c60f81b60f81c905060008b876001018151811061069557fe5b01602001516002979097019660f81c905060ff821615806106b957508160ff166001145b6040518060400160405280600b81526020016a04241445f494d4d5f5459560ac1b815250906107665760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561072b578181015183820152602001610713565b50505050905090810190601f1680156107585780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5061076f61342a565b60ff831661078c57835151610785908390611071565b905061082c565b6000875111604051806040016040528060068152602001654e4f5f494d4d60d01b815250906107fc5760405162461bcd60e51b815260206004820181815283516024840152835190928392604490910191908501908083836000831561072b578181015183820152602001610713565b50610829828560000151600001518960018e0360ff168151811061081c57fe5b60200260200101516110d5565b90505b6108358161115b565b84515260005b838b0360ff1681101561087a5761087288828151811061085757fe5b602002602001015186600001516112c890919063ffffffff16565b60010161083b565b5060005b8960ff168110156108bb576108b387828151811061089857fe5b602002602001015186600001516112e290919063ffffffff16565b60010161087e565b50929f9e505050505050505050505050505050565b60008060006134d26108e985610120015160ff166112fc565b93509350935093506108fb85836113ee565b156109095750505050610c2c565b60c0850151518411156109bd5761092661092161145a565b61115b565b61093786602001516020015161115b565b146040518060400160405280600d81526020016c535441434b5f4d495353494e4760981b815250906109aa5760405162461bcd60e51b815260206004820181815283516024840152835190928392604490910191908501908083836000831561072b578181015183820152602001610713565b506109b4856114a1565b50505050610c2c565b60e085015151831115610a57576109d561092161145a565b6109e686602001516040015161115b565b146040518060400160405280600b81526020016a4155585f4d495353494e4760a81b815250906109aa5760405162461bcd60e51b815260206004820181815283516024840152835190928392604490910191908501908083836000831561072b578181015183820152602001610713565b6000841180610a695750846101000151155b8015610a79575060c08501515184145b80610aa057508461010001518015610a8f575083155b8015610aa0575060c0850151516001145b6040518060400160405280600a815260200169535441434b5f4d414e5960b01b81525090610b0f5760405162461bcd60e51b815260206004820181815283516024840152835190928392604490910191908501908083836000831561072b578181015183820152602001610713565b5060e0850151516040805180820190915260088152674155585f4d414e5960c01b6020820152908414610b835760405162461bcd60e51b815260206004820181815283516024840152835190928392604490910191908501908083836000831561072b578181015183820152602001610713565b50610b91858263ffffffff16565b60005b60c086015151811015610bdb57610bd38660c00151602001518281518110610bb857fe5b602002602001015187602001516112c890919063ffffffff16565b600101610b94565b5060005b60e086015151811015610c2657610c1e8660e00151602001518281518110610c0357fe5b602002602001015187602001516112e290919063ffffffff16565b600101610bdf565b50505050505b50565b6000610c3961335f565b8260a001516040518060a00160405280610c56866000015161150a565b8152602001610c68866020015161150a565b81526020018560400151815260200185606001518152602001856080015181525091509150915091565b610c9a613402565b6060610cd98384600081518110610cad57fe5b602001015160f81c60f81b85600181518110610cc557fe5b01602001516001600160f81b0319166115e4565b90506060610d068485600181518110610cee57fe5b602001015160f81c60f81b86600281518110610cc557fe5b90506060610d338586600281518110610d1b57fe5b602001015160f81c60f81b87600381518110610cc557fe5b90506060610d608687600381518110610d4857fe5b602001015160f81c60f81b88600481518110610cc557fe5b6040805160808101825295865260208601949094529284019190915250606082015290505b919050565b6000610d9461342a565b83518310610dda576040805162461bcd60e51b815260206004820152600e60248201526d1a5b9d985b1a59081bd9999cd95d60921b604482015290519081900360640190fd5b600080610de78686611682565b91509150610df36116a9565b60ff168160ff161415610e27576000610e0c87846116ae565b909350905082610e1b8261171c565b94509450505050610f45565b610e2f6117dc565b60ff168160ff161415610e5157610e4686836117e1565b935093505050610f45565b610e59611883565b60ff168160ff161415610e81576000610e7287846116ae565b909350905082610e1b82611888565b610e89611975565b60ff168160ff161415610ea057610e46868361197a565b610ea8611a0e565b60ff168160ff1610158015610ec95750610ec0611a13565b60ff168160ff16105b15610f05576000610ed8611a0e565b820390506060610ee9828986611a18565b909450905083610ef882611ac1565b9550955050505050610f45565b6040805162461bcd60e51b815260206004820152601060248201526f696e76616c69642074797065636f646560801b604482015290519081900360640190fd5b9250929050565b6000610f56613467565b610f5e613467565b6000610100820181905280610f7387876116ae565b9096509150610f82878761197a565b60208501529550610f93878761197a565b60408501529550610fa48787610d8a565b60608501529550610fb58787610d8a565b60808501529550610fc687876116ae565b60a08501529550610fd787876116ae565b9096509050610fe68787610d8a565b60e085015291835260c08301529590945092505050565b611005613467565b60405180610120016040528083600001518152602001836020015181526020018360400151815260200183606001518152602001836080015181526020018360a0015181526020018360c0015181526020018360e0015181526020018361010001518152509050919050565b61107961342a565b6040805160608101825260ff8516815260208082018590528251600080825291810184526110cc938301916110c4565b6110b161342a565b8152602001906001900390816110a95790505b509052611c03565b90505b92915050565b6110dd61342a565b604080516001808252818301909252606091816020015b6110fc61342a565b8152602001906001900390816110f4579050509050828160008151811061111f57fe5b602002602001018190525061115060405180606001604052808760ff16815260200186815260200183815250611c03565b9150505b9392505050565b60006111656116a9565b60ff16826080015160ff16141561118857815161118190611c94565b9050610d85565b6111906117dc565b60ff16826080015160ff1614156111ae576111818260200151611cb8565b6111b6611975565b60ff16826080015160ff1614156111d857815160a08301516111819190611dad565b6111e0611a0e565b60ff16826080015160ff161415611219576111f961342a565b6112068360400151611dfb565b90506112118161115b565b915050610d85565b611221611f71565b60ff16826080015160ff16141561123a57508051610d85565b611242611883565b60ff16826080015160ff161415611287575060608082015160408051607b60208083019190915281830193909352815180820383018152930190528151910120610d85565b6040805162461bcd60e51b8152602060048201526011602482015270496e76616c6964207479706520636f646560781b604482015290519081900360640190fd5b6112d6826020015182611f76565b82602001819052505050565b6112f0826040015182611f76565b82604001819052505050565b600080806134d260a185141561132157506002925060009150600a9050611ff46103f9565b60a285141561133f57506002925060009150600a90506120d96103f9565b60a385141561135d57506002925060009150600a905061219f6103f9565b60a485141561137b57506003925060009150606490506122656103f9565b60a585141561139957506003925060009150606490506123746103f9565b60a68514156113b757506003925060009150606490506124676103f9565b60405162461bcd60e51b815260040180806020018281038252602c81526020018061352e602c913960400191505060405180910390fd5b60a0808301805167ffffffffffffffff90840181169091526020840151909101516000918316111561143957602083015160001960a090910152611431836114a1565b5060016110cf565b50602082015160a001805167ffffffffffffffff83169003905260006110cf565b61146261342a565b6040805160008082526020820190925261149c91611496565b61148361342a565b81526020019060019003908161147b5790505b50611ac1565b905090565b60408051600160f81b6020808301919091526000602183018190526022808401919091528351808403909101815260429092019092528051908201209082015160c0015114156114fd576114f8816020015161255a565b610c2c565b6020015160c08101519052565b60006002826101000151141561152257506000610d85565b6001826101000151141561153857506001610d85565b815160208301516115489061115b565b611555846040015161115b565b611562856060015161115b565b61156f866080015161115b565b8660a001518760c001516115868960e0015161115b565b6040516020018089815260200188815260200187815260200186815260200185815260200184815260200183815260200182815260200198505050505050505050604051602081830303815290604052805190602001209050610d85565b606060f883811c9083901c81900360ff1690828267ffffffffffffffff8111801561160e57600080fd5b50604051908082528060200260200182016040528015611638578160200160208202803683370190505b50905060005b838110156116775761165588828501602002612565565b60001b82828151811061166457fe5b602090810291909101015260010161163e565b509695505050505050565b6000808260010184848151811061169557fe5b016020015190925060f81c90509250929050565b600090565b600080828451101580156116c6575060208385510310155b611703576040805162461bcd60e51b81526020600482015260096024820152681d1bdbc81cda1bdc9d60ba1b604482015290519081900360640190fd5b6020830161171185856125a5565b915091509250929050565b61172461342a565b6040805160c081018252838152815160608101835260008082526020808301829052845182815280820186529394908501939083019161177a565b61176761342a565b81526020019060019003908161175f5790505b509052815260200160006040519080825280602002602001820160405280156117bd57816020015b6117aa61342a565b8152602001906001900390816117a25790505b5081526000602082018190526040820152600160609091015292915050565b600190565b60006117eb61342a565b826000806117f761342a565b60006118038986611682565b90955093506118128986611682565b9095509250600160ff851614156118335761182d8986610d8a565b90955091505b61183d89866125fe565b9095509050600160ff85161415611868578461185a8483856110d5565b965096505050505050610f45565b846118738483611071565b9650965050505050509250929050565b600c90565b61189061342a565b6040518060c00160405280600081526020016040518060600160405280600060ff1681526020016000801b8152602001600067ffffffffffffffff811180156118d857600080fd5b5060405190808252806020026020018201604052801561191257816020015b6118ff61342a565b8152602001906001900390816118f75790505b5090528152602001600060405190808252806020026020018201604052801561195557816020015b61194261342a565b81526020019060019003908161193a5790505b50815260208101849052600c604082015260016060909101529050919050565b600290565b600061198461342a565b82845110158015611999575060408385510310155b6119d5576040805162461bcd60e51b81526020600482015260086024820152671d1bc81cda1bdc9d60c21b604482015290519081900360640190fd5b6000806119e286866125fe565b90945091506119f186856116ae565b909450905083611a01838361260f565b9350935050509250929050565b600390565b600d90565b60006060828160ff871667ffffffffffffffff81118015611a3857600080fd5b50604051908082528060200260200182016040528015611a7257816020015b611a5f61342a565b815260200190600190039081611a575790505b50905060005b8760ff168160ff161015611ab457611a908784610d8a565b838360ff1681518110611a9f57fe5b60209081029190910101529250600101611a78565b5090969095509350505050565b611ac961342a565b611ad382516126ce565b611b24576040805162461bcd60e51b815260206004820152601a60248201527f5475706c65206d75737420686176652076616c69642073697a65000000000000604482015290519081900360640190fd5b600160005b8351811015611b5b57838181518110611b3e57fe5b602002602001015160a00151820191508080600101915050611b29565b506040518060c00160405280600081526020016040518060600160405280600060ff1681526020016000801b8152602001600067ffffffffffffffff81118015611ba457600080fd5b50604051908082528060200260200182016040528015611bde57816020015b611bcb61342a565b815260200190600190039081611bc35790505b5090528152602081019490945260006040850152600360608501526080909301525090565b611c0b61342a565b6040518060c0016040528060008152602001838152602001600067ffffffffffffffff81118015611c3b57600080fd5b50604051908082528060200260200182016040528015611c7557816020015b611c6261342a565b815260200190600190039081611c5a5790505b5081526000602082015260016040820181905260609091015292915050565b60408051602080820193909352815180820384018152908201909152805191012090565b6000600282604001515110611cc957fe5b604082015151611d2c57611cdb6117dc565b82600001518360200151604051602001808460ff1660f81b81526001018360ff1660f81b81526001018281526020019350505050604051602081830303815290604052805190602001209050610d85565b611d346117dc565b8260000151611d5a8460400151600081518110611d4d57fe5b602002602001015161115b565b8460200151604051602001808560ff1660f81b81526001018460ff1660f81b8152600101838152602001828152602001945050505050604051602081830303815290604052805190602001209050919050565b6000611db7611a0e565b8383604051602001808460ff1660f81b8152600101838152602001828152602001935050505060405160208183030381529060405280519060200120905092915050565b611e0361342a565b600882511115611e51576040805162461bcd60e51b8152602060048201526014602482015273092dcecc2d8d2c840e8eae0d8ca40d8cadccee8d60631b604482015290519081900360640190fd5b6060825167ffffffffffffffff81118015611e6b57600080fd5b50604051908082528060200260200182016040528015611e95578160200160208202803683370190505b508051909150600160005b82811015611ef857611eb7868281518110611d4d57fe5b848281518110611ec357fe5b602002602001018181525050858181518110611edb57fe5b602002602001015160a00151820191508080600101915050611ea0565b506000835184604051602001808360ff1660f81b8152600101828051906020019060200280838360005b83811015611f3a578181015183820152602001611f22565b5050505090500192505050604051602081830303815290604052805190602001209050611f67818361260f565b9695505050505050565b606490565b611f7e61342a565b6040805160028082526060828101909352816020015b611f9c61342a565b815260200190600190039081611f945790505090508281600081518110611fbf57fe5b60200260200101819052508381600181518110611fd857fe5b6020026020010181905250611fec81611dfb565b949350505050565b611ffc61342a565b6120098260c001516126d5565b905061201361342a565b6120208360c001516126d5565b905061202b82612717565b158061203d575061203b81612735565b155b156120525761204b83612742565b5050610c2c565b8151600160401b11612099576040805162461bcd60e51b815260206004820152601b602482015260008051602061350e833981519152604482015290519081900360640190fd5b60006120bb826060015184600001516120b6876101800151610c92565b61275f565b90506120d38460c001516120ce8361171c565b612781565b50505050565b6120e161342a565b6120ee8260c001516126d5565b90506120f861342a565b6121058360c001516126d5565b905061211082612717565b1580612122575061212081612735565b155b156121305761204b83612742565b600160401b82600001516007011061217d576040805162461bcd60e51b815260206004820152601b602482015260008051602061350e833981519152604482015290519081900360640190fd5b60006120bb8260600151846000015161219a876101800151610c92565b6127ab565b6121a761342a565b6121b48260c001516126d5565b90506121be61342a565b6121cb8360c001516126d5565b90506121d682612717565b15806121e857506121e681612735565b155b156121f65761204b83612742565b600160401b8260000151601f0110612243576040805162461bcd60e51b815260206004820152601b602482015260008051602061350e833981519152604482015290519081900360640190fd5b60006120bb82606001518460000151612260876101800151610c92565b61290a565b61226d61342a565b61227a8260c001516126d5565b905061228461342a565b6122918360c001516126d5565b905061229b61342a565b6122a88460c001516126d5565b90506122b383612717565b15806122c557506122c382612a3d565b155b806122d657506122d481612735565b155b156122ec576122e484612742565b505050610c2c565b8251600160401b11612333576040805162461bcd60e51b815260206004820152601b602482015260008051602061350e833981519152604482015290519081900360640190fd5b600061235a826060015185600001518560000151612355896101800151610c92565b612a48565b905061236d8560c001516120ce83611888565b5050505050565b61237c61342a565b6123898260c001516126d5565b905061239361342a565b6123a08360c001516126d5565b90506123aa61342a565b6123b78460c001516126d5565b90506123c283612717565b15806123d457506123d282612a3d565b155b806123e557506123e381612735565b155b156123f3576122e484612742565b600160401b836000015160070110612440576040805162461bcd60e51b815260206004820152601b602482015260008051602061350e833981519152604482015290519081900360640190fd5b600061235a826060015185600001518560000151612462896101800151610c92565b612a91565b61246f61342a565b61247c8260c001516126d5565b905061248661342a565b6124938360c001516126d5565b905061249d61342a565b6124aa8460c001516126d5565b90506124b583612717565b15806124c757506124c582612a3d565b155b806124d857506124d681612735565b155b156124e6576122e484612742565b600160401b8360000151601f0110612533576040805162461bcd60e51b815260206004820152601b602482015260008051602061350e833981519152604482015290519081900360640190fd5b600061235a826060015185600001518560000151612555896101800151610c92565b612bd9565b600161010090910152565b600080805b602081101561259d57600882901b9150848185018151811061258857fe5b016020015160f81c919091179060010161256a565b509392505050565b600081602001835110156125f5576040805162461bcd60e51b815260206004820152601260248201527152656164206f7574206f6620626f756e647360701b604482015290519081900360640190fd5b50016020015190565b6000806020830161171185856125a5565b61261761342a565b6040805160c081018252848152815160608101835260008082526020808301829052845182815280820186529394908501939083019161266d565b61265a61342a565b8152602001906001900390816126525790505b509052815260200160006040519080825280602002602001820160405280156126b057816020015b61269d61342a565b8152602001906001900390816126955790505b50815260006020820152600260408201526060019290925250919050565b6008101590565b6126dd61342a565b6126e561342a565b82602001516001846000015103815181106126fc57fe5b60209081029190910101518351600019018452915050919050565b608081015160009060ff161580156110cf57505051600160401b1190565b6080015160ff16600c1490565b61274b816114a1565b60c081015160009081905260e09091015152565b6000611fec612777856020865b048560000151612caa565b6020855b06612e18565b80826020015183600001518151811061279657fe5b60209081029190910101525080516001019052565b6040805160088082528183019092526000916060919060208201818036833701905050905060006127e5866020875b048660000151612caa565b90506020808606600801106128b857600061280c876020885b046001018760400151612caa565b905060005b6018601f88166008030181101561286057612832838260208a5b0601612e18565b60f81b84828151811061284157fe5b60200101906001600160f81b031916908160001a905350600101612811565b506018601f8716600803015b60088110156128b15761288382602089840161277b565b60f81b84828151811061289257fe5b60200101906001600160f81b031916908160001a90535060010161286c565b5050612901565b60005b60088110156128ff576128d1828260208961282b565b60f81b8382815181106128e057fe5b60200101906001600160f81b031916908160001a9053506001016128bb565b505b611f6782612e25565b60408051602080825281830190925260009160609190602082018180368337019050509050600061293d866020876127da565b90506020808606602001106129f657600061295a876020886127fe565b905060005b601f87166020038110156129a85761297a838260208a61282b565b60f81b84828151811061298957fe5b60200101906001600160f81b031916908160001a90535060010161295f565b50601f86166008035b60208110156128b1576129c882602089840161277b565b60f81b8482815181106129d757fe5b60200101906001600160f81b031916908160001a9053506001016129b1565b60005b60208110156128ff57612a0f828260208961282b565b60f81b838281518110612a1e57fe5b60200101906001600160f81b031916908160001a9053506001016129f9565b6080015160ff161590565b600080612a578660208761276c565b90506000612a69826020880687612e62565b90506000612a8588602089048488600001518960200151612ea1565b98975050505050505050565b60006060612a9e84612f47565b90506000612aae876020886127da565b9050602080870660080110612b8f5760005b6018601f881660080301811015612b0857612afe82602089840106858460180181518110612aea57fe5b01602001516001600160f81b031916612fb1565b9150600101612ac0565b50612b22876020885b048387600001518860200151612ea1565b96506000612b32886020896127fe565b90506018601f8816600803015b6008811015612b6b57612b618260208a840106868460180181518110612aea57fe5b9150600101612b3f565b50612b8788602089046001018388604001518960600151612ea1565b975050612bce565b60005b6008811015612bbe57612bb4828260208a0601858460180181518110612aea57fe5b9150600101612b92565b50612bcb87602088612b11565b96505b509495945050505050565b60006060612be684612f47565b90506000612bf6876020886127da565b9050602080870660200110612c875760005b601f8716602003811015612c3757612c2d828260208a5b0601858481518110612aea57fe5b9150600101612c08565b50612c4487602088612b11565b96506000612c54886020896127fe565b9050601f87166020035b6020811015612b6b57612c7d8260208a840106868481518110612aea57fe5b9150600101612c5e565b60005b6020811015612bbe57612ca0828260208a612c1f565b9150600101612c8a565b6000815160001415612d1357612cc06000611c94565b8414612d0b576040805162461bcd60e51b815260206004820152601560248201527432bc3832b1ba32b21032b6b83a3c90313ab33332b960591b604482015290519081900360640190fd5b506000611154565b6000612d3283600081518110612d2557fe5b6020026020010151611c94565b905060015b8351811015612d9c578460011660011415612d7057612d69848281518110612d5b57fe5b602002602001015183612fcd565b9150612d90565b612d8d82858381518110612d8057fe5b6020026020010151612fcd565b91505b600194851c9401612d37565b50848114612de9576040805162461bcd60e51b8152602060048201526015602482015274195e1c1958dd19590818dbdc9c9958dd081c9bdbdd605a1b604482015290519081900360640190fd5b8315612df9575060009050611154565b82600081518110612e0657fe5b60200260200101519150509392505050565b601f036008021c60ff1690565b600080805b8351811015612e5b57600882901b9150838181518110612e4657fe5b016020015160f81c9190911790600101612e2a565b5092915050565b60006060612e6f85612f47565b90508260f81b818581518110612e8157fe5b60200101906001600160f81b031916908160001a90535061115081612e25565b60008151600314612ef9576040805162461bcd60e51b815260206004820152601760248201527f4241445f4e4f524d414c495a4154494f4e5f50524f4f46000000000000000000604482015290519081900360640190fd5b611f678686868686600081518110612f0d57fe5b602002602001015160001c87600181518110612f2557fe5b602002602001015188600281518110612f3a57fe5b6020026020010151612ff9565b6040805160208082528183019092526060918391839160208201818036833701905050905060005b602081101561259d578260f81b8282601f0381518110612f8b57fe5b60200101906001600160f81b031916908160001a90535060089290921c91600101612f6f565b60006060612fbe85612f47565b905082818581518110612e8157fe5b604080516020808201949094528082019290925280518083038201815260609092019052805191012090565b60008061300587611c94565b9050613012898988612caa565b50606061301d613298565b905060018751036001901b89106130ef578761303d57899250505061328d565b60006130488a613339565b88519091505b600182038110156130765761306c8c846001840381518110612d8057fe5b9b5060010161304e565b5060015b600182038110156130da578a600116600114156130b8576130b18360018303815181106130a357fe5b602002602001015185612fcd565b93506130ce565b6130cb84846001840381518110612d8057fe5b93505b60019a8b1c9a0161307a565b506130e58b84612fcd565b935050505061328d565b60015b875181101561316f5760008a60011660011461310e5783613123565b88828151811061311a57fe5b60200260200101515b905060008b60011660011461314b5789838151811061313e57fe5b602002602001015161314d565b845b90506131598282612fcd565b60019c8d1c9c9095509290920191506130f29050565b50871561317e5750905061328d565b80868151811061318a57fe5b60200260200101518414158061319e575085155b6131ef576040805162461bcd60e51b815260206004820152601c60248201527f726967687420737562747265652063616e6e6f74206265207a65726f00000000604482015290519081900360640190fd5b60008615613206576132018686612fcd565b613208565b855b9050861561321857600019909601955b80875b60018a51038110156132415761323782858381518110612d8057fe5b915060010161321b565b50838114613287576040805162461bcd60e51b815260206004820152600e60248201526d0caf0e0cac6e8cac840dac2e8c6d60931b604482015290519081900360640190fd5b50925050505b979650505050505050565b604080518181526108208101825260609182919060208201610800803683370190505090506132c76000611c94565b816000815181106132d457fe5b602090810291909101015260015b6040811015613333576133148260018303815181106132fd57fe5b6020026020010151836001840381518110612d8057fe5b82828151811061332057fe5b60209081029190910101526001016132e2565b50905090565b60008161334857506001610d85565b613355600183901c613339565b6001019050610d85565b6040518060a001604052806005906020820280368337509192915050565b604051806101a00160405280613391613467565b815260200161339e613467565b81526000602082018190526040820181905260608201819052608082015260a0016133c76134d4565b81526020016133d46134d4565b8152602001600015158152602001600060ff1681526020016060815260200160008152602001606081525090565b6040518060800160405280606081526020016060815260200160608152602001606081525090565b6040518060c00160405280600081526020016134446134ee565b815260606020820181905260006040830181905290820181905260809091015290565b604080516101208101909152600081526020810161348361342a565b815260200161349061342a565b815260200161349d61342a565b81526020016134aa61342a565b815260006020820181905260408201526060016134c561342a565b8152602001600081525090565bfe5b604051806040016040528060008152602001606081525090565b604080516060808201835260008083526020830152918101919091529056fe62756666657220696e646578206d7573742062652036342d626974000000000075736520616e6f7468657220636f6e747261637420746f2068616e646c65206f74686572206f70636f646573a2646970667358221220492d740752f0984514cbe5c03cb0acd4428d6b645b66125862e6cc1dd07ef56e64736f6c634300060c0033"

// DeployOneStepProof2 deploys a new Ethereum contract, binding an instance of OneStepProof2 to it.
func DeployOneStepProof2(auth *bind.TransactOpts, backend bind.ContractBackend) (common.Address, *types.Transaction, *OneStepProof2, error) {
	parsed, err := abi.JSON(strings.NewReader(OneStepProof2ABI))
	if err != nil {
		return common.Address{}, nil, nil, err
	}

	address, tx, contract, err := bind.DeployContract(auth, parsed, common.FromHex(OneStepProof2Bin), backend)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &OneStepProof2{OneStepProof2Caller: OneStepProof2Caller{contract: contract}, OneStepProof2Transactor: OneStepProof2Transactor{contract: contract}, OneStepProof2Filterer: OneStepProof2Filterer{contract: contract}}, nil
}

// OneStepProof2 is an auto generated Go binding around an Ethereum contract.
type OneStepProof2 struct {
	OneStepProof2Caller     // Read-only binding to the contract
	OneStepProof2Transactor // Write-only binding to the contract
	OneStepProof2Filterer   // Log filterer for contract events
}

// OneStepProof2Caller is an auto generated read-only Go binding around an Ethereum contract.
type OneStepProof2Caller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// OneStepProof2Transactor is an auto generated write-only Go binding around an Ethereum contract.
type OneStepProof2Transactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// OneStepProof2Filterer is an auto generated log filtering Go binding around an Ethereum contract events.
type OneStepProof2Filterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// OneStepProof2Session is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type OneStepProof2Session struct {
	Contract     *OneStepProof2    // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// OneStepProof2CallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type OneStepProof2CallerSession struct {
	Contract *OneStepProof2Caller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts        // Call options to use throughout this session
}

// OneStepProof2TransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type OneStepProof2TransactorSession struct {
	Contract     *OneStepProof2Transactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts        // Transaction auth options to use throughout this session
}

// OneStepProof2Raw is an auto generated low-level Go binding around an Ethereum contract.
type OneStepProof2Raw struct {
	Contract *OneStepProof2 // Generic contract binding to access the raw methods on
}

// OneStepProof2CallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type OneStepProof2CallerRaw struct {
	Contract *OneStepProof2Caller // Generic read-only contract binding to access the raw methods on
}

// OneStepProof2TransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type OneStepProof2TransactorRaw struct {
	Contract *OneStepProof2Transactor // Generic write-only contract binding to access the raw methods on
}

// NewOneStepProof2 creates a new instance of OneStepProof2, bound to a specific deployed contract.
func NewOneStepProof2(address common.Address, backend bind.ContractBackend) (*OneStepProof2, error) {
	contract, err := bindOneStepProof2(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &OneStepProof2{OneStepProof2Caller: OneStepProof2Caller{contract: contract}, OneStepProof2Transactor: OneStepProof2Transactor{contract: contract}, OneStepProof2Filterer: OneStepProof2Filterer{contract: contract}}, nil
}

// NewOneStepProof2Caller creates a new read-only instance of OneStepProof2, bound to a specific deployed contract.
func NewOneStepProof2Caller(address common.Address, caller bind.ContractCaller) (*OneStepProof2Caller, error) {
	contract, err := bindOneStepProof2(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &OneStepProof2Caller{contract: contract}, nil
}

// NewOneStepProof2Transactor creates a new write-only instance of OneStepProof2, bound to a specific deployed contract.
func NewOneStepProof2Transactor(address common.Address, transactor bind.ContractTransactor) (*OneStepProof2Transactor, error) {
	contract, err := bindOneStepProof2(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &OneStepProof2Transactor{contract: contract}, nil
}

// NewOneStepProof2Filterer creates a new log filterer instance of OneStepProof2, bound to a specific deployed contract.
func NewOneStepProof2Filterer(address common.Address, filterer bind.ContractFilterer) (*OneStepProof2Filterer, error) {
	contract, err := bindOneStepProof2(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &OneStepProof2Filterer{contract: contract}, nil
}

// bindOneStepProof2 binds a generic wrapper to an already deployed contract.
func bindOneStepProof2(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(OneStepProof2ABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_OneStepProof2 *OneStepProof2Raw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _OneStepProof2.Contract.OneStepProof2Caller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_OneStepProof2 *OneStepProof2Raw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _OneStepProof2.Contract.OneStepProof2Transactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_OneStepProof2 *OneStepProof2Raw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _OneStepProof2.Contract.OneStepProof2Transactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_OneStepProof2 *OneStepProof2CallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _OneStepProof2.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_OneStepProof2 *OneStepProof2TransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _OneStepProof2.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_OneStepProof2 *OneStepProof2TransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _OneStepProof2.Contract.contract.Transact(opts, method, params...)
}

// ExecuteStep is a free data retrieval call binding the contract method 0x3a06aeec.
//
// Solidity: function executeStep(bytes32[3] _machineFields, bytes proof, bytes bproof) view returns(uint64 gas, bytes32[5] fields)
func (_OneStepProof2 *OneStepProof2Caller) ExecuteStep(opts *bind.CallOpts, _machineFields [3][32]byte, proof []byte, bproof []byte) (struct {
	Gas    uint64
	Fields [5][32]byte
}, error) {
	var out []interface{}
	err := _OneStepProof2.contract.Call(opts, &out, "executeStep", _machineFields, proof, bproof)

	outstruct := new(struct {
		Gas    uint64
		Fields [5][32]byte
	})

	outstruct.Gas = out[0].(uint64)
	outstruct.Fields = out[1].([5][32]byte)

	return *outstruct, err

}

// ExecuteStep is a free data retrieval call binding the contract method 0x3a06aeec.
//
// Solidity: function executeStep(bytes32[3] _machineFields, bytes proof, bytes bproof) view returns(uint64 gas, bytes32[5] fields)
func (_OneStepProof2 *OneStepProof2Session) ExecuteStep(_machineFields [3][32]byte, proof []byte, bproof []byte) (struct {
	Gas    uint64
	Fields [5][32]byte
}, error) {
	return _OneStepProof2.Contract.ExecuteStep(&_OneStepProof2.CallOpts, _machineFields, proof, bproof)
}

// ExecuteStep is a free data retrieval call binding the contract method 0x3a06aeec.
//
// Solidity: function executeStep(bytes32[3] _machineFields, bytes proof, bytes bproof) view returns(uint64 gas, bytes32[5] fields)
func (_OneStepProof2 *OneStepProof2CallerSession) ExecuteStep(_machineFields [3][32]byte, proof []byte, bproof []byte) (struct {
	Gas    uint64
	Fields [5][32]byte
}, error) {
	return _OneStepProof2.Contract.ExecuteStep(&_OneStepProof2.CallOpts, _machineFields, proof, bproof)
}

// ParseProof is a free data retrieval call binding the contract method 0x793deea3.
//
// Solidity: function parseProof(bytes proof) pure returns(bytes32[], bytes32[], bytes32[], bytes32[])
func (_OneStepProof2 *OneStepProof2Caller) ParseProof(opts *bind.CallOpts, proof []byte) ([][32]byte, [][32]byte, [][32]byte, [][32]byte, error) {
	var out []interface{}
	err := _OneStepProof2.contract.Call(opts, &out, "parseProof", proof)

	if err != nil {
		return *new([][32]byte), *new([][32]byte), *new([][32]byte), *new([][32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([][32]byte)).(*[][32]byte)
	out1 := *abi.ConvertType(out[1], new([][32]byte)).(*[][32]byte)
	out2 := *abi.ConvertType(out[2], new([][32]byte)).(*[][32]byte)
	out3 := *abi.ConvertType(out[3], new([][32]byte)).(*[][32]byte)

	return out0, out1, out2, out3, err

}

// ParseProof is a free data retrieval call binding the contract method 0x793deea3.
//
// Solidity: function parseProof(bytes proof) pure returns(bytes32[], bytes32[], bytes32[], bytes32[])
func (_OneStepProof2 *OneStepProof2Session) ParseProof(proof []byte) ([][32]byte, [][32]byte, [][32]byte, [][32]byte, error) {
	return _OneStepProof2.Contract.ParseProof(&_OneStepProof2.CallOpts, proof)
}

// ParseProof is a free data retrieval call binding the contract method 0x793deea3.
//
// Solidity: function parseProof(bytes proof) pure returns(bytes32[], bytes32[], bytes32[], bytes32[])
func (_OneStepProof2 *OneStepProof2CallerSession) ParseProof(proof []byte) ([][32]byte, [][32]byte, [][32]byte, [][32]byte, error) {
	return _OneStepProof2.Contract.ParseProof(&_OneStepProof2.CallOpts, proof)
}
