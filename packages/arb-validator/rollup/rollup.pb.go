// Code generated by protoc-gen-go. DO NOT EDIT.
// source: rollup.proto

package rollup

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	value "github.com/offchainlabs/arbitrum/packages/arb-util/value"
	structures "github.com/offchainlabs/arbitrum/packages/arb-validator/structures"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type NodeBuf struct {
	PrevHash             *value.HashBuf                `protobuf:"bytes,1,opt,name=prevHash,proto3" json:"prevHash,omitempty"`
	Deadline             *structures.TimeTicksBuf      `protobuf:"bytes,2,opt,name=deadline,proto3" json:"deadline,omitempty"`
	DisputableNode       *structures.DisputableNodeBuf `protobuf:"bytes,3,opt,name=disputableNode,proto3" json:"disputableNode,omitempty"`
	LinkType             uint32                        `protobuf:"varint,4,opt,name=linkType,proto3" json:"linkType,omitempty"`
	VmProtoData          *structures.VMProtoDataBuf    `protobuf:"bytes,5,opt,name=vmProtoData,proto3" json:"vmProtoData,omitempty"`
	MachineHash          *value.HashBuf                `protobuf:"bytes,6,opt,name=machineHash,proto3" json:"machineHash,omitempty"`
	Depth                uint64                        `protobuf:"varint,7,opt,name=depth,proto3" json:"depth,omitempty"`
	NodeDataHash         *value.HashBuf                `protobuf:"bytes,8,opt,name=nodeDataHash,proto3" json:"nodeDataHash,omitempty"`
	InnerHash            *value.HashBuf                `protobuf:"bytes,9,opt,name=innerHash,proto3" json:"innerHash,omitempty"`
	Hash                 *value.HashBuf                `protobuf:"bytes,10,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *NodeBuf) Reset()         { *m = NodeBuf{} }
func (m *NodeBuf) String() string { return proto.CompactTextString(m) }
func (*NodeBuf) ProtoMessage()    {}
func (*NodeBuf) Descriptor() ([]byte, []int) {
	return fileDescriptor_037f188b50610c79, []int{0}
}

func (m *NodeBuf) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeBuf.Unmarshal(m, b)
}
func (m *NodeBuf) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeBuf.Marshal(b, m, deterministic)
}
func (m *NodeBuf) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeBuf.Merge(m, src)
}
func (m *NodeBuf) XXX_Size() int {
	return xxx_messageInfo_NodeBuf.Size(m)
}
func (m *NodeBuf) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeBuf.DiscardUnknown(m)
}

var xxx_messageInfo_NodeBuf proto.InternalMessageInfo

func (m *NodeBuf) GetPrevHash() *value.HashBuf {
	if m != nil {
		return m.PrevHash
	}
	return nil
}

func (m *NodeBuf) GetDeadline() *structures.TimeTicksBuf {
	if m != nil {
		return m.Deadline
	}
	return nil
}

func (m *NodeBuf) GetDisputableNode() *structures.DisputableNodeBuf {
	if m != nil {
		return m.DisputableNode
	}
	return nil
}

func (m *NodeBuf) GetLinkType() uint32 {
	if m != nil {
		return m.LinkType
	}
	return 0
}

func (m *NodeBuf) GetVmProtoData() *structures.VMProtoDataBuf {
	if m != nil {
		return m.VmProtoData
	}
	return nil
}

func (m *NodeBuf) GetMachineHash() *value.HashBuf {
	if m != nil {
		return m.MachineHash
	}
	return nil
}

func (m *NodeBuf) GetDepth() uint64 {
	if m != nil {
		return m.Depth
	}
	return 0
}

func (m *NodeBuf) GetNodeDataHash() *value.HashBuf {
	if m != nil {
		return m.NodeDataHash
	}
	return nil
}

func (m *NodeBuf) GetInnerHash() *value.HashBuf {
	if m != nil {
		return m.InnerHash
	}
	return nil
}

func (m *NodeBuf) GetHash() *value.HashBuf {
	if m != nil {
		return m.Hash
	}
	return nil
}

type NodeGraphBuf struct {
	Nodes                []*NodeBuf                 `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty"`
	OldestNodeHash       *value.HashBuf             `protobuf:"bytes,2,opt,name=oldestNodeHash,proto3" json:"oldestNodeHash,omitempty"`
	LatestConfirmedHash  *value.HashBuf             `protobuf:"bytes,3,opt,name=latestConfirmedHash,proto3" json:"latestConfirmedHash,omitempty"`
	LeafHashes           []*value.HashBuf           `protobuf:"bytes,4,rep,name=leafHashes,proto3" json:"leafHashes,omitempty"`
	Params               *structures.ChainParamsBuf `protobuf:"bytes,5,opt,name=params,proto3" json:"params,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *NodeGraphBuf) Reset()         { *m = NodeGraphBuf{} }
func (m *NodeGraphBuf) String() string { return proto.CompactTextString(m) }
func (*NodeGraphBuf) ProtoMessage()    {}
func (*NodeGraphBuf) Descriptor() ([]byte, []int) {
	return fileDescriptor_037f188b50610c79, []int{1}
}

func (m *NodeGraphBuf) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeGraphBuf.Unmarshal(m, b)
}
func (m *NodeGraphBuf) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeGraphBuf.Marshal(b, m, deterministic)
}
func (m *NodeGraphBuf) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeGraphBuf.Merge(m, src)
}
func (m *NodeGraphBuf) XXX_Size() int {
	return xxx_messageInfo_NodeGraphBuf.Size(m)
}
func (m *NodeGraphBuf) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeGraphBuf.DiscardUnknown(m)
}

var xxx_messageInfo_NodeGraphBuf proto.InternalMessageInfo

func (m *NodeGraphBuf) GetNodes() []*NodeBuf {
	if m != nil {
		return m.Nodes
	}
	return nil
}

func (m *NodeGraphBuf) GetOldestNodeHash() *value.HashBuf {
	if m != nil {
		return m.OldestNodeHash
	}
	return nil
}

func (m *NodeGraphBuf) GetLatestConfirmedHash() *value.HashBuf {
	if m != nil {
		return m.LatestConfirmedHash
	}
	return nil
}

func (m *NodeGraphBuf) GetLeafHashes() []*value.HashBuf {
	if m != nil {
		return m.LeafHashes
	}
	return nil
}

func (m *NodeGraphBuf) GetParams() *structures.ChainParamsBuf {
	if m != nil {
		return m.Params
	}
	return nil
}

type NodeGraphCkpBuf struct {
	NodeHashes           []*value.HashBuf           `protobuf:"bytes,1,rep,name=nodeHashes,proto3" json:"nodeHashes,omitempty"`
	OldestNodeHash       *value.HashBuf             `protobuf:"bytes,2,opt,name=oldestNodeHash,proto3" json:"oldestNodeHash,omitempty"`
	LatestConfirmedHash  *value.HashBuf             `protobuf:"bytes,3,opt,name=latestConfirmedHash,proto3" json:"latestConfirmedHash,omitempty"`
	LeafHashes           []*value.HashBuf           `protobuf:"bytes,4,rep,name=leafHashes,proto3" json:"leafHashes,omitempty"`
	Params               *structures.ChainParamsBuf `protobuf:"bytes,5,opt,name=params,proto3" json:"params,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *NodeGraphCkpBuf) Reset()         { *m = NodeGraphCkpBuf{} }
func (m *NodeGraphCkpBuf) String() string { return proto.CompactTextString(m) }
func (*NodeGraphCkpBuf) ProtoMessage()    {}
func (*NodeGraphCkpBuf) Descriptor() ([]byte, []int) {
	return fileDescriptor_037f188b50610c79, []int{2}
}

func (m *NodeGraphCkpBuf) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeGraphCkpBuf.Unmarshal(m, b)
}
func (m *NodeGraphCkpBuf) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeGraphCkpBuf.Marshal(b, m, deterministic)
}
func (m *NodeGraphCkpBuf) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeGraphCkpBuf.Merge(m, src)
}
func (m *NodeGraphCkpBuf) XXX_Size() int {
	return xxx_messageInfo_NodeGraphCkpBuf.Size(m)
}
func (m *NodeGraphCkpBuf) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeGraphCkpBuf.DiscardUnknown(m)
}

var xxx_messageInfo_NodeGraphCkpBuf proto.InternalMessageInfo

func (m *NodeGraphCkpBuf) GetNodeHashes() []*value.HashBuf {
	if m != nil {
		return m.NodeHashes
	}
	return nil
}

func (m *NodeGraphCkpBuf) GetOldestNodeHash() *value.HashBuf {
	if m != nil {
		return m.OldestNodeHash
	}
	return nil
}

func (m *NodeGraphCkpBuf) GetLatestConfirmedHash() *value.HashBuf {
	if m != nil {
		return m.LatestConfirmedHash
	}
	return nil
}

func (m *NodeGraphCkpBuf) GetLeafHashes() []*value.HashBuf {
	if m != nil {
		return m.LeafHashes
	}
	return nil
}

func (m *NodeGraphCkpBuf) GetParams() *structures.ChainParamsBuf {
	if m != nil {
		return m.Params
	}
	return nil
}

type StakedNodeGraphBuf struct {
	NodeGraph            *NodeGraphBuf `protobuf:"bytes,1,opt,name=nodeGraph,proto3" json:"nodeGraph,omitempty"`
	Stakers              []*StakerBuf  `protobuf:"bytes,2,rep,name=stakers,proto3" json:"stakers,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *StakedNodeGraphBuf) Reset()         { *m = StakedNodeGraphBuf{} }
func (m *StakedNodeGraphBuf) String() string { return proto.CompactTextString(m) }
func (*StakedNodeGraphBuf) ProtoMessage()    {}
func (*StakedNodeGraphBuf) Descriptor() ([]byte, []int) {
	return fileDescriptor_037f188b50610c79, []int{3}
}

func (m *StakedNodeGraphBuf) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StakedNodeGraphBuf.Unmarshal(m, b)
}
func (m *StakedNodeGraphBuf) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StakedNodeGraphBuf.Marshal(b, m, deterministic)
}
func (m *StakedNodeGraphBuf) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StakedNodeGraphBuf.Merge(m, src)
}
func (m *StakedNodeGraphBuf) XXX_Size() int {
	return xxx_messageInfo_StakedNodeGraphBuf.Size(m)
}
func (m *StakedNodeGraphBuf) XXX_DiscardUnknown() {
	xxx_messageInfo_StakedNodeGraphBuf.DiscardUnknown(m)
}

var xxx_messageInfo_StakedNodeGraphBuf proto.InternalMessageInfo

func (m *StakedNodeGraphBuf) GetNodeGraph() *NodeGraphBuf {
	if m != nil {
		return m.NodeGraph
	}
	return nil
}

func (m *StakedNodeGraphBuf) GetStakers() []*StakerBuf {
	if m != nil {
		return m.Stakers
	}
	return nil
}

type StakedNodeGraphCkpBuf struct {
	NodeGraph            *NodeGraphCkpBuf `protobuf:"bytes,1,opt,name=nodeGraph,proto3" json:"nodeGraph,omitempty"`
	Stakers              []*StakerBuf     `protobuf:"bytes,2,rep,name=stakers,proto3" json:"stakers,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *StakedNodeGraphCkpBuf) Reset()         { *m = StakedNodeGraphCkpBuf{} }
func (m *StakedNodeGraphCkpBuf) String() string { return proto.CompactTextString(m) }
func (*StakedNodeGraphCkpBuf) ProtoMessage()    {}
func (*StakedNodeGraphCkpBuf) Descriptor() ([]byte, []int) {
	return fileDescriptor_037f188b50610c79, []int{4}
}

func (m *StakedNodeGraphCkpBuf) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StakedNodeGraphCkpBuf.Unmarshal(m, b)
}
func (m *StakedNodeGraphCkpBuf) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StakedNodeGraphCkpBuf.Marshal(b, m, deterministic)
}
func (m *StakedNodeGraphCkpBuf) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StakedNodeGraphCkpBuf.Merge(m, src)
}
func (m *StakedNodeGraphCkpBuf) XXX_Size() int {
	return xxx_messageInfo_StakedNodeGraphCkpBuf.Size(m)
}
func (m *StakedNodeGraphCkpBuf) XXX_DiscardUnknown() {
	xxx_messageInfo_StakedNodeGraphCkpBuf.DiscardUnknown(m)
}

var xxx_messageInfo_StakedNodeGraphCkpBuf proto.InternalMessageInfo

func (m *StakedNodeGraphCkpBuf) GetNodeGraph() *NodeGraphCkpBuf {
	if m != nil {
		return m.NodeGraph
	}
	return nil
}

func (m *StakedNodeGraphCkpBuf) GetStakers() []*StakerBuf {
	if m != nil {
		return m.Stakers
	}
	return nil
}

type ChainObserverBuf struct {
	StakedNodeGraph      *StakedNodeGraphBuf         `protobuf:"bytes,1,opt,name=stakedNodeGraph,proto3" json:"stakedNodeGraph,omitempty"`
	ContractAddress      []byte                      `protobuf:"bytes,2,opt,name=contractAddress,proto3" json:"contractAddress,omitempty"`
	PendingInbox         *structures.PendingInboxBuf `protobuf:"bytes,3,opt,name=pendingInbox,proto3" json:"pendingInbox,omitempty"`
	IsOpinionated        bool                        `protobuf:"varint,4,opt,name=isOpinionated,proto3" json:"isOpinionated,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *ChainObserverBuf) Reset()         { *m = ChainObserverBuf{} }
func (m *ChainObserverBuf) String() string { return proto.CompactTextString(m) }
func (*ChainObserverBuf) ProtoMessage()    {}
func (*ChainObserverBuf) Descriptor() ([]byte, []int) {
	return fileDescriptor_037f188b50610c79, []int{5}
}

func (m *ChainObserverBuf) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChainObserverBuf.Unmarshal(m, b)
}
func (m *ChainObserverBuf) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChainObserverBuf.Marshal(b, m, deterministic)
}
func (m *ChainObserverBuf) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChainObserverBuf.Merge(m, src)
}
func (m *ChainObserverBuf) XXX_Size() int {
	return xxx_messageInfo_ChainObserverBuf.Size(m)
}
func (m *ChainObserverBuf) XXX_DiscardUnknown() {
	xxx_messageInfo_ChainObserverBuf.DiscardUnknown(m)
}

var xxx_messageInfo_ChainObserverBuf proto.InternalMessageInfo

func (m *ChainObserverBuf) GetStakedNodeGraph() *StakedNodeGraphBuf {
	if m != nil {
		return m.StakedNodeGraph
	}
	return nil
}

func (m *ChainObserverBuf) GetContractAddress() []byte {
	if m != nil {
		return m.ContractAddress
	}
	return nil
}

func (m *ChainObserverBuf) GetPendingInbox() *structures.PendingInboxBuf {
	if m != nil {
		return m.PendingInbox
	}
	return nil
}

func (m *ChainObserverBuf) GetIsOpinionated() bool {
	if m != nil {
		return m.IsOpinionated
	}
	return false
}

type ChainObserverCkpBuf struct {
	StakedNodeGraph      *StakedNodeGraphCkpBuf         `protobuf:"bytes,1,opt,name=stakedNodeGraph,proto3" json:"stakedNodeGraph,omitempty"`
	ContractAddress      []byte                         `protobuf:"bytes,2,opt,name=contractAddress,proto3" json:"contractAddress,omitempty"`
	PendingInbox         *structures.PendingInboxCkpBuf `protobuf:"bytes,3,opt,name=pendingInbox,proto3" json:"pendingInbox,omitempty"`
	IsOpinionated        bool                           `protobuf:"varint,4,opt,name=isOpinionated,proto3" json:"isOpinionated,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *ChainObserverCkpBuf) Reset()         { *m = ChainObserverCkpBuf{} }
func (m *ChainObserverCkpBuf) String() string { return proto.CompactTextString(m) }
func (*ChainObserverCkpBuf) ProtoMessage()    {}
func (*ChainObserverCkpBuf) Descriptor() ([]byte, []int) {
	return fileDescriptor_037f188b50610c79, []int{6}
}

func (m *ChainObserverCkpBuf) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChainObserverCkpBuf.Unmarshal(m, b)
}
func (m *ChainObserverCkpBuf) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChainObserverCkpBuf.Marshal(b, m, deterministic)
}
func (m *ChainObserverCkpBuf) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChainObserverCkpBuf.Merge(m, src)
}
func (m *ChainObserverCkpBuf) XXX_Size() int {
	return xxx_messageInfo_ChainObserverCkpBuf.Size(m)
}
func (m *ChainObserverCkpBuf) XXX_DiscardUnknown() {
	xxx_messageInfo_ChainObserverCkpBuf.DiscardUnknown(m)
}

var xxx_messageInfo_ChainObserverCkpBuf proto.InternalMessageInfo

func (m *ChainObserverCkpBuf) GetStakedNodeGraph() *StakedNodeGraphCkpBuf {
	if m != nil {
		return m.StakedNodeGraph
	}
	return nil
}

func (m *ChainObserverCkpBuf) GetContractAddress() []byte {
	if m != nil {
		return m.ContractAddress
	}
	return nil
}

func (m *ChainObserverCkpBuf) GetPendingInbox() *structures.PendingInboxCkpBuf {
	if m != nil {
		return m.PendingInbox
	}
	return nil
}

func (m *ChainObserverCkpBuf) GetIsOpinionated() bool {
	if m != nil {
		return m.IsOpinionated
	}
	return false
}

type StakerBuf struct {
	Address              []byte                   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Location             *value.HashBuf           `protobuf:"bytes,2,opt,name=location,proto3" json:"location,omitempty"`
	CreationTime         *structures.TimeTicksBuf `protobuf:"bytes,3,opt,name=creationTime,proto3" json:"creationTime,omitempty"`
	ChallengeAddr        []byte                   `protobuf:"bytes,4,opt,name=challengeAddr,proto3" json:"challengeAddr,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *StakerBuf) Reset()         { *m = StakerBuf{} }
func (m *StakerBuf) String() string { return proto.CompactTextString(m) }
func (*StakerBuf) ProtoMessage()    {}
func (*StakerBuf) Descriptor() ([]byte, []int) {
	return fileDescriptor_037f188b50610c79, []int{7}
}

func (m *StakerBuf) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StakerBuf.Unmarshal(m, b)
}
func (m *StakerBuf) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StakerBuf.Marshal(b, m, deterministic)
}
func (m *StakerBuf) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StakerBuf.Merge(m, src)
}
func (m *StakerBuf) XXX_Size() int {
	return xxx_messageInfo_StakerBuf.Size(m)
}
func (m *StakerBuf) XXX_DiscardUnknown() {
	xxx_messageInfo_StakerBuf.DiscardUnknown(m)
}

var xxx_messageInfo_StakerBuf proto.InternalMessageInfo

func (m *StakerBuf) GetAddress() []byte {
	if m != nil {
		return m.Address
	}
	return nil
}

func (m *StakerBuf) GetLocation() *value.HashBuf {
	if m != nil {
		return m.Location
	}
	return nil
}

func (m *StakerBuf) GetCreationTime() *structures.TimeTicksBuf {
	if m != nil {
		return m.CreationTime
	}
	return nil
}

func (m *StakerBuf) GetChallengeAddr() []byte {
	if m != nil {
		return m.ChallengeAddr
	}
	return nil
}

func init() {
	proto.RegisterType((*NodeBuf)(nil), "rollup.NodeBuf")
	proto.RegisterType((*NodeGraphBuf)(nil), "rollup.NodeGraphBuf")
	proto.RegisterType((*NodeGraphCkpBuf)(nil), "rollup.NodeGraphCkpBuf")
	proto.RegisterType((*StakedNodeGraphBuf)(nil), "rollup.StakedNodeGraphBuf")
	proto.RegisterType((*StakedNodeGraphCkpBuf)(nil), "rollup.StakedNodeGraphCkpBuf")
	proto.RegisterType((*ChainObserverBuf)(nil), "rollup.ChainObserverBuf")
	proto.RegisterType((*ChainObserverCkpBuf)(nil), "rollup.ChainObserverCkpBuf")
	proto.RegisterType((*StakerBuf)(nil), "rollup.StakerBuf")
}

func init() { proto.RegisterFile("rollup.proto", fileDescriptor_037f188b50610c79) }

var fileDescriptor_037f188b50610c79 = []byte{
	// 742 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xdc, 0x55, 0xcd, 0x6e, 0x1a, 0x3b,
	0x14, 0xd6, 0x00, 0xe1, 0xe7, 0x40, 0xc2, 0x8d, 0x93, 0xab, 0x3b, 0x22, 0xca, 0x15, 0x42, 0xad,
	0x84, 0xfa, 0x03, 0x15, 0xfd, 0x59, 0x45, 0x6d, 0x4a, 0x52, 0xa5, 0x5d, 0xb4, 0x89, 0xa6, 0x51,
	0x17, 0xdd, 0x99, 0x19, 0x03, 0x16, 0xc6, 0x1e, 0xd9, 0x1e, 0xd4, 0xaa, 0x8f, 0xd1, 0x07, 0xe8,
	0x53, 0xf4, 0x65, 0xfa, 0x06, 0xdd, 0xf6, 0x09, 0x2a, 0x7b, 0x06, 0x98, 0x21, 0xc3, 0x26, 0xdd,
	0x75, 0x83, 0xc6, 0xe7, 0x7c, 0xdf, 0xf9, 0xce, 0xf9, 0x6c, 0x6c, 0x68, 0x48, 0xc1, 0x58, 0x14,
	0xf6, 0x42, 0x29, 0xb4, 0x40, 0xe5, 0x78, 0xd5, 0xda, 0x5f, 0x60, 0x16, 0x91, 0xbe, 0xfd, 0x8d,
	0x53, 0xad, 0x23, 0xa5, 0x65, 0xe4, 0xeb, 0x48, 0x12, 0xd5, 0x5f, 0x7f, 0xc6, 0xc9, 0xce, 0x8f,
	0x22, 0x54, 0xde, 0x89, 0x80, 0x0c, 0xa3, 0x31, 0xba, 0x07, 0xd5, 0x50, 0x92, 0xc5, 0x6b, 0xac,
	0xa6, 0xae, 0xd3, 0x76, 0xba, 0xf5, 0xc1, 0x5e, 0x2f, 0x2e, 0x64, 0x42, 0xc3, 0x68, 0xec, 0xad,
	0xf2, 0xe8, 0x09, 0x54, 0x03, 0x82, 0x03, 0x46, 0x39, 0x71, 0x0b, 0x16, 0xeb, 0xf6, 0x52, 0xc5,
	0xaf, 0xe9, 0x9c, 0x5c, 0x53, 0x7f, 0xa6, 0x2c, 0x6b, 0x89, 0x44, 0xaf, 0x60, 0x2f, 0xa0, 0x2a,
	0x8c, 0x34, 0x1e, 0x31, 0x62, 0x64, 0xdd, 0xa2, 0xe5, 0x1e, 0xa7, 0xb9, 0xe7, 0x19, 0x84, 0x29,
	0xb0, 0x41, 0x42, 0x2d, 0xa8, 0x32, 0xca, 0x67, 0xd7, 0x9f, 0x43, 0xe2, 0x96, 0xda, 0x4e, 0x77,
	0xd7, 0x5b, 0xad, 0xd1, 0x09, 0xd4, 0x17, 0xf3, 0x2b, 0x33, 0xdb, 0x39, 0xd6, 0xd8, 0xdd, 0xb1,
	0xf5, 0x5b, 0xe9, 0xfa, 0x1f, 0xde, 0xae, 0xd2, 0xa6, 0x78, 0x1a, 0x8e, 0x1e, 0x41, 0x7d, 0x8e,
	0xfd, 0x29, 0xe5, 0xc4, 0xba, 0x50, 0xce, 0x75, 0x21, 0x0d, 0x41, 0x87, 0xb0, 0x13, 0x90, 0x50,
	0x4f, 0xdd, 0x4a, 0xdb, 0xe9, 0x96, 0xbc, 0x78, 0x81, 0x06, 0xd0, 0xe0, 0x22, 0x20, 0xa6, 0xa6,
	0x2d, 0x54, 0xcd, 0x2d, 0x94, 0xc1, 0xa0, 0x07, 0x50, 0xa3, 0x9c, 0x13, 0x69, 0x09, 0xb5, 0x5c,
	0xc2, 0x1a, 0x80, 0x3a, 0x50, 0x9a, 0x1a, 0x20, 0xe4, 0x02, 0x6d, 0xae, 0xf3, 0xb5, 0x00, 0x0d,
	0x63, 0xd8, 0x85, 0xc4, 0xa1, 0x09, 0xa3, 0xbb, 0xb0, 0x63, 0x24, 0x95, 0xeb, 0xb4, 0x8b, 0xdd,
	0xfa, 0xa0, 0xd9, 0x4b, 0xce, 0xd0, 0xd2, 0xe8, 0x38, 0x8b, 0x9e, 0xc1, 0x9e, 0x60, 0x01, 0x51,
	0xda, 0xc4, 0x6d, 0x3b, 0x85, 0x5c, 0x95, 0x0d, 0x14, 0x3a, 0x85, 0x03, 0x86, 0x35, 0x51, 0xfa,
	0x4c, 0xf0, 0x31, 0x95, 0x73, 0x12, 0x58, 0x72, 0x31, 0x97, 0x9c, 0x07, 0x45, 0x3d, 0x00, 0x46,
	0xf0, 0xd8, 0x7c, 0x13, 0xe5, 0x96, 0x6c, 0x97, 0x9b, 0xc4, 0x14, 0x02, 0x0d, 0xa0, 0x1c, 0x62,
	0x89, 0xe7, 0x2a, 0x6f, 0xa3, 0xcf, 0xa6, 0x98, 0xf2, 0x2b, 0x9b, 0x36, 0xbc, 0x04, 0xd9, 0xf9,
	0x56, 0x80, 0xe6, 0xca, 0x95, 0xb3, 0x59, 0x68, 0x8c, 0xe9, 0x01, 0xf0, 0x64, 0x8a, 0x95, 0x3b,
	0x37, 0x74, 0xd7, 0x88, 0xbf, 0xdc, 0xa1, 0x08, 0xd0, 0x7b, 0x8d, 0x67, 0x24, 0xc8, 0x1c, 0x9e,
	0x01, 0xd4, 0xf8, 0x72, 0x9d, 0xdc, 0x0f, 0x87, 0xe9, 0x03, 0xb4, 0x04, 0x7a, 0x6b, 0x18, 0xba,
	0x0f, 0x15, 0x65, 0x2a, 0x49, 0xe5, 0x16, 0x6c, 0xab, 0xfb, 0x4b, 0x86, 0x15, 0x90, 0x06, 0xbe,
	0x44, 0x74, 0xbe, 0xc0, 0xbf, 0x1b, 0xb2, 0xc9, 0xee, 0x3c, 0xbd, 0xa9, 0xfc, 0xdf, 0x0d, 0xe5,
	0x18, 0x7b, 0x6b, 0xf1, 0x9f, 0x0e, 0xfc, 0x63, 0xed, 0xb8, 0x1c, 0x29, 0x22, 0x17, 0x36, 0x8b,
	0xce, 0xa1, 0xa9, 0xb2, 0x1d, 0x25, 0xf2, 0xad, 0x4c, 0xa5, 0x8c, 0x4f, 0xde, 0x26, 0x05, 0x75,
	0xa1, 0xe9, 0x0b, 0xae, 0x25, 0xf6, 0xf5, 0xcb, 0x20, 0x90, 0x44, 0x29, 0x7b, 0x5a, 0x1a, 0xde,
	0x66, 0x18, 0xbd, 0x80, 0x46, 0x48, 0x78, 0x40, 0xf9, 0xe4, 0x0d, 0x1f, 0x89, 0x4f, 0xc9, 0xb9,
	0x38, 0x4a, 0x6f, 0xd9, 0x55, 0x2a, 0x6f, 0xef, 0x90, 0x34, 0x01, 0xdd, 0x81, 0x5d, 0xaa, 0x2e,
	0x43, 0xca, 0xa9, 0xe0, 0x58, 0x93, 0xc0, 0x5e, 0x8f, 0x55, 0x2f, 0x1b, 0xec, 0xfc, 0x72, 0xe0,
	0x20, 0x33, 0x6b, 0xe2, 0xf3, 0xc5, 0xb6, 0x71, 0x8f, 0xb7, 0x8c, 0x9b, 0x78, 0xfe, 0x07, 0x13,
	0x0f, 0x73, 0x27, 0xfe, 0x7f, 0xdb, 0xc4, 0x89, 0xe0, 0x6d, 0x86, 0xfe, 0xee, 0x40, 0x6d, 0xb5,
	0xef, 0xc8, 0x85, 0x0a, 0x4e, 0x3a, 0x73, 0x6c, 0x67, 0xcb, 0xa5, 0x79, 0x05, 0x99, 0xf0, 0xb1,
	0xa6, 0x82, 0x6f, 0xf9, 0x53, 0xaf, 0xf2, 0xe8, 0x04, 0x1a, 0xbe, 0x24, 0xf6, 0xdb, 0xbc, 0x78,
	0x49, 0xf7, 0xdb, 0x5f, 0xc2, 0x0c, 0xda, 0xf4, 0xed, 0x4f, 0x31, 0x63, 0x84, 0x4f, 0x88, 0xf1,
	0xc3, 0xf6, 0xdd, 0xf0, 0xb2, 0xc1, 0xe1, 0xe9, 0xc7, 0xe7, 0x13, 0xaa, 0xa7, 0xd1, 0xa8, 0xe7,
	0x8b, 0x79, 0x5f, 0x8c, 0xc7, 0xbe, 0xd9, 0x39, 0x86, 0x47, 0xaa, 0x8f, 0xe5, 0x88, 0x6a, 0x19,
	0xcd, 0xfb, 0x21, 0xf6, 0x67, 0x78, 0x42, 0x6c, 0xe4, 0xe1, 0x02, 0x33, 0x1a, 0x60, 0x2d, 0x64,
	0x3f, 0xde, 0xb4, 0x51, 0xd9, 0x3e, 0xf5, 0x8f, 0x7f, 0x07, 0x00, 0x00, 0xff, 0xff, 0x43, 0x01,
	0x44, 0x06, 0x32, 0x08, 0x00, 0x00,
}
