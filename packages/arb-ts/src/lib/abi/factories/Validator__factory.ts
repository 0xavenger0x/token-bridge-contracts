/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from 'ethers'
import { Provider, TransactionRequest } from '@ethersproject/providers'
import { Contract, ContractFactory, Overrides } from '@ethersproject/contracts'

import type { Validator } from '../Validator'

export class Validator__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer)
  }

  deploy(overrides?: Overrides): Promise<Validator> {
    return super.deploy(overrides || {}) as Promise<Validator>
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {})
  }
  attach(address: string): Validator {
    return super.attach(address) as Validator
  }
  connect(signer: Signer): Validator__factory {
    return super.connect(signer) as Validator__factory
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Validator {
    return new Contract(address, _abi, signerOrProvider) as Validator
  }
}

const _abi = [
  {
    inputs: [],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [
      {
        internalType: 'bytes',
        name: 'data',
        type: 'bytes',
      },
      {
        internalType: 'address',
        name: 'destination',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'executeTransaction',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes[]',
        name: 'data',
        type: 'bytes[]',
      },
      {
        internalType: 'address[]',
        name: 'destination',
        type: 'address[]',
      },
      {
        internalType: 'uint256[]',
        name: 'amount',
        type: 'uint256[]',
      },
    ],
    name: 'executeTransactions',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IRollup',
        name: 'rollup',
        type: 'address',
      },
      {
        internalType: 'address payable[]',
        name: 'stakers',
        type: 'address[]',
      },
    ],
    name: 'returnOldDeposits',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IChallenge[]',
        name: 'challenges',
        type: 'address[]',
      },
    ],
    name: 'timeoutChallenges',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
]

const _bytecode =
  '0x608060405234801561001057600080fd5b50600080546001600160a01b0319163317905561080d806100326000396000f3fe60806040526004361061003f5760003560e01c806372f458661461004457806381aac2d914610059578063944f449514610079578063ce1d571f14610099575b600080fd5b61005761005236600461053c565b6100ac565b005b34801561006557600080fd5b506100576100743660046105d2565b610237565b34801561008557600080fd5b50610057610094366004610697565b610311565b6100576100a7366004610612565b6103f7565b6000546001600160a01b031633146100df5760405162461bcd60e51b81526004016100d690610754565b60405180910390fd5b8460005b8181101561022d5760008888838181106100f957fe5b905060200281019061010b9190610778565b905011156101615761014586868381811061012257fe5b90506020020160208101906101379190610519565b6001600160a01b03166104ca565b6101615760405162461bcd60e51b81526004016100d69061070e565b600086868381811061016f57fe5b90506020020160208101906101849190610519565b6001600160a01b031685858481811061019957fe5b905060200201358a8a858181106101ac57fe5b90506020028101906101be9190610778565b6040516101cc9291906106ea565b60006040518083038185875af1925050503d8060008114610209576040519150601f19603f3d011682016040523d82523d6000602084013e61020e565b606091505b5050905080610224576040513d806000833e8082fd5b506001016100e3565b5050505050505050565b8060005b8181101561030b5783838281811061024f57fe5b90506020020160208101906102649190610519565b6001600160a01b03166370dea79a6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561029e57600080fd5b505af19250505080156102af575060015b610303573d8080156102dd576040519150601f19603f3d011682016040523d82523d6000602084013e6102e2565b606091505b5080516103015760405162461bcd60e51b81526004016100d690610737565b505b60010161023b565b50505050565b8060005b818110156103f057846001600160a01b0316637427be5185858481811061033857fe5b905060200201602081019061034d9190610519565b6040518263ffffffff1660e01b815260040161036991906106fa565b600060405180830381600087803b15801561038357600080fd5b505af1925050508015610394575060015b6103e8573d8080156103c2576040519150601f19603f3d011682016040523d82523d6000602084013e6103c7565b606091505b5080516103e65760405162461bcd60e51b81526004016100d690610737565b505b600101610315565b5050505050565b6000546001600160a01b031633146104215760405162461bcd60e51b81526004016100d690610754565b821561045557610439826001600160a01b03166104ca565b6104555760405162461bcd60e51b81526004016100d69061070e565b6000826001600160a01b03168286866040516104729291906106ea565b60006040518083038185875af1925050503d80600081146104af576040519150601f19603f3d011682016040523d82523d6000602084013e6104b4565b606091505b50509050806103f0576040513d806000833e8082fd5b3b151590565b60008083601f8401126104e1578182fd5b50813567ffffffffffffffff8111156104f8578182fd5b602083019150836020808302850101111561051257600080fd5b9250929050565b60006020828403121561052a578081fd5b8135610535816107bf565b9392505050565b60008060008060008060608789031215610554578182fd5b863567ffffffffffffffff8082111561056b578384fd5b6105778a838b016104d0565b9098509650602089013591508082111561058f578384fd5b61059b8a838b016104d0565b909650945060408901359150808211156105b3578384fd5b506105c089828a016104d0565b979a9699509497509295939492505050565b600080602083850312156105e4578182fd5b823567ffffffffffffffff8111156105fa578283fd5b610606858286016104d0565b90969095509350505050565b60008060008060608587031215610627578384fd5b843567ffffffffffffffff8082111561063e578586fd5b81870188601f82011261064f578687fd5b803592508183111561065f578687fd5b886020848301011115610670578687fd5b6020908101965091945050850135610687816107bf565b9396929550929360400135925050565b6000806000604084860312156106ab578283fd5b83356106b6816107bf565b9250602084013567ffffffffffffffff8111156106d1578283fd5b6106dd868287016104d0565b9497909650939450505050565b6000828483379101908152919050565b6001600160a01b0391909116815260200190565b6020808252600f908201526e2727afa1a7a222afa0aa2fa0a2222960891b604082015260600190565b60208082526003908201526247415360e81b604082015260600190565b6020808252600a908201526927a7262cafa7aba722a960b11b604082015260600190565b6000808335601e1984360301811261078e578283fd5b8084018035925067ffffffffffffffff8311156107a9578384fd5b6020019250503681900382131561051257600080fd5b6001600160a01b03811681146107d457600080fd5b5056fea26469706673582212204f7b4eb23b91e7bd165fe733500b6e4250fd20ccdaa72205b2d7bece6dae1cc564736f6c634300060b0033'
